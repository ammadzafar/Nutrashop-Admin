[{"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\index.js":"1","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\reportWebVitals.js":"2","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\App.js":"3","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\Routes\\routes.js":"4","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\store.js":"5","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\collections.js":"6","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\products.js":"7","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\brands.js":"8","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\attributes.js":"9","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\modules.js":"10","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\users.js":"11","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\customers.js":"12","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\roles.js":"13","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\reviews.js":"14","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\variants.js":"15","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\menus.js":"16","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\questions.js":"17","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\OrderReducers\\orders.js":"18","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\banners.js":"19","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\AuthReducer\\auth.js":"20","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Question\\Question.js":"21","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\Dashboard.js":"22","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Layout\\index.js":"23","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\invoice.js":"24","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Customer\\Customer.js":"25","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Banners\\Banners.js":"26","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Reviews\\Reviews.js":"27","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Attribute\\Attribute\\Attributes.js":"28","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Brand\\Brands\\Brands.js":"29","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Banners\\NewBanners\\newBanners.js":"30","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Product\\Products\\Products.js":"31","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Collection\\Collections\\Collections.js":"32","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Product\\EditProduct\\EditProduct.js":"33","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Auth\\Login\\index.js":"34","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Order\\Orders\\Orders.js":"35","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\User\\NewUser\\NewUser.js":"36","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Product\\NewProduct\\NewProduct.js":"37","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Roles\\NewRoles\\NewRoles.js":"38","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\User\\EditUser\\EditUser.js":"39","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Roles\\Roles\\Roles.js":"40","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\User\\User\\User.js":"41","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Menu\\Menus\\Menus.js":"42","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Variations\\NewVariationis\\Variations.js":"43","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Variations\\AllProductVariations\\AllProdcutVariations.js":"44","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Variations\\EditVariations\\EditVariation.js":"45","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Auth\\ForgotPassword\\index.js":"46","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\attributeActions.js":"47","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\brandActions.js":"48","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\moduleActions.js":"49","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\productActions.js":"50","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\userActions.js":"51","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\reviewActions.js":"52","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\customerActions.js":"53","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\collectionActions.js":"54","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\variantActions.js":"55","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\menuActions.js":"56","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\questionActions.js":"57","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\roleActions.js":"58","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\bannerActions.js":"59","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\AuthActions\\auth.js":"60","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\OrderActions\\orderActions.js":"61","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Variations\\VariationMaterials\\VariationMaterial.js":"62","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Variations\\VariationMaterials\\VariationsTable.js":"63","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Menu\\EditMenus\\EditMenus.js":"64","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Menu\\NewMenu\\NewMenu.js":"65","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\components\\PopConfirm\\PopConfirm.js":"66","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\components\\ImageUploader\\Uploader.js":"67","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Auth\\Login\\Login.js":"68","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Order\\VerifiedOrder\\VerifiedOrders.js":"69","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Order\\RefundOrder\\RefundOrders.js":"70","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Order\\DeliveredOrders\\DeliveredOrders.js":"71","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Order\\CancelledOrders\\CancelledOrders.js":"72","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Order\\InTransit Orders\\InTransitOrders.js":"73","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Order\\PendingOrders\\PendingOrder.js":"74","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\components\\Card\\Card.js":"75","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Auth\\ForgotPassword\\ForgotPassword.js":"76","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Variations\\VariationMaterials\\VariationSelect.js":"77","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Menu\\EditMenus\\Form.js":"78","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Collection\\EditCollection\\EditCollection.js":"79","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Collection\\NewCollection\\NewCollection.js":"80","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\components\\ProductModal\\ProductModal.js":"81","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\thankYou.js":"82","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\invoiceItemTables.js":"83","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\invoiceNo.js":"84","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\billTo.js":"85","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\invoiceHeading.js":"86","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Product\\Import\\Import.js":"87","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Attribute\\EditAttribute\\EditAttribute.js":"88","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Brand\\EditBrand\\EditBrand.js":"89","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Brand\\NewBrand\\NewBrand.js":"90","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Customer\\EditCustomer\\EditCustomer.js":"91","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Attribute\\NewAttribute\\NewAttribute.js":"92","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Customer\\NewCustomer\\NewCustomer.js":"93","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\data\\invoice_data.js":"94","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Layout\\Header\\Header.js":"95","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Layout\\Sider\\index.js":"96","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\LatestOrders\\LatestOrders.js":"97","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\LastestReview\\LatestReview.js":"98","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\LatestQuestions\\LatestQuestion.js":"99","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\Utils\\helpers.js":"100","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\components\\OrderModal\\OrderModal.js":"101","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Collection\\EditCollection\\Form.js":"102","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\footer.js":"103","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\tableRows.js":"104","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\space.js":"105","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Customer\\EditCustomer\\Form.js":"106","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Brand\\EditBrand\\Form.js":"107","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\tableHeaders.js":"108","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\LatestCustomers\\LatestCustomers.js":"109","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\PendingOrder\\Order-pending.js":"110","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\PieChart\\PieChart.js":"111","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\LatestProduct\\LatestProduct.js":"112","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\DashBoard-cards\\DashBoard-card.js":"113"},{"size":735,"mtime":1630104287623,"results":"114","hashOfConfig":"115"},{"size":375,"mtime":1619378515556,"results":"116","hashOfConfig":"115"},{"size":1175,"mtime":1645447807078,"results":"117","hashOfConfig":"115"},{"size":6288,"mtime":1645447807079,"results":"118","hashOfConfig":"115"},{"size":2017,"mtime":1645447807166,"results":"119","hashOfConfig":"115"},{"size":1402,"mtime":1645447807164,"results":"120","hashOfConfig":"115"},{"size":961,"mtime":1619378515570,"results":"121","hashOfConfig":"115"},{"size":918,"mtime":1619378515567,"results":"122","hashOfConfig":"115"},{"size":1137,"mtime":1645447807162,"results":"123","hashOfConfig":"115"},{"size":381,"mtime":1625595740026,"results":"124","hashOfConfig":"115"},{"size":902,"mtime":1626270658698,"results":"125","hashOfConfig":"115"},{"size":982,"mtime":1619378515569,"results":"126","hashOfConfig":"115"},{"size":902,"mtime":1626270658696,"results":"127","hashOfConfig":"115"},{"size":380,"mtime":1631777631077,"results":"128","hashOfConfig":"115"},{"size":563,"mtime":1645447807165,"results":"129","hashOfConfig":"115"},{"size":1465,"mtime":1645447807165,"results":"130","hashOfConfig":"115"},{"size":1241,"mtime":1631777631076,"results":"131","hashOfConfig":"115"},{"size":2990,"mtime":1647096890130,"results":"132","hashOfConfig":"115"},{"size":796,"mtime":1645447807163,"results":"133","hashOfConfig":"115"},{"size":716,"mtime":1645447807161,"results":"134","hashOfConfig":"115"},{"size":8387,"mtime":1631777631071,"results":"135","hashOfConfig":"115"},{"size":4459,"mtime":1645447807107,"results":"136","hashOfConfig":"115"},{"size":911,"mtime":1629745947404,"results":"137","hashOfConfig":"115"},{"size":1797,"mtime":1645447807119,"results":"138","hashOfConfig":"115"},{"size":4774,"mtime":1628081929636,"results":"139","hashOfConfig":"115"},{"size":4296,"mtime":1645447807095,"results":"140","hashOfConfig":"115"},{"size":4917,"mtime":1631777631072,"results":"141","hashOfConfig":"115"},{"size":3685,"mtime":1645447807089,"results":"142","hashOfConfig":"115"},{"size":6279,"mtime":1645447807098,"results":"143","hashOfConfig":"115"},{"size":19609,"mtime":1645447807097,"results":"144","hashOfConfig":"115"},{"size":12129,"mtime":1645447807139,"results":"145","hashOfConfig":"115"},{"size":10284,"mtime":1645447807100,"results":"146","hashOfConfig":"115"},{"size":14462,"mtime":1645451598962,"results":"147","hashOfConfig":"115"},{"size":233,"mtime":1619378515512,"results":"148","hashOfConfig":"115"},{"size":2500,"mtime":1626270658677,"results":"149","hashOfConfig":"115"},{"size":7230,"mtime":1626270658686,"results":"150","hashOfConfig":"115"},{"size":39140,"mtime":1645452236260,"results":"151","hashOfConfig":"115"},{"size":6333,"mtime":1625656756332,"results":"152","hashOfConfig":"115"},{"size":7899,"mtime":1626270658684,"results":"153","hashOfConfig":"115"},{"size":2283,"mtime":1626270658681,"results":"154","hashOfConfig":"115"},{"size":8362,"mtime":1626351892050,"results":"155","hashOfConfig":"115"},{"size":4783,"mtime":1647096890116,"results":"156","hashOfConfig":"115"},{"size":5950,"mtime":1645447807143,"results":"157","hashOfConfig":"115"},{"size":7083,"mtime":1645447807141,"results":"158","hashOfConfig":"115"},{"size":8207,"mtime":1647096995738,"results":"159","hashOfConfig":"115"},{"size":347,"mtime":1619378515510,"results":"160","hashOfConfig":"115"},{"size":1354,"mtime":1647096890125,"results":"161","hashOfConfig":"115"},{"size":1313,"mtime":1647096890126,"results":"162","hashOfConfig":"115"},{"size":523,"mtime":1631777631073,"results":"163","hashOfConfig":"115"},{"size":1383,"mtime":1647096890128,"results":"164","hashOfConfig":"115"},{"size":1223,"mtime":1626270658693,"results":"165","hashOfConfig":"115"},{"size":1107,"mtime":1631777631075,"results":"166","hashOfConfig":"115"},{"size":1328,"mtime":1627284644964,"results":"167","hashOfConfig":"115"},{"size":1574,"mtime":1647096890126,"results":"168","hashOfConfig":"115"},{"size":1045,"mtime":1647096890129,"results":"169","hashOfConfig":"115"},{"size":1439,"mtime":1647096890127,"results":"170","hashOfConfig":"115"},{"size":1624,"mtime":1631777631074,"results":"171","hashOfConfig":"115"},{"size":1152,"mtime":1626270658690,"results":"172","hashOfConfig":"115"},{"size":1131,"mtime":1645447807156,"results":"173","hashOfConfig":"115"},{"size":295,"mtime":1624625185355,"results":"174","hashOfConfig":"115"},{"size":9048,"mtime":1647096890123,"results":"175","hashOfConfig":"115"},{"size":2662,"mtime":1645447807151,"results":"176","hashOfConfig":"115"},{"size":7423,"mtime":1645447807153,"results":"177","hashOfConfig":"115"},{"size":5188,"mtime":1647096890153,"results":"178","hashOfConfig":"115"},{"size":10141,"mtime":1645447807130,"results":"179","hashOfConfig":"115"},{"size":1384,"mtime":1631777631058,"results":"180","hashOfConfig":"115"},{"size":2400,"mtime":1645447807085,"results":"181","hashOfConfig":"115"},{"size":2738,"mtime":1626344809406,"results":"182","hashOfConfig":"115"},{"size":9308,"mtime":1647096890122,"results":"183","hashOfConfig":"115"},{"size":9248,"mtime":1647096890121,"results":"184","hashOfConfig":"115"},{"size":9353,"mtime":1647096890118,"results":"185","hashOfConfig":"115"},{"size":9406,"mtime":1647096890117,"results":"186","hashOfConfig":"115"},{"size":9436,"mtime":1647096890119,"results":"187","hashOfConfig":"115"},{"size":9229,"mtime":1647096890120,"results":"188","hashOfConfig":"115"},{"size":485,"mtime":1626352002361,"results":"189","hashOfConfig":"115"},{"size":1453,"mtime":1619378515508,"results":"190","hashOfConfig":"115"},{"size":1448,"mtime":1645447807152,"results":"191","hashOfConfig":"115"},{"size":5986,"mtime":1647096995728,"results":"192","hashOfConfig":"115"},{"size":5226,"mtime":1645447807101,"results":"193","hashOfConfig":"115"},{"size":12463,"mtime":1645447807104,"results":"194","hashOfConfig":"115"},{"size":2360,"mtime":1645447807088,"results":"195","hashOfConfig":"115"},{"size":546,"mtime":1645447807123,"results":"196","hashOfConfig":"115"},{"size":884,"mtime":1645447807120,"results":"197","hashOfConfig":"115"},{"size":1105,"mtime":1645447807121,"results":"198","hashOfConfig":"115"},{"size":775,"mtime":1645447807117,"results":"199","hashOfConfig":"115"},{"size":576,"mtime":1645447807119,"results":"200","hashOfConfig":"115"},{"size":3402,"mtime":1619378515550,"results":"201","hashOfConfig":"115"},{"size":9921,"mtime":1645447807090,"results":"202","hashOfConfig":"115"},{"size":4728,"mtime":1628081812931,"results":"203","hashOfConfig":"115"},{"size":7454,"mtime":1645447807099,"results":"204","hashOfConfig":"115"},{"size":4979,"mtime":1628081812937,"results":"205","hashOfConfig":"115"},{"size":8802,"mtime":1645447807091,"results":"206","hashOfConfig":"115"},{"size":7892,"mtime":1628863838052,"results":"207","hashOfConfig":"115"},{"size":1112,"mtime":1645447807154,"results":"208","hashOfConfig":"115"},{"size":1687,"mtime":1645447807124,"results":"209","hashOfConfig":"115"},{"size":2186,"mtime":1647096890115,"results":"210","hashOfConfig":"115"},{"size":1600,"mtime":1645447807110,"results":"211","hashOfConfig":"115"},{"size":1673,"mtime":1645447807108,"results":"212","hashOfConfig":"115"},{"size":1379,"mtime":1645447807114,"results":"213","hashOfConfig":"115"},{"size":2512,"mtime":1645447807080,"results":"214","hashOfConfig":"115"},{"size":14192,"mtime":1645447807086,"results":"215","hashOfConfig":"115"},{"size":5620,"mtime":1647096890114,"results":"216","hashOfConfig":"115"},{"size":1120,"mtime":1645447807118,"results":"217","hashOfConfig":"115"},{"size":1538,"mtime":1645447807123,"results":"218","hashOfConfig":"115"},{"size":1306,"mtime":1645447807121,"results":"219","hashOfConfig":"115"},{"size":4595,"mtime":1623059489166,"results":"220","hashOfConfig":"115"},{"size":3678,"mtime":1619378515516,"results":"221","hashOfConfig":"115"},{"size":1189,"mtime":1645447807122,"results":"222","hashOfConfig":"115"},{"size":1753,"mtime":1645447807109,"results":"223","hashOfConfig":"115"},{"size":3991,"mtime":1645447807115,"results":"224","hashOfConfig":"115"},{"size":2472,"mtime":1645447807117,"results":"225","hashOfConfig":"115"},{"size":1660,"mtime":1645447807112,"results":"226","hashOfConfig":"115"},{"size":1215,"mtime":1645447807105,"results":"227","hashOfConfig":"115"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},"82lnt5",{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"230"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"230"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"230"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"230"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"230"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"230"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"230"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"230"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"230"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"230"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"230"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"230"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"230"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"230"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"230"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"230"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"230"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"230"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"230"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"230"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"230"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"230"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"230"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"230"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"230"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"230"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"230"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"230"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"230"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"230"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"230"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"230"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"230"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"230"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"230"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"230"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"230"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"230"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"230"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"230"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"230"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"230"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"230"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"230"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"230"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"230"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"230"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"230"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"230"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"230"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"230"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"230"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"230"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"230"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"230"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"230"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"230"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"230"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"230"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"230"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"230"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"230"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"230"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"230"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"230"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"230"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"230"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"230"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"230"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"511"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"230"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"230"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"230"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"230"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"230"},"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\index.js",[],["531","532"],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\reportWebVitals.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\App.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\Routes\\routes.js",["533","534","535"],"import { React } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Login from \"../../src/containers/Auth/Login/index\";\r\nimport Layout from \"../../src/containers/Layout/index\";\r\nimport Brands from \"./../containers/Brand/Brands/Brands\";\r\nimport Collections from \"./../containers/Collection/Collections/Collections\";\r\nimport Attributes from \"./../containers/Attribute/Attribute/Attributes\";\r\nimport Dashboard from \"./../containers/Dashboard/Dashboard\";\r\nimport Products from \"./../containers/Product/Products/Products\";\r\nimport Orders from \"./../containers/Order/Orders/Orders\";\r\nimport {FinalInvoice} from \"./../containers/Invoice/invoice\";\r\nimport CreateProduct from \"./../containers/Product/NewProduct/NewProduct\";\r\nimport ForgotPassword from \"./../containers/Auth/ForgotPassword\";\r\nimport Menu from \"./../containers/Menu/Menus/Menus\";\r\nimport EditProduct from \"./../containers/Product/EditProduct/EditProduct\";\r\nimport Customer from \"./../containers/Customer/Customer\";\r\nimport NewRole from \"../containers/Roles/NewRoles/NewRoles\";\r\nimport Roles from \"../containers/Roles/Roles/Roles\";\r\nimport Users from \"../containers/User/User/User\";\r\nimport Question from \"../containers/Question/Question\";\r\nimport Banners from \"../containers/Banners/NewBanners/newBanners\";\r\nimport NewUsers from \"../containers/User/NewUser/NewUser\";\r\nimport EditUser from \"../containers/User/EditUser/EditUser\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Reviews from \"../containers/Reviews/Reviews\";\r\nimport NewBanners from \"../containers/Banners/Banners\";\r\nimport Variations from \"../containers/Variations/NewVariationis/Variations\";\r\nimport EditVariation from \"../containers/Variations/EditVariations/EditVariation\";\r\nimport AllProductVariations from \"../containers/Variations/AllProductVariations/AllProdcutVariations\";\r\n\r\n\r\nexport default function Routes() {\r\n\r\n    const {isAuthenticated} = useSelector(({auth}) => auth);\r\n\r\n    return (\r\n       <BrowserRouter>\r\n           <Switch>\r\n               <Route path='/' exact component={Login}/>\r\n               <Route path='/forgot-password' exact component={ForgotPassword}/>\r\n               {isAuthenticated?\r\n                   <Layout>\r\n                       <Route component={({ match }) =>\r\n                           <div>\r\n                               {/*<Route path=\"/\" exact render={()=>{<h1>Dashboard</h1>}}/>*/}\r\n                               <Route path=\"/dashboard\"  component={Dashboard}/>\r\n                               <Route path=\"/brands\"  component={Brands}/>\r\n                               <Route path=\"/collections\"  component={Collections}/>\r\n                               <Route path=\"/attributes\"  component={Attributes}/>\r\n                               <Route path=\"/products\"  component={Products}/>\r\n                               <Route path=\"/product/create\"  component={CreateProduct}/>\r\n                               <Route path=\"/product/edit/:id\"  component={EditProduct}/>\r\n                               <Route path=\"/orders\"  component={Orders}/>\r\n                               <Route path=\"/menus\"  component={Menu}/>\r\n                               <Route path=\"/customers\" component={Customer}/>\r\n                               <Route path=\"/roles\" component={Roles}/>\r\n                               <Route path=\"/role/create\" component={NewRole}/>\r\n                               <Route path=\"/user/create\" component={NewUsers}/>\r\n                               <Route path=\"/users\" component={Users}/>\r\n                               <Route path=\"/user/edit/:id\" component={EditUser}/>\r\n                               <Route path=\"/question\" component={Question}/>\r\n                               <Route path=\"/reviews\" component={Reviews}/>\r\n                               <Route path=\"/newBanner\" component={Banners}/>\r\n                               <Route path=\"/banners\" component={NewBanners}/>\r\n                               <Route path=\"/product/variation/:id\" component={Variations}/>\r\n                               <Route path=\"/product/editvariation/:id\" component={EditVariation}/>\r\n                               <Route path=\"/product/allproductvariants/:id\" component={AllProductVariations}/>\r\n                               <Route path=\"/product/finalinvoice\" component={FinalInvoice}/>\r\n                           </div>\r\n                       }/>\r\n                   </Layout>\r\n                   : <Redirect to='/'/>}\r\n           </Switch>\r\n       </BrowserRouter>\r\n    )\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Login} />\r\n        <Route path=\"/forgot-password\" exact component={ForgotPassword} />\r\n        {isAuthenticated ? (\r\n          <Layout>\r\n            <Route\r\n              component={({ match }) => (\r\n                <div>\r\n                  {/*<Route path=\"/\" exact render={()=>{<h1>Dashboard</h1>}}/>*/}\r\n                  <Route path=\"/dashboard\" component={Dashboard} />\r\n                  <Route path=\"/brands\" component={Brands} />\r\n                  <Route path=\"/collections\" component={Collections} />\r\n                  <Route path=\"/attributes\" component={Attributes} />\r\n                  <Route path=\"/products\" component={Products} />\r\n                  <Route path=\"/product/create\" component={CreateProduct} />\r\n                  <Route path=\"/product/edit/:id\" component={EditProduct} />\r\n                  <Route path=\"/orders\" component={Orders} />\r\n                  <Route path=\"/menus\" component={Menu} />\r\n                  <Route path=\"/customers\" component={Customer} />\r\n                  <Route path=\"/roles\" component={Roles} />\r\n                  <Route path=\"/role/create\" component={NewRole} />\r\n                  <Route path=\"/user/create\" component={NewUsers} />\r\n                  <Route path=\"/users\" component={Users} />\r\n                  <Route path=\"/user/edit/:id\" component={EditUser} />\r\n                  <Route path=\"/question\" component={Question} />\r\n                </div>\r\n              )}\r\n            />\r\n          </Layout>\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )}\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\store.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\collections.js",["536"],"import * as actionTypes from '../actions/collectionActions'\r\n\r\nconst initialState = {\r\n    collections: [],\r\n    collection: '',\r\n    parentCollections:'',\r\n    parentIds:[],\r\n}\r\nconst brands = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case actionTypes.STORE_COLLECTIONS:\r\n            // const parentColl=action.value.filter(collection=> collection.collectionId==null)\r\n            return {\r\n                ...state,\r\n                collections: action.value,\r\n                // parentCollections: parentColl\r\n            }\r\n        case actionTypes.EDIT_COLLECTION:\r\n            let newData = action.value.parentCollections.length !==0 ?action.value.parentCollections.map(collection =>collection.id):[]\r\n            return {\r\n                ...state,\r\n                collection: action.value,\r\n                parentCollections: [],\r\n                parentIds:newData,\r\n            }\r\n        case actionTypes.ADD_COLLECTION:\r\n            return {\r\n                ...state,\r\n                collections: state.collections.concat(action.value),\r\n            }\r\n\r\n        case actionTypes.DELETE_COLLECTION:\r\n            const updatedArray=state.collections.filter(brand=> brand.key!==action.value)\r\n            return {\r\n                ...state,\r\n                collections: updatedArray\r\n            }\r\n\r\n\r\n    }\r\n\r\n    return state\r\n}\r\nexport default brands\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\products.js",["537"],"import * as actionTypes from '../actions/productActions'\r\n\r\nconst initialState = {\r\n    products: [],\r\n    product: '',\r\n}\r\nconst products = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.STORE_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                products: action.value\r\n            }\r\n        case actionTypes.EDIT_PRODUCT:\r\n            return {\r\n                ...state,\r\n                products: action.value\r\n            }\r\n        case actionTypes.ADD_PRODUCT:\r\n            return {\r\n                ...state,\r\n                products: state.products.concat(action.value)\r\n            }\r\n\r\n        case actionTypes.DELETE_PRODUCT:\r\n            const updatedArray=state.products.filter(product=> product.key!==action.value)\r\n            return {\r\n                ...state,\r\n                products: updatedArray\r\n            }\r\n\r\n\r\n    }\r\n\r\n    return state\r\n}\r\nexport default products\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\brands.js",["538"],"import * as actionTypes from '../actions/brandActions'\r\n\r\nconst initialState = {\r\n    brands: [],\r\n    brand: '',\r\n}\r\nconst brands = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.STORE_BRANDS:\r\n            return {\r\n                ...state,\r\n                brands: action.value\r\n            }\r\n        case actionTypes.EDIT_BRAND:\r\n            return {\r\n                ...state,\r\n                brand: action.value\r\n            }\r\n        case actionTypes.ADD_BRAND:\r\n            return {\r\n                ...state,\r\n                brands: state.brands.concat(action.value)\r\n            }\r\n        case actionTypes.DELETE_BRAND:\r\n            const updatedArray=state.brands.filter(brand=> brand.key!==action.value)\r\n            return {\r\n                ...state,\r\n                brands: updatedArray\r\n            }\r\n    }\r\n    return state\r\n}\r\nexport default brands\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\attributes.js",["539"],"import * as actionTypes from '../actions/attributeActions'\r\n\r\nconst initialState = {\r\n    attributes: [],\r\n    attribute: '',\r\n}\r\nconst brands = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.STORE_ATTRIBUTES:\r\n            return {\r\n                ...state,\r\n                attributes: action.value\r\n            }\r\n        case actionTypes.EDIT_ATTRIBUTES:\r\n            let updatedArrayForEdit = state.attributes.filter(attribute=> attribute.key !== action.value.key)\r\n            return {\r\n                ...state,\r\n                attributes: updatedArrayForEdit.concat(action.value)\r\n            }\r\n        case actionTypes.ADD_ATTRIBUTE:\r\n            return {\r\n                ...state,\r\n                attributes: state.attributes.concat(action.value)\r\n            }\r\n        //\r\n        case actionTypes.DELETE_ATTRIBUTE:\r\n            const updatedArray=state.attributes.filter(attribute=> attribute.key!==action.value)\r\n            return {\r\n                ...state,\r\n                attributes: updatedArray\r\n            }\r\n\r\n\r\n    }\r\n\r\n    return state\r\n}\r\nexport default brands\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\modules.js",["540"],"import * as actionTypes from '../actions/moduleActions'\r\n\r\nconst initialState = {\r\n    modules: [],\r\n}\r\nconst modules = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.STORE_MODULES:\r\n            return {\r\n                ...state,\r\n                modules: action.value\r\n            }\r\n    }\r\n    return state\r\n}\r\nexport default modules\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\users.js",["541"],"import * as actionTypes from '../actions/userActions'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    user: '',\r\n}\r\nconst users = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.STORE_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.value\r\n            }\r\n        case actionTypes.EDIT_USER:\r\n            return {\r\n                ...state,\r\n                users: action.value\r\n            }\r\n        case actionTypes.ADD_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.concat(action.value)\r\n            }\r\n        case actionTypes.DELETE_USER:\r\n            const updatedArray=state.users.filter(user=> user.key!==action.value)\r\n            return {\r\n                ...state,\r\n                users: updatedArray\r\n            }\r\n    }\r\n    return state\r\n}\r\nexport default users\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\customers.js",["542"],"import * as actionTypes from \"../actions/customerActions\"\r\n\r\nconst initialState = {\r\n    customers:[],\r\n    customer:''\r\n}\r\n\r\nconst customers = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case actionTypes.STORE_CUSTOMERS:\r\n            return {\r\n                ...state,\r\n                customers: action.value\r\n            }\r\n        case actionTypes.ADD_CUSTOMER:\r\n            return {\r\n                ...state,\r\n                customers:state.customers.concat(action.value)\r\n            }\r\n        case actionTypes.DELETE_CUSTOMER:\r\n            const updatedArray=state.customers.filter(customer=> customer.key!==action.value)\r\n            return {\r\n                ...state,\r\n                customers:updatedArray\r\n            }\r\n        case actionTypes.EDIT_CUSTOMER:\r\n            return {\r\n                ...state,\r\n                customer:action.value\r\n            }\r\n    }\r\n    return {\r\n        state,\r\n    }\r\n}\r\n\r\nexport default customers","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\roles.js",["543"],"import * as actionTypes from '../actions/roleActions'\r\n\r\nconst initialState = {\r\n    roles: [],\r\n    role: '',\r\n}\r\nconst roles = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.STORE_ROLES:\r\n            return {\r\n                ...state,\r\n                roles: action.value\r\n            }\r\n        case actionTypes.EDIT_ROLE:\r\n            return {\r\n                ...state,\r\n                roles: action.value\r\n            }\r\n        case actionTypes.ADD_ROLE:\r\n            return {\r\n                ...state,\r\n                roles: state.roles.concat(action.value)\r\n            }\r\n        case actionTypes.DELETE_ROLE:\r\n            const updatedArray=state.roles.filter(role=> role.key!==action.value)\r\n            return {\r\n                ...state,\r\n                roles: updatedArray\r\n            }\r\n    }\r\n    return state\r\n}\r\nexport default roles\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\reviews.js",["544"],"import * as actionTypes from '../actions/reviewActions'\r\n\r\nconst initialState = {\r\n    reviews: []\r\n}\r\nconst reviews = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.STORE_REVIEWS:\r\n            return {\r\n                ...state,\r\n                reviews: action.value\r\n            }\r\n    }\r\n    return state\r\n}\r\nexport default reviews\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\variants.js",["545"],"import * as actionTypes from '../actions/variantActions'\r\n\r\nconst initialState = {\r\n    variants: [],\r\n    variant: '',\r\n}\r\nconst variants = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.STORE_ALL_PRODUCT_VARIANTS:\r\n            return {\r\n                ...state,\r\n                variants: action.value\r\n            }\r\n        case actionTypes.EDIT_VARIANT:\r\n            return {\r\n                ...state,\r\n                variants: action.value\r\n            }\r\n    }\r\n\r\n    return state\r\n}\r\nexport default variants\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\menus.js",["546"],"import * as actionTypes from '../actions/menuActions'\r\n\r\nconst initialState = {\r\n    menus: [],\r\n    menu: '',\r\n    menuCollections: []\r\n\r\n}\r\nconst menus = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.STORE_MENUS:\r\n            return {\r\n                ...state,\r\n                menus: action.value\r\n            }\r\n        case actionTypes.EDIT_MENU:\r\n            let collections = []\r\n            action.value.collections.map((collection) => collections.push(collection.id))\r\n            return {\r\n                ...state,\r\n                menuCollections: collections,\r\n                menu:action.value\r\n            }\r\n        // case actionTypes.EDIT_MENU:\r\n        //     let collections = action.value.collections\r\n        //     let coll=[]\r\n        //     collections.map((collection) => coll.push(collection.id))\r\n        //     return {\r\n        //         ...state,\r\n        //         menu: action.value,\r\n        //         menuCollections: coll\r\n        //     }\r\n        case actionTypes.ADD_MENU:\r\n            return {\r\n                ...state,\r\n                menus: state.menus.concat(action.value)\r\n\r\n            }\r\n\r\n        case actionTypes.DELETE_MENU:\r\n            const updatedArray=state.menus.filter(menu=> menu.key!==action.value)\r\n            return {\r\n                ...state,\r\n                menus: updatedArray\r\n            }\r\n\r\n\r\n    }\r\n\r\n    return state\r\n}\r\nexport default menus\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\questions.js",["547"],"import * as actionTypes from \"../actions/questionActions\";\r\n\r\nconst initialState = {\r\n  questions: [],\r\n  question: \"\",\r\n};\r\nconst questions = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.STORE_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        questions: action.value\r\n      }\r\n    // case actionTypes.EDIT_QUESTION:\r\n    //   // console.log(action.value.notificationId)\r\n    //   console.log(action.value.answer)\r\n    //   var oldQuestion = state.questions.find( (question) => question.key = action.value.notificationId)\r\n    //   // var removeQuestion = state.questions.filter( (question) => question.key !== action.value.notificationId)\r\n    //   //   // var updatedQuestion = oldQuestion.answer = action.value.answer\r\n    //   //   console.log(oldQuestion)\r\n    //   //   // console.log(action.value.answer)\r\n    //   //   console.log(removeQuestion)\r\n    //\r\n    //   return {\r\n    //     ...state,\r\n    //   };\r\n\r\n    case actionTypes.DELETE_QUESTION:\r\n      const updatedArray = state.questions.filter(\r\n        (brand) => brand.key !== action.value\r\n      );\r\n      return {\r\n        ...state,\r\n        brands: updatedArray,\r\n      };\r\n  }\r\n  return state;\r\n};\r\nexport default questions;\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\OrderReducers\\orders.js",["548"],"import * as actionTypes from '../../actions/OrderActions/orderActions'\r\nimport {STORE_CHANGE_IN_ORDERS} from \"../../actions/OrderActions/orderActions\";\r\n\r\nconst initialState = {\r\n    deliveredOrders: [],\r\n    deliveredOrder: \"\",\r\n    cancelledOrders: [],\r\n    cancelledOrder: \"\",\r\n    inTransitOrders: [],\r\n    inTransitOrder: \"\",\r\n    pendingOrders: [],\r\n    pendingOrder: \"\",\r\n    refundOrders: [],\r\n    refundOrder: \"\",\r\n    verifiedOrders: [],\r\n    verifiedOrder: '',\r\n    allUnread: 0,\r\n}\r\n\r\nconst Orders = (state = initialState, action) => {\r\n    // eslint-disable-next-line default-case\r\n    switch (action.type) {\r\n        case actionTypes.STORE_ALL_UNREAD_ORDERS:\r\n            return {\r\n                ...state,\r\n                allUnread: action.value\r\n            }\r\n        case actionTypes.STORE_CHANGE_IN_ORDERS:\r\n            return {\r\n                ...state,\r\n                allUnread: state.allUnread - 1\r\n            }\r\n        case actionTypes.STORE_DELIVERED_ORDERS:\r\n            return {\r\n                ...state,\r\n                deliveredOrders: action.value\r\n            }\r\n        case actionTypes.STORE_ONE_DELIVERED_ORDER:\r\n            return {\r\n                ...state,\r\n                deliveredOrder: action.value\r\n            }\r\n        // cancelled orders reducers\r\n        case actionTypes.STORE_ONE_CANCELLED_ORDER:\r\n            return {\r\n                ...state,\r\n                cancelledOrder: action.value\r\n            }\r\n        case actionTypes.STORE_CANCELLED_ORDERS:\r\n            return {\r\n                ...state,\r\n                cancelledOrders: action.value\r\n            }\r\n        // inTransit Order reducers\r\n        case actionTypes.STORE_IN_TRANSIT_ORDERS:\r\n            return {\r\n                ...state,\r\n                inTransitOrders: action.value\r\n            }\r\n        case actionTypes.STORE_ONE_IN_TRANSIT_ORDER:\r\n            return {\r\n                ...state,\r\n                inTransitOrder: action.value\r\n            }\r\n        case actionTypes.STORE_PENDING_ORDERS:\r\n            return {\r\n                ...state,\r\n                pendingOrders: action.value\r\n            }\r\n        case actionTypes.STORE_ONE_PENDING_ORDER:\r\n            return {\r\n                ...state,\r\n                pendingOrder: action.value\r\n            }\r\n        case actionTypes.STORE_REFUND_ORDERS:\r\n            return {\r\n                ...state,\r\n                refundOrders: action.value\r\n            }\r\n        case actionTypes.STORE_ONE_REFUND_ORDER:\r\n            return {\r\n                ...state,\r\n                refundOrder: action.value\r\n            }\r\n        case actionTypes.STORE_ONE_VERIFIED_ORDER:\r\n            return {\r\n                ...state,\r\n                verifiedOrder: action.value\r\n            }\r\n        case actionTypes.STORE_VERIFIED_ORDERS:\r\n            return {\r\n                ...state,\r\n                verifiedOrders: action.value\r\n            }\r\n    }\r\n\r\n    return state\r\n}\r\nexport default Orders;","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\banners.js",["549"],"import * as actionTypes from '../actions/bannerActions'\r\n\r\nconst initialState = {\r\n    banners: [],\r\n    banner: '',\r\n}\r\nconst banners = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.STORE_BANNERS:\r\n            return {\r\n                ...state,\r\n                banners: action.value\r\n            }\r\n        case actionTypes.ADD_BANNER:\r\n            return {\r\n                ...state,\r\n                banners: state.banners.concat(action.value)\r\n            }\r\n        case actionTypes.DELETE_BANNER:\r\n            const updatedArray=state.banners.filter(banners=> banners.id!==action.value)\r\n            return {\r\n                ...state,\r\n                banners: updatedArray\r\n            }\r\n    }\r\n    return state\r\n}\r\nexport default banners;\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\reducers\\AuthReducer\\auth.js",["550"],"\r\n\r\nimport * as actionTypes from '../../actions/AuthActions/auth'\r\n\r\nconst initialState = {\r\n    auth: {},\r\n    isAuthenticated: false,\r\n    modules: {},\r\n}\r\nconst auth = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.STORE_AUTH:\r\n            return {\r\n                ...state,\r\n                auth: action.value,\r\n                modules: action.value.user.role.modules,\r\n                isAuthenticated: true\r\n            }\r\n        case actionTypes.LOGOUT:\r\n            return {\r\n                ...state,\r\n                auth: {},\r\n                modules: {},\r\n                isAuthenticated: false\r\n            }\r\n    }\r\n    return state\r\n}\r\nexport default auth\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Question\\Question.js",["551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566"],"import {React, useState, useEffect} from \"react\";\r\nimport {\r\n    Button, Form,\r\n    Input,\r\n    Layout,\r\n    message, Modal,\r\n    Space,\r\n    Switch,\r\n    Table,\r\n    Upload,\r\n} from \"antd\";\r\n\r\nimport {\r\n    ArrowDownOutlined,\r\n    ArrowUpOutlined,\r\n    CheckOutlined,\r\n    CloseOutlined,\r\n    EditOutlined,\r\n    PlusOutlined,\r\n    SearchOutlined,\r\n    UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\n// import Import from \"../Import/Import\";\r\nimport {Link} from \"react-router-dom\";\r\nimport * as actionCreators from \"../../store/actions/productActions\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport DeletePop from \"../../components/PopConfirm/PopConfirm\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nimport {dispatchKey} from \"codemirror/src/edit/key_events\";\r\nimport {editQuestion,storeQuestions} from \"../../store/actions/questionActions\";\r\n\r\nconst {Content} = Layout;\r\nconst {Column} = Table;\r\nconst {TextArea} = Input\r\nfunction Question(props) {\r\n    const dispatch = useDispatch()\r\n    const {auth} = useSelector(({auth}) => auth);\r\n    const {questions} = useSelector(({questions}) => questions);\r\n    const [data, setData] = useState([])\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [currentUserId, setCurrentUserId] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const showModal = (key) => {\r\n        alert(key)\r\n        setIsModalVisible(true);\r\n        setCurrentUserId(key)\r\n    };\r\n    console.log(questions)\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        values.userId = auth.id\r\n        setLoading(true)\r\n        axios.put(\"/answer/\"+currentUserId,values).then(success=>{\r\n            values.notificationId = currentUserId\r\n            console.log(success)\r\n            // dispatch(editQuestion(values))\r\n            message.success(\"Answer Added\")\r\n            setLoading(false)\r\n            setIsModalVisible(false)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n            message.error(\"error\")\r\n            setLoading(false)\r\n        })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(storeQuestions())\r\n    }, [])\r\n\r\n\r\n    const modal =\r\n        <Modal title=\"Submit Your Answer\" visible={isModalVisible} footer=\"\"  onCancel={handleCancel}>\r\n            <Form\r\n                name=\"basic\"\r\n                labelCol={{\r\n                    span: 8,\r\n                }}\r\n                wrapperCol={{\r\n                    span: 16,\r\n                }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Form.Item\r\n                    label=\"Answer\"\r\n                    name=\"answer\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input The Answer!',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <TextArea />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                    }}\r\n                >\r\n                    <Button loading={loading} type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n\r\n    const onChange=(value,collectionObject)=>{\r\n        let collection=new FormData()\r\n        collection.append('visibility',value)\r\n        collection.append(\"userId\",auth.id)\r\n        setLoading(true)\r\n        axios.put('/answer/allowed/'+collectionObject.key, collection).then(response=>{\r\n            message.success(`Answer Successfully Updated as ${value}`)\r\n            setLoading(false)\r\n        }).catch(error=>{\r\n            message.error('Error')\r\n            setLoading(false)\r\n\r\n        })\r\n\r\n    }\r\n    const currentModule = props.match.url.slice(1, 9);\r\n    console.log(currentModule);\r\n    const wholeModule = auth.user.role.modules.find(\r\n        (xx) => xx.slug === currentModule\r\n    );\r\n    const permission = wholeModule.ModuleRole.permission;\r\n    console.log(permission);\r\n\r\n    return <Content style={{margin: \"16px 16px\"}}>\r\n        <div\r\n            className=\"site-layout-background\"\r\n            style={{padding: 24, minHeight: 360}}\r\n        >\r\n            <Table dataSource={questions}>\r\n                <Column\r\n                    className=\"Responsive-1224\"\r\n                    title=\"Sr #\"\r\n                    dataIndex=\"key\"\r\n                    key=\"key\"\r\n                />\r\n                <Column title=\"Customer Name\" dataIndex=\"name\" key=\"name\"/>\r\n                <Column title=\"Product Name\" dataIndex=\"productName\" key=\"productName\"/>\r\n                <Column title=\"Question\" dataIndex=\"question\" key=\"question\"/>\r\n                <Column title=\"AnswerCreated\" dataIndex=\"answerCreatedAt\" key=\"answerCreatedAt\"/>\r\n                <Column title=\"User Name\" dataIndex=\"userName\" key=\"userName\"/>\r\n                <Column title=\"Answer\" dataIndex=\"answer\" key=\"answer\"/>\r\n                {permission === \"read\" ? (\r\n                    \"\"\r\n                ) : (\r\n                    <>\r\n                        <Column\r\n                            className=\"Responsive-1224\"\r\n                            title=\"Created At\"\r\n                            dataIndex=\"createdAt\"\r\n                            key=\"createdAt\"\r\n                        />\r\n                        <Column\r\n                            title=\"visibility\"\r\n                            className=\"Responsive-1224\"\r\n                            dataIndex=\"visibility\"\r\n                            key=\"visibility\"\r\n                            render={(dataIndex, collection) => (\r\n                                <Space size=\"middle\">\r\n                                    <Switch loading={loading}\r\n                                        defaultChecked={dataIndex ?? true}\r\n                                            checkedChildren={<CheckOutlined/>}\r\n                                            unCheckedChildren={<CloseOutlined/>}\r\n                                            onChange={(e) => onChange(e, collection)}/>\r\n\r\n                                </Space>\r\n                            )}\r\n                        />\r\n                        <Column\r\n                            title=\"Action\"\r\n                            dataIndex=\"key\"\r\n                            key=\"action\"\r\n                            render={(key) => (\r\n                                <Space size=\"middle\">\r\n\r\n                                    <MediaQuery minWidth={1224}>\r\n                                        <Button\r\n                                            shape=\"round\"\r\n                                            icon={<EditOutlined/>}\r\n                                            onClick={()=>showModal(key)}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            Add Answer\r\n                                        </Button>\r\n                                        {modal}\r\n                                    </MediaQuery>\r\n\r\n                                    <MediaQuery maxWidth={1224}>\r\n                                        <Button\r\n                                            shape=\"round\"\r\n                                            icon={<EditOutlined/>}\r\n                                            onClick={()=>showModal(key)}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            Add Answer\r\n                                        </Button>\r\n                                        {modal}\r\n                                    </MediaQuery>\r\n\r\n                                </Space>\r\n                            )}\r\n                        />\r\n                    </>\r\n                )}\r\n            </Table>\r\n        </div>\r\n    </Content>;\r\n\r\n}\r\n\r\nexport default Question;\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\Dashboard.js",["567","568","569","570"],"import React from 'react';\r\nimport BoardCard from \"./DashBoard-cards/DashBoard-card\";\r\nimport \"./Dashboard.css\"\r\nimport {Row,Col} from \"antd\";\r\nimport LatestProduct from \"./LatestProduct/LatestProduct\";\r\nimport DemoPie from \"./PieChart/PieChart\";\r\nimport OrderLeft from \"./PendingOrder/Order-pending\";\r\nimport LatestCustomer from \"./LatestCustomers/LatestCustomers\";\r\nimport LatestQuestion from \"./LatestQuestions/LatestQuestion\";\r\nimport LatestReview from \"./LastestReview/LatestReview\";\r\nimport LatestOrder from \"./LatestOrders/LatestOrders\";\r\nfunction Dashboard() {\r\n    const data = [\r\n        { item: 'Test', count: 40, percent: 0.4 },\r\n        { item: 'Test1', count: 21, percent: 0.21 },\r\n        { item: 'Test2', count: 17, percent: 0.17 },\r\n        { item: 'Test3', count: 13, percent: 0.13 },\r\n        { item: 'Test4', count: 9, percent: 0.09 },\r\n    ];\r\n    const cols = {\r\n        percent: {\r\n            formatter: val => {\r\n                val = val * 100 + '%';\r\n                return val;\r\n            },\r\n        },\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"dashboard-main-sec\">\r\n                <div className=\"dashboard-main\">\r\n                       <BoardCard\r\n                           cardColor={\"#E9F1F6\"}\r\n                           cardcheck=\"orders\"\r\n                           checkLabel=\"Total Orders\"\r\n                           checkLink={\"/orders\"}\r\n                           checkIcon={[ <i className=\" fab fa-first-order\"></i>]}\r\n                           checkIconcolor={\"#ff2f00a1\"}\r\n                       />\r\n                        <BoardCard\r\n                            cardColor={\"#E9F1F6\"}\r\n                            cardcheck=\"products\"\r\n                            checkLabel=\"Total Products\"\r\n                            checkLink={\"/products\"}\r\n                            checkIcon={[<i className=\"fas fa-shopping-bag\"></i>]}\r\n                            checkIconcolor={\"teal\"}\r\n                        />\r\n                        <BoardCard\r\n                            cardColor={\"#E9F1F6\"}\r\n                            cardcheck=\"customers\"\r\n                            checkLabel=\"Total Customers\"\r\n                            checkLink={\"/customers\"}\r\n                            checkIcon={[<i className=\"fas fa-users\"></i>]}\r\n                            checkIconcolor={\"olive\"}\r\n                        />\r\n                        <BoardCard\r\n                            cardColor={\"#E9F1F6\"}\r\n                            cardcheck=\"brands\"\r\n                            checkLabel=\"Total Brands\"\r\n                            checkLink= {\"/brands\"}\r\n                            checkIcon={[<i className=\"fab fa-bandcamp\"></i>]}\r\n                            checkIconcolor={\"mauve\"}\r\n                        />\r\n                        <BoardCard\r\n                            cardColor={\"#E9F1F6\"}\r\n                            cardcheck=\"menus\"\r\n                            checkLabel=\"Total Menus\"\r\n                            checkLink={\"/menus\"}\r\n                            checkIcon={[< i className=\"fas fa-ellipsis-v\"></i>]}\r\n                            checkIconcolor={\"cyan\"}\r\n                        />\r\n                        <BoardCard\r\n                            cardColor={\"#E9F1F6\"}\r\n                            cardcheck=\"collections\"\r\n                            checkLabel=\"Total Collections\"\r\n                            checkLink={\"/collections\"}\r\n                            checkIcon={[<i className=\"far fa-tasks\"></i>]}\r\n                            checkIconcolor={\"coral\"}\r\n                        />\r\n                </div>\r\n            <div>\r\n                <LatestProduct/>\r\n            </div>\r\n                <div className=\"charts-style\">\r\n            <div className=\"charts-col1\">\r\n                <DemoPie/>\r\n            </div>\r\n                <div className=\"charts-col2\">\r\n                    <OrderLeft/>\r\n                </div>\r\n                </div>\r\n                <div className=\"customer-table\">\r\n                    <LatestCustomer/>\r\n                </div>\r\n                <div className=\"question-sec\">\r\n                    <LatestQuestion/>\r\n                </div>\r\n                <div className=\"review-sec\">\r\n                    <LatestReview/>\r\n                </div>\r\n                <div>\r\n                    <LatestOrder/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Dashboard;\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Layout\\index.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\invoice.js",["571","572"],"import React from 'react';\r\nimport { Page, Document, Image, StyleSheet } from '@react-pdf/renderer';\r\nimport InvoiceTitle from './invoiceHeading'\r\nimport BillTo from './billTo'\r\nimport InvoiceNo from './invoiceNo'\r\nimport InvoiceItemsTable from './invoiceItemTables'\r\nimport InvoiceThankYouMsg from './thankYou'\r\nimport logo from '../../assets/images/logos/abc.png'\r\nimport {PDFViewer} from '@react-pdf/renderer'\r\nimport invoiceData from '../../data/invoice_data'\r\nimport { ConsoleSqlOutlined } from '@ant-design/icons';\r\nimport {useSelector} from \"react-redux\"\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        fontFamily: 'Helvetica',\r\n        fontSize: 11,\r\n        paddingTop: 30,\r\n        paddingLeft: 60,\r\n        paddingRight: 60,\r\n        lineHeight: 1.5,\r\n        flexDirection: 'column',\r\n    },\r\n    logo: {\r\n        width: 130,\r\n        height: 'auto',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto'\r\n    }\r\n});\r\n\r\nconst FinalInvoice = (props)=>{\r\n    // console.log(props)\r\n    const {pendingOrder} = useSelector(({orders}) => orders);\r\n\r\n   console.log(pendingOrder)\r\n    return(\r\n        <Invoice invoice={pendingOrder}/>\r\n    )\r\n}\r\nconst Invoice = ({ invoice }) => (\r\n <>\r\n  {console.log(invoice)}\r\n     <PDFViewer width=\"1000\" height=\"600\" className=\"app\" >\r\n        <Document>\r\n            <Page size=\"A4\" style={styles.page}>\r\n                <Image style={styles.logo} src={logo} />\r\n                <InvoiceTitle title='Invoice' />\r\n                <InvoiceNo invoice={invoice} />\r\n                <BillTo invoice={invoice} />\r\n                <InvoiceItemsTable invoice={invoice.OrderVariants} />\r\n                <InvoiceThankYouMsg />\r\n            </Page>\r\n        </Document></PDFViewer></>\r\n   \r\n          \r\n    \r\n   \r\n);\r\nexport {Invoice,FinalInvoice}","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Customer\\Customer.js",["573"],"import {React, Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Layout, Space,Button, Table, Popconfirm, message} from \"antd\";\r\nimport * as actionCreators from '../../store/actions/customerActions'\r\nimport PlusOutlined from \"@ant-design/icons/lib/icons/PlusOutlined\";\r\nimport NewCustomer from \"./NewCustomer/NewCustomer\";\r\nimport axios from \"axios\";\r\nimport {EditOutlined} from \"@ant-design/icons\";\r\nimport EditCustomer from \"./EditCustomer/EditCustomer\";\r\nimport DeletePop from \"../../components/PopConfirm/PopConfirm\";\r\nimport MediaQuery from 'react-responsive'\r\n\r\nconst {Column} = Table;\r\nconst {Content} = Layout;\r\n\r\nclass Customer extends Component {\r\n\r\n    state = {\r\n        customers:[],\r\n        visible:false,\r\n        customerId:false,\r\n        editVisible:false,\r\n        auth:[],\r\n    }\r\n    showDrawer = () =>{\r\n        this.setState({\r\n            visible:true,\r\n        })\r\n    }\r\n    editShowDrawer=(id)=>{\r\n       this.setState({\r\n           editVisible:true,\r\n           customerId:id,\r\n       })\r\n    }\r\n     closeEdit = ()=>{\r\n        this.setState({\r\n            editVisible:false\r\n        })\r\n    }\r\n    onClose = () =>{\r\n        this.setState({\r\n            visible: false,\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(actionCreators.storeCustomers())\r\n    }\r\n    deleteCustomer= (id) => {\r\n        axios.delete('customer/' + id).then(response => {\r\n            this.props.dispatch(actionCreators.deleteCustomer(id))\r\n            message.success('customer is deleted successfully.');\r\n\r\n        }).catch(error => {\r\n            message.error('Something went wrong')\r\n        })\r\n    }\r\n    render() {\r\n        const currentModule = this.props.match.url.slice(1,12)\r\n        console.log(currentModule)\r\n        const wholeModule = this.props.auth.user.role.modules.find(xx=>xx.slug===currentModule)\r\n        const permission = wholeModule.ModuleRole.permission\r\n        console.log(permission)\r\n        return (\r\n            <Content style={{margin: '16px 16px'}}>\r\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n                    {permission==='read'?\"\":<Button className='Button' type=\"primary\" onClick={this.showDrawer}>\r\n                        <PlusOutlined/> New Customer\r\n                    </Button>}\r\n                    <Table dataSource={this.props.customers}>\r\n                        <Column className=\"Responsive-1224\" title=\"Sr #\" dataIndex=\"key\" key=\"key\"/>\r\n                        <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\"/>\r\n                        <Column className=\"Responsive-1224\" title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\"/>\r\n                        <Column className=\"Responsive-1224\" title=\"Phone\" dataIndex=\"phone\" key=\"phone\"/>\r\n                        <Column className=\"Responsive-1224\" title=\"Email\" dataIndex=\"email\" key=\"email\"/>\r\n                        {permission===\"read\"?\"\":<Column title=\"Action\" dataIndex=\"key\" key=\"action\"\r\n                                 render={(key) => (\r\n                                     <Space size=\"middle\">\r\n\r\n                                         <MediaQuery minWidth={1224}>\r\n                                         <Button shape=\"round\" icon={<EditOutlined/>}\r\n                                                 onClick={() => this.editShowDrawer(key)} size=\"small\">\r\n                                             Edit\r\n                                         </Button>\r\n                                         </MediaQuery>\r\n\r\n                                         <MediaQuery maxWidth={1224}>\r\n                                         <Button shape=\"round\" icon={<EditOutlined/>}\r\n                                                 onClick={() => this.editShowDrawer(key)} size=\"medium\">\r\n\r\n                                         </Button>\r\n                                         </MediaQuery>\r\n\r\n                                         <DeletePop name=\"Customer\" deleteHandler={() => {\r\n                                             this.deleteCustomer(key)\r\n                                         }}/>\r\n                                     </Space>\r\n                                 )}\r\n                        />}\r\n                    </Table>\r\n                    <NewCustomer visible={this.state.visible} cancel={this.onClose}/>\r\n                    <EditCustomer visible={this.state.editVisible} customerId={this.state.customerId} cancel={this.closeEdit}/>\r\n                </div>\r\n            </Content>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return{\r\n        customers: state.customers.customers,\r\n        auth:state.auth.auth\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(Customer);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Banners\\Banners.js",["574","575","576","577","578"],"import React, {useEffect, useRef, useState} from \"react\";\r\nimport logo from '../../assets/images/logos/logo.png';\r\nimport {Button, message, Switch} from \"antd\";\r\nimport \"./Banners.css\"\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {storeBanners} from \"../../store/actions/bannerActions\";\r\nimport {DeleteOutlined} from \"@ant-design/icons\";\r\nimport * as actionCreators from \"../../store/actions/bannerActions\";\r\nconst NewBanners = () => {\r\n    const dispatch = useDispatch()\r\n    const {banners} = useSelector(({banners}) => banners);\r\n        const ref = useRef()\r\n        useEffect(()=>{\r\n            ref.current = banners\r\n        })\r\n    const [prevBanner ,setPrevBanners] = banners\r\n    const storeBannersAfterDelete = ()=>{\r\n        dispatch(storeBanners())\r\n    }\r\n    useEffect(()=>{\r\n        // if(prevBanner !== banners){\r\n            dispatch(storeBanners())\r\n        // }\r\n        // return()=>{\r\n        //     ref.current=banners\r\n        // }\r\n    },[])\r\n    const onChange = (value, featuredObject) => {\r\n        let addingBid = new FormData();\r\n        addingBid.append(\"isFeatured\", value);\r\n        console.log(featuredObject)\r\n        axios\r\n            .put(\"banners/addBid/\" + featuredObject.id, addingBid)\r\n            .then((response) => {\r\n                message.success(\"Banner Feature Is Changed\");\r\n            })\r\n            .catch((error) => {\r\n                message.error(\"Error\");\r\n            });\r\n    };\r\n    const onDelete = (id) => {\r\n        console.log(id)\r\n        axios\r\n            .delete(\"banners/delete/\" + id)\r\n            .then((response) => {\r\n                dispatch(actionCreators.deleteBanner(id))\r\n                message.success(\"Banner deleted Successfully\");\r\n                storeBannersAfterDelete()\r\n            })\r\n            .catch((error) => {\r\n                message.error(\"Error\");\r\n            });\r\n    };\r\n    return (<>\r\n            <div className=\"banner-button\">\r\n                <Link to=\"/newBanner\"><Button type=\"primary\">Create Banner1</Button></Link>\r\n            </div>\r\n        {banners.map(banner=>(\r\n            <React.Fragment key={banner.id.toString()}>\r\n                <div className=\"Banner-sec\">\r\n                    <div className=\"newBanner-main\">\r\n                        <div className=\"newBanner-content\">\r\n                            <div className=\"newBanner-image\">\r\n                                <img src={process.env.REACT_APP_BASE_IMAGE_PATH + banner.image} alt=\"desktop banner\"/>\r\n                            </div>\r\n                            <p>Desktop Image</p>\r\n                        </div>\r\n                        <div className=\"newBanner-content newBanner-content-para\">\r\n                           <div className='newBanner-para'>\r\n                               <p>{banner.placeholder}</p>\r\n                           </div>\r\n                            <div className=\"newBanner-Btn\">\r\n                                <Switch\r\n                                    defaultChecked={banner.isFeatured ?? true}\r\n                                    checkedChildren=\"Featured\"\r\n                                    unCheckedChildren=\"Not Featured\"\r\n                                    onChange={(e)=>onChange(e, banner)}\r\n                                />\r\n                            </div>\r\n                            <div className='btn-del'>\r\n                                <Button size=\"small\" type=\"primary\"\r\n                                onClick={()=>onDelete(banner.id)}>\r\n                                    <DeleteOutlined />\r\n                                    Delete\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"newBanner-content\">\r\n                            <div className=\"newBanner-image-mobile\">\r\n                                <img src={process.env.REACT_APP_BASE_IMAGE_PATH + banner.mobileImage} alt=\"mobile banner\"/>\r\n                            </div>\r\n                            <p>Mobile Image</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>))}\r\n        </>\r\n    )\r\n}\r\nexport default NewBanners;","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Reviews\\Reviews.js",["579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595"],"import {React, useState, useEffect} from \"react\";\r\nimport {\r\n    Button,\r\n    Input,\r\n    Layout,\r\n    message,\r\n    Space,\r\n    Switch,\r\n    Table,\r\n    Upload,\r\n} from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nimport {\r\n    ArrowDownOutlined,\r\n    ArrowUpOutlined,\r\n    CheckOutlined,\r\n    CloseOutlined,\r\n    EditOutlined,\r\n    PlusOutlined,\r\n    SearchOutlined,\r\n    UploadOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\n// import Import from \"../Import/Import\";\r\nimport {Link} from \"react-router-dom\";\r\nimport * as actionCreators from \"../../store/actions/productActions\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport DeletePop from \"../../components/PopConfirm/PopConfirm\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {storeReviews} from \"../../store/actions/reviewActions\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\n\r\nconst {Content} = Layout;\r\nconst {Column} = Table;\r\n\r\nfunction Reviews(props) {\r\n    const {auth} = useSelector(({auth}) => auth);\r\n    const dispatch = useDispatch\r\n    const [reviewData, setReviewData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    useEffect(() => {\r\n        axios.get('/reviews').then(success => {\r\n            console.log(success)\r\n            let data = success.data.map(review => ({\r\n                    key: review.id,\r\n                    reviewTitle: review.reviewTitle,\r\n                    rating: review.rating,\r\n                    createdAt: <ReactTimeAgo date={new Date(review.createdAt)} locale=\"en-US\"/>,\r\n                    name: review.Product.name,\r\n                    visibility: review.visibility.parseInt,\r\n                    description: review.description\r\n                })\r\n            )\r\n            console.log(success.data.map(review=>({\r\n                visibility: review.visibility,\r\n            })))\r\n            setReviewData(data)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    const currentModule = props.match.url.slice(1, 9);\r\n    console.log(currentModule);\r\n    const wholeModule = auth.user.role.modules.find(\r\n        (xx) => xx.slug === currentModule\r\n    );\r\n    const permission = wholeModule.ModuleRole.permission;\r\n    console.log(permission);\r\n    const onChange=(value,collectionObject)=>{\r\n        let collection=new FormData()\r\n        collection.append('visibility',value)\r\n        setLoading(true)\r\n        axios.put('/reviews/allowed/'+collectionObject.key, collection).then(response=>{\r\n            console.log(response)\r\n            message.success(`Review Successfully Updated as ${value}`)\r\n            setLoading(false)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n            message.error('Error'+value)\r\n            setLoading(false)\r\n\r\n        })\r\n\r\n    }\r\n    return <Content style={{margin: \"16px 16px\"}}>\r\n        <div\r\n            className=\"site-layout-background\"\r\n            style={{padding: 24, minHeight: 360}}\r\n        >\r\n            <Table dataSource={reviewData}>\r\n                <Column\r\n                    className=\"Responsive-1224\"\r\n                    title=\"Sr #\"\r\n                    dataIndex=\"key\"\r\n                    key=\"key\"\r\n                />\r\n                <Column\r\n                    className=\"Responsive-1224\"\r\n                    title=\"Created At\"\r\n                    dataIndex=\"createdAt\"\r\n                    key=\"createdAt\"\r\n                />\r\n                <Column title=\"Product Name\" dataIndex=\"name\" key=\"name\"/>\r\n                <Column title=\"Review Title\" dataIndex=\"reviewTitle\" key=\"reviewTitle\"/>\r\n                <Column title=\"Rating\" dataIndex=\"rating\" key=\"rating\"/>\r\n                <Column title=\"Description\" dataIndex=\"description\" key=\"description\"/>\r\n                {permission === \"read\" ? (\r\n                    \"\"\r\n                ) : (\r\n                    <>\r\n                        <Column\r\n                            title=\"visibility\"\r\n                            className=\"Responsive-1224\"\r\n                            dataIndex=\"visibility\"\r\n                            key=\"visibility\"\r\n                            render={(dataIndex, collection) => (\r\n                                <Space size=\"middle\">\r\n                                    <Switch loading={loading}\r\n                                            defaultChecked={dataIndex ?? true}\r\n                                            checkedChildren={<CheckOutlined/>}\r\n                                            unCheckedChildren={<CloseOutlined/>}\r\n                                            onChange={(e) => onChange(e, collection)}/>\r\n\r\n                                </Space>\r\n                            )}\r\n                        />\r\n                    </>\r\n                )}\r\n            </Table>\r\n        </div>\r\n    </Content>;\r\n\r\n}\r\n\r\nexport default Reviews;\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Attribute\\Attribute\\Attributes.js",["596","597"],"import {Component, React} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Button, Layout, message, Space, Table} from \"antd\";\r\nimport {EditOutlined, PlusOutlined} from \"@ant-design/icons\";\r\nimport NewAttribute from \"../NewAttribute/NewAttribute\";\r\nimport DeletePop from \"../../../components/PopConfirm/PopConfirm\";\r\nimport * as actionCreators from '../../../store/actions/attributeActions'\r\nimport './Attributes.css'\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport EditAttribute from \"../EditAttribute/EditAttribute\";\r\n\r\nconst {Column} = Table;\r\nconst {Content} = Layout;\r\n\r\nclass Attributes extends Component {\r\n    state = {\r\n        visible: false,\r\n        editVisible: false,\r\n        brandId: null,\r\n        brands: [],\r\n        brandName :\"new Name\",\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(actionCreators.storeAttributes())\r\n    }\r\n\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n    editShowDrawer = (id, brand) => {\r\n        this.setState({\r\n            editVisible: true,\r\n            brandId: {id,brand},\r\n            brandName:brand.name,\r\n        });\r\n    };\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    editOnClose = () => {\r\n        this.setState({\r\n            editVisible: false,\r\n        });\r\n    };\r\n    deleteAttribute=(id)=>{\r\n        axios.delete('attributes/'+id).then(response => {\r\n            this.props.dispatch(actionCreators.deleteAttribute(id))\r\n            message.success('Attribute deleted successfully.');\r\n\r\n        }).catch(error => {\r\n            message.error(error + \" \" + \"Error Occurred\");\r\n\r\n\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Content style={{margin: '16px 16px'}}>\r\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n                    <Button className='Button' type=\"primary\" onClick={this.showDrawer}>\r\n                        <PlusOutlined/> New Attribute\r\n                    </Button>\r\n                    <Table dataSource={this.props.attributes}>\r\n                        <Column title=\"Sr #\" dataIndex=\"key\" key=\"key\"/>\r\n                        <Column title=\"Name\" dataIndex=\"name\" key=\"name\"/>\r\n                        <Column title=\"Created At\" dataIndex=\"createdAt\" key=\"createdAt\"/>\r\n                        <Column\r\n                            title=\"Action\"\r\n                            dataIndex=\"key\"\r\n                            key=\"action\"\r\n                            render={(key, brand) => (\r\n                                <Space size=\"middle\">\r\n                                    <Button shape=\"round\" icon={<EditOutlined/>}\r\n                                            onClick={() => this.editShowDrawer(key, brand)} size=\"medium\">\r\n                                        Edit\r\n                                    </Button>\r\n                                    <DeletePop name=\"Attribute\" deleteHandler={()=>{this.deleteAttribute(key)}} />\r\n                                </Space>\r\n                            )}\r\n                        />\r\n                    </Table>\r\n                    <NewAttribute visible={this.state.visible} cancel={this.onClose}/>\r\n                    <EditAttribute brandId={this.state.brandId} name={this.state.brandName} visible={this.state.editVisible} cancel={this.editOnClose}/>\r\n                </div>\r\n            </Content>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        attributes: state.attributes.attributes\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps)(Attributes);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Brand\\Brands\\Brands.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Banners\\NewBanners\\newBanners.js",["598","599","600","601","602"],"import React, {useEffect, useState} from \"react\";\r\nimport Uploader from \"../../../components/ImageUploader/Uploader\"\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./newBanners.css\";\r\nimport {Form,Switch, Button, Select, Input, message, Space} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {storeCollections} from \"../../../store/actions/collectionActions\";\r\nimport {storeProducts} from \"../../../store/actions/productActions\";\r\n\r\n//state of Desktop image\r\nconst Banners = (props) => {\r\n    const dispatch = useDispatch()\r\n    const {products} = useSelector(({products}) => products);\r\n    const {collections} = useSelector(({collections}) => collections);\r\n\r\n    //setting the Products and Collections in the states for Select\r\n    const [collectionOptions , setCollectionOptions] = useState([])\r\n    const [productOptions , setProductOptions] = useState([])\r\n    const collectionsArray = []\r\n    const productsArray = []\r\n    useEffect(() => {\r\n        dispatch(storeProducts())\r\n    }, [])\r\n    useEffect(() => {\r\n        dispatch(storeCollections())\r\n    }, [])\r\n    useEffect(() => {\r\n        for (let i = 0; i < collections.length; i++) {\r\n            let value = collections[i].key\r\n            collectionsArray.push({\r\n                label: collections[i].name,\r\n                value,\r\n            });\r\n            setCollectionOptions(collectionOptions => [...collectionsArray]);\r\n        }\r\n    }, [collections]);\r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < products.length; i++) {\r\n            let value = products[i].key\r\n            productsArray.push({\r\n                label: products[i].name,\r\n                value,\r\n            });\r\n            setProductOptions(productOptions => [...productsArray]);\r\n        }\r\n    }, [products]);\r\n\r\n    const [desktopLogo, setDesktopLogo] = useState('');\r\n    const saveImage = (image) => {\r\n        setDesktopLogo(image)\r\n        setDesktopButtonDisable(false)\r\n    };\r\n    // for desktop loading\r\n    const [desktopLoading, setDesktopLoading] = useState(false)\r\n    const [desktopButtonDisable, setDesktopButtonDisable] = useState(true)\r\n    // save response from desktop api\r\n    const [desktopId, setDesktopId] = useState(\"\")\r\n    //state of Mobile image\r\n    const [mobileLogo, setMobileLogo] = useState('');\r\n    const mobImage = (imageSectionTwo) => {\r\n        setMobileLogo(imageSectionTwo)\r\n        setMobileButtonDisable(false)\r\n    };\r\n    //for Mobiledata loading\r\n    const [mobileLoading, setMobileLoading] = useState(false);\r\n    const [mobileButtonDisable, setMobileButtonDisable] = useState(true)\r\n    //save response from Mobile Api\r\n    const [mobileId, setMobileId] = useState('');\r\n    //state of form Placeholder.\r\n    const [placeholder, setPlaceholder] = useState('');\r\n    const handleFirstMobilePlaceHolder = (event) => {\r\n        console.log(event.target.value)\r\n        setPlaceholder(event.target.value)\r\n    };\r\n    const [isFeatured, setIsFeatured] = useState(0)\r\n    //state of form Collection. for first dataSet\r\n    const [collection, setCollection] = useState('');\r\n    const selectProps = {\r\n        style: {\r\n            width: '100%',\r\n        },\r\n        collection,\r\n        options: collectionOptions,\r\n        onChange: (newValue) => {\r\n            setCollection(newValue);\r\n        },\r\n        placeholder: 'Select Collection...',\r\n        maxTagCount: 'responsive',\r\n    };\r\n    //state of form Product.\r\n    const [product, setProduct] = useState('');\r\n    const selectProductProps = {\r\n        style: {\r\n            width: '100%',\r\n        },\r\n        product,\r\n        options: productOptions,\r\n        onChange: (newValue) => {\r\n            setProduct(newValue);\r\n        },\r\n        placeholder: 'Select Collection...',\r\n        maxTagCount: 'responsive',\r\n    };\r\n\r\n    //Desktop image Api Function.\r\n    const saveBannerDesktopSectionTwo = () => {\r\n        let banner = new FormData();\r\n        banner.append(\"image\", desktopLogo);\r\n        setDesktopLoading(true)\r\n        axios.post('banners', banner, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                console.log(response);\r\n                message.success(response.data.message)\r\n                setDesktopId(response.data.new_banner.id)\r\n                setDesktopLoading(false)\r\n                setDesktopButtonDisable(true)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error(error)\r\n                setDesktopLoading(false)\r\n            });\r\n    }\r\n    //Mobile image and Form data Api Function.\r\n    const saveMobileDataSectionTwo = () => {\r\n        let mobileData = new FormData();\r\n        mobileData.append(\"mobileImage\", mobileLogo);\r\n        mobileData.append(\"placeholder\", placeholder);\r\n        mobileData.append(\"isFeatured\", isFeatured);\r\n        mobileData.append(\"collectionId\", collection);\r\n        mobileData.append(\"productId\", product);\r\n        axios.put('banners/' + desktopId, mobileData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                console.log(response);\r\n                message.success(response.data.message);\r\n                setMobileId(response.data.id)\r\n                setMobileLoading(false);\r\n                setMobileButtonDisable(true);\r\n            })\r\n            .catch((error) => {\r\n                message.error(error);\r\n                setMobileLoading(false);\r\n            });\r\n    }\r\n\r\n    //Second Section functionality\r\n\r\n    //Desktop SectionTwo button & Loading state\r\n    const [desktopSectionTwoLoading, setDesktopSectionTwoLoading] = useState(false)\r\n    const [desktopSectionTwoButtonDisable, setDesktopSectionTwoButtonDisable]=useState(true);\r\n\r\n    //for Mobiledata 2 loading\r\n    const [mobileSectionTwoLoading, setMobileSectionTwoLoading] = useState(false);\r\n    const [mobileSectionTwoButtonDisable, setMobileSectionTwoButtonDisable] = useState(true)\r\n\r\n    //state of form Placeholder Section Two.\r\n    const [placeholderSectionTwo, setPlaceholderSectionTwo] = useState('');\r\n    const handleSecondMobilePlaceHolder = (event) => {\r\n        setPlaceholderSectionTwo(event.target.value)\r\n    };\r\n\r\n    //saving response from dexktop api of section two\r\n    const [desktopSectionTwoId,setDesktopSectionTwoId] =  useState('')\r\n    //state of form Collection. for first dataSet\r\n    const [collectionSectionTwo, setCollectionSectionTwo] = useState('');\r\n    const selectCollectionPropsSectionTwo = {\r\n        style: {\r\n            width: '100%',\r\n        },\r\n        collectionSectionTwo,\r\n        options: collectionOptions,\r\n        onChange: (newValue) => {\r\n            setCollectionSectionTwo(newValue);\r\n        },\r\n        placeholder: 'Select Collection...',\r\n        maxTagCount: 'responsive',\r\n    };\r\n    //state of form Product.\r\n    const [productSectionTwo, setProductSectionTwo] = useState('');\r\n    const selectProductPropsSectionTwo = {\r\n        style: {\r\n            width: '100%',\r\n        },\r\n        productSectionTwo,\r\n        options: productOptions,\r\n        onChange: (newValue) => {\r\n            setProductSectionTwo(newValue);\r\n        },\r\n        placeholder: 'Select Collection...',\r\n        maxTagCount: 'responsive',\r\n    };\r\n    const [isFeaturedSectionTwo, setIsFeaturedSectionTwo] = useState(0)\r\n    //Desktop Section Two image Api Function.\r\n    const saveBannerDesktopTwo = () => {\r\n        let bannerSectionTwo = new FormData();\r\n        bannerSectionTwo.append(\"image\", desktopLogoSectionTwo);\r\n        setDesktopSectionTwoLoading(true)\r\n        setDesktopSectionTwoButtonDisable(true)\r\n        axios.post('banners', bannerSectionTwo, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                console.log(response);\r\n                message.success(response.data.message)\r\n                setDesktopSectionTwoId(response.data.new_banner.id)\r\n                setDesktopSectionTwoLoading(false)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                message.error(error)\r\n                setDesktopSectionTwoLoading(false)\r\n                setDesktopSectionTwoButtonDisable(false)\r\n            });\r\n    }\r\n    //Mobile image and Form data Api Function.\r\n    const saveMobileData2 = () => {\r\n        let mobileSectionTwoData = new FormData();\r\n        mobileSectionTwoData.append(\"mobileImage\", mobileLogoSectionTwo);\r\n        mobileSectionTwoData.append(\"placeholder\", placeholderSectionTwo);\r\n        mobileSectionTwoData.append(\"collectionId\", collectionSectionTwo);\r\n        mobileSectionTwoData.append(\"isFeatured\", isFeaturedSectionTwo);\r\n        mobileSectionTwoData.append(\"productId\", productSectionTwo);\r\n        setMobileSectionTwoLoading(true);\r\n        setMobileSectionTwoButtonDisable(true);\r\n        axios.put('banners/' + desktopSectionTwoId, mobileSectionTwoData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n        })\r\n            .then((response) => {\r\n                console.log(response);\r\n                message.success(response.data.message);\r\n                setMobileSectionTwoLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                message.error(error);\r\n                setMobileSectionTwoLoading(false);\r\n                setMobileSectionTwoButtonDisable(false);\r\n            });\r\n    }\r\n\r\n    // setting Imaga ass Logo for section two\r\n    const [desktopLogoSectionTwo,setDesktopLogoSectionTwo]=useState(\"\");\r\n    const saveImageForDesktopSectionTwo = (image) => {\r\n        setDesktopLogoSectionTwo(image)\r\n        setDesktopSectionTwoButtonDisable(false)\r\n    };\r\n\r\n    //state of Mobile image\r\n    const [mobileLogoSectionTwo, setMobileLogoSectionTwo] = useState('');\r\n    const mobSectionTwoImage = (image2) => {\r\n        setMobileLogoSectionTwo(image2)\r\n        setMobileSectionTwoButtonDisable(false);\r\n    };\r\n    \r\n\r\n\r\n    return (<>\r\n            <div  className=\"new-banner-button\"><Link to=\"/banners\" ><Button type=\"primary\">Cancel</Button></Link></div>\r\n            <div className=\"Banner-main\">\r\n                <div className=\"New-Banner-sec\">\r\n                    <Form layout=\"vertical\">\r\n                        <div className=\"Banner-content\">\r\n                            <div className='uploader-main'>\r\n                                <div className=\"image-uploader\">\r\n                                    <p>Desktop Image1</p>\r\n                                    <div className=\"mobile-image\">\r\n                                        <Uploader saveImage={saveImage}/>\r\n                                        <Button disabled={desktopButtonDisable} loading={desktopLoading}\r\n                                                onClick={saveBannerDesktopSectionTwo} type=\"primary\">Upload Desktop\r\n                                            Image\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"image-uploader\">\r\n                                    <p>Mobile Image</p>\r\n                                    <div className=\"mobile-image\">\r\n                                        <Uploader saveImage={mobImage}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='form-inputs'>\r\n                                <Form.Item\r\n                                    name=\"name\"\r\n                                    label=\"Placeholder\"\r\n                                    rules={[\r\n                                        {required: true, message: \"Please enter Placeholder name\"},\r\n                                    ]}\r\n                                >\r\n                                    <Input\r\n                                        value={placeholder}\r\n                                        onChange={(e) => handleFirstMobilePlaceHolder(e)}\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    <Switch\r\n                                        checkedChildren=\"Featured\"\r\n                                        unCheckedChildren=\"Not Featured\"\r\n                                        onChange={()=>setIsFeatured(!isFeatured)}\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Collections\">\r\n                                    <Space\r\n                                        direction=\"vertical\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                    >\r\n                                        <Select\r\n                                            showSearch\r\n                                            filterOption={(input, option) =>\r\n                                                option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                            }{...selectProps} />\r\n                                    </Space>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Products\">\r\n                                    <Space\r\n                                        direction=\"vertical\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                    >\r\n                                        <Select\r\n                                            showSearch\r\n                                            filterOption={(input, option) =>\r\n                                                option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                            }{...selectProductProps} />\r\n                                    </Space>\r\n                                </Form.Item>\r\n                                <div className=\"form-btn\">\r\n                                    <Button disabled={desktopId !== 0 && mobileButtonDisable} loading={mobileLoading}\r\n                                            onClick={saveMobileDataSectionTwo} type=\"primary\">Upload Mobile Image</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                {/* section no 2*/}\r\n                <div className=\"New-Banner-sec\">\r\n                    <Form layout=\"vertical\">\r\n                        <div className=\"Banner-content\">\r\n                            <div className='uploader-main'>\r\n                                <div className=\"image-uploader\">\r\n                                    <p>Desktop Image</p>\r\n                                    <div className=\"mobile-image\">\r\n                                        <Uploader saveImage={saveImageForDesktopSectionTwo}/>\r\n                                        <Button disabled={desktopSectionTwoButtonDisable} loading={desktopSectionTwoLoading}\r\n                                                onClick={saveBannerDesktopTwo}\r\n                                                type=\"primary\">Upload Desktop Image</Button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"image-uploader\">\r\n                                    <p>Mobile Image</p>\r\n                                    <div className=\"mobile-image\">\r\n                                        <Uploader saveImage={mobSectionTwoImage}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='form-inputs'>\r\n                                <Form.Item\r\n                                    name=\"name\"\r\n                                    label=\"Placeholder\"\r\n                                    rules={[\r\n                                        {required: true, message: \"Please enter brand name\"},\r\n                                    ]}\r\n                                >\r\n                                    <Input\r\n                                        value={placeholderSectionTwo}\r\n                                        onChange={(c) => handleSecondMobilePlaceHolder(c)}\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item>\r\n                                    <Switch\r\n                                        checkedChildren=\"Featured\"\r\n                                        unCheckedChildren=\"Not Featured\"\r\n                                        onChange={()=>setIsFeaturedSectionTwo(!isFeaturedSectionTwo)}\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Collections\">\r\n                                    <Space\r\n                                        direction=\"vertical\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                    >\r\n                                        <Select\r\n                                            showSearch\r\n                                            filterOption={(input, option) =>\r\n                                                option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                            }{...selectCollectionPropsSectionTwo} />\r\n                                    </Space>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Products\">\r\n                                    <Space\r\n                                        direction=\"vertical\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                    >\r\n                                        <Select\r\n                                            showSearch\r\n                                            filterOption={(input, option) =>\r\n                                                option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                            }{...selectProductPropsSectionTwo} />\r\n                                    </Space>\r\n                                </Form.Item>\r\n                                <div className=\"form-btn\">\r\n                                    <Button\r\n                                        disabled={desktopSectionTwoId !== 0 && mobileSectionTwoButtonDisable} loading={mobileSectionTwoLoading}\r\n                                        onClick={saveMobileData2} type=\"primary\">Upload Mobile Image</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Banners;","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Product\\Products\\Products.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Collection\\Collections\\Collections.js",["603","604","605"],"import {React, Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Layout, Space, Table, Popconfirm, message, Switch, Form, Input} from \"antd\";\r\nimport {Button} from \"antd\";\r\nimport Highlighter from 'react-highlight-words';\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    PlusOutlined,\r\n    EditOutlined,\r\n    CheckOutlined,\r\n    CloseOutlined,\r\n    SearchOutlined\r\n} from \"@ant-design/icons\";\r\nimport NewCollection from \"../NewCollection/NewCollection\";\r\nimport EditCollection from \"../EditCollection/EditCollection\";\r\nimport DeletePop from \"../../../components/PopConfirm/PopConfirm\"\r\nimport * as actionCreators from '../../../store/actions/collectionActions'\r\nimport './Collections.css'\r\nimport axios from \"axios\";\r\nimport MediaQuery from 'react-responsive'\r\nconst {Column} = Table;\r\nconst {Content} = Layout;\r\n\r\nclass Collections extends Component {\r\n    state = {\r\n        visible: false,\r\n        editVisible: false,\r\n        collectionId: null,\r\n        collections: [],\r\n        searchText: '',\r\n        searchedColumn: '',\r\n        auth:[]\r\n    };\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(actionCreators.storeCollections())\r\n    }\r\n\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n    editShowDrawer = (id) => {\r\n        this.setState({\r\n            editVisible: true,\r\n            collectionId: id\r\n        });\r\n    };\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    editOnClose = () => {\r\n        this.setState({\r\n            editVisible: false,\r\n        });\r\n    };\r\n    deleteCollection=(id)=>{\r\n        axios.delete('collections/'+id).then(response => {\r\n            this.props.dispatch(actionCreators.deleteCollection(id))\r\n            message.success('Collection deleted successfully.');\r\n\r\n        }).catch(error => {\r\n            console.log(error)\r\n            message.error(\"cannot delete collection because of relations\");\r\n            // alert(error)\r\n        })\r\n    }\r\n    onChange=(value,collectionObject)=>{\r\n        let collection=new FormData()\r\n        collection.append('isPopular',value)\r\n        axios.put('collections/togglePopular/'+collectionObject.key, collection).then(response=>{\r\n            message.success('Collection updated successfully')\r\n        }).catch(error=>{\r\n            message.error('Error')\r\n\r\n        })\r\n\r\n    }\r\n    render() {\r\n\r\n        const currentModule = this.props.match.url.slice(1,12)\r\n        const wholeModule = this.props.auth.user.role.modules.find(xx=>xx.slug===currentModule)\r\n        const permission = wholeModule.ModuleRole.permission\r\n        return (\r\n            <Content style={{margin: '16px 16px'}}>\r\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n                    {permission===\"read\"?\"\":<Button className='Button' type=\"primary\" onClick={this.showDrawer}>\r\n                        <PlusOutlined/> New Collection\r\n                    </Button>}\r\n                    <Table dataSource={this.props.collections}>\r\n                        <Column className=\"Responsive-1224\" title=\"Sr #\" dataIndex=\"key\" key=\"key\"/>\r\n                        <Column className=\"Responsive-1224\" title=\"Image\" dataIndex=\"image\" key=\"image\" render={(image) => (\r\n                            <div className=\"ant-list-item-meta-avatar\"><span\r\n                                className=\"ant-avatar ant-avatar-circle ant-avatar-image\"><img\r\n                                src={process.env.REACT_APP_BASE_IMAGE_PATH + image} alt=\"brand\"/></span></div>\r\n                        )}\r\n                        />\r\n                        <Column\r\n                            title=\"Name\"\r\n                            dataIndex=\"name\"\r\n                            key=\"name\"\r\n                            {...this.getColumnSearchProps('name')}\r\n                        />\r\n                        {permission === \"read\" ? \" \" :\r\n                            <>\r\n                                <Column\r\n                                    title=\"Popular\"\r\n                                    className=\"Responsive-1224\"\r\n                                    dataIndex=\"isPopular\"\r\n                                    key=\"isPopular\"\r\n                                    render={(dataIndex, collection) => (\r\n                                        <Space size=\"middle\">\r\n                                            <Switch defaultChecked={dataIndex ?? true}\r\n                                                    checkedChildren={<CheckOutlined/>}\r\n                                                    unCheckedChildren={<CloseOutlined/>}\r\n                                                    onChange={(e) => this.onChange(e, collection)}/>\r\n\r\n                                        </Space>\r\n                                    )}\r\n                                />\r\n                                <Column className=\"Responsive-1224\" title=\"Created At\" dataIndex=\"createdAt\" key=\"createdAt\"/>\r\n                                <Column\r\n                                    title=\"Action\"\r\n                                    dataIndex=\"key\"\r\n                                    key=\"action\"\r\n                                    render={(key) => (\r\n                                        <Space size=\"middle\">\r\n                                            <MediaQuery minWidth={1224}>\r\n                                            <Button shape=\"round\" icon={<EditOutlined/>}\r\n                                                    onClick={() => this.editShowDrawer(key)} size=\"medium\">\r\n                                                Edit Collection\r\n                                            </Button>\r\n                                            </MediaQuery>\r\n                                            <MediaQuery maxWidth={1224}>\r\n                                            <Button shape=\"round\" icon={<EditOutlined/>}\r\n                                                    onClick={() => this.editShowDrawer(key)} size=\"medium\">\r\n                                                \r\n                                            </Button>\r\n                                            </MediaQuery>\r\n                                            <DeletePop name=\"Collection\" deleteHandler={() => {\r\n                                                this.deleteCollection(key)\r\n                                            }}/>\r\n                                        </Space>\r\n                                    )}\r\n                                />\r\n                            </>}\r\n                    </Table>\r\n                    <NewCollection visible={this.state.visible} cancel={this.onClose}/>\r\n                    <EditCollection visible={this.state.editVisible} collectionId={this.state.collectionId} cancel={this.editOnClose}/>\r\n                </div>\r\n            </Content>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        collections: state.collections.collections,\r\n        parentCollections: state.collections.parentCollections,\r\n        auth:state.auth.auth\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps)(Collections);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Product\\EditProduct\\EditProduct.js",["606","607","608","609","610","611","612"],"import React,{useEffect, useState} from 'react';\r\nimport {Button, Card, Col, Form, Input, message, Row, Select, Space, Switch} from \"antd\"\r\nimport ReactQuill from 'react-quill';\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    CheckOutlined,\r\n    CloseOutlined,\r\n} from \"@ant-design/icons\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport '../NewProduct/NewProduct.css'\r\nimport axios from \"axios\";\r\nimport {useParams} from \"react-router\";\r\nimport {storeBrands} from \"../../../store/actions/brandActions\";\r\nimport {storeCollections} from \"../../../store/actions/collectionActions\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst {TextArea} = Input\r\n\r\n\r\nconst CreateProduct = (props) => {\r\n    /**\r\n     * State Variables\r\n     */\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\");\r\n    const [slug,setSlug] = useState(\"\")\r\n    const [description, setDescription] = useState('');\r\n    const [collection, setCollection] = useState([]);\r\n    const [brand, setBrand] = useState('');\r\n    const [seoTitle, setSeoTitle] = useState('');\r\n    const [seoDescription, setSeoDescription] = useState('');\r\n    const [keywords, setKeywords] = useState('');\r\n    const [collectionOptions, setCollectionOptions] = useState([]);\r\n    const [brandOptions, setBrandOptions] = useState([]);\r\n    const [visibility, setVisibility] = useState(1);\r\n    const [isPopular, setIsPopular] = useState(false);\r\n    const [loading , setLoading] = useState(false);\r\n    const collectionsArray = []\r\n    const brandsArray = []\r\n    const [form] = Form.useForm();\r\n    const formLayout = 'vertical';\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < props.collections.length; i++) {\r\n            let value = props.collections[i].key\r\n            collectionsArray.push({\r\n                label: props.collections[i].name,\r\n                value,\r\n            });\r\n            setCollectionOptions(collectionOptions => [...collectionsArray]);\r\n        }\r\n    }, [props.collections]);\r\n    useEffect(() => {\r\n        // props.dispatch(actionCreators.storeBrands())\r\n        for (let i = 0; i < props.brands.length; i++) {\r\n            let value = props.brands[i].key\r\n            brandsArray.push({\r\n                label: props.brands[i].name,\r\n                value,\r\n            });\r\n            setBrandOptions(options => [...brandsArray]);\r\n        }\r\n    }, [props.brands]);\r\n    useEffect(()=>{\r\n\r\n        props.dispatch(storeBrands())\r\n    },[])\r\n    useEffect(()=>{\r\n        props.dispatch(storeCollections())\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get('products/' + id).then((response) => {\r\n\r\n            let product = response.data\r\n            // let newName = ReactHtmlParser(product.name)\r\n            // let newSlug = ReactHtmlParser(product.slug)\r\n            //\r\n            // product.name=newName\r\n            // product.slug=newSlug\r\n            form.setFieldsValue(product)\r\n            setName(product.name)\r\n            setSlug(product.slug)\r\n            setBrand(product.Brand.id)\r\n            setDescription(product.description)\r\n            setSeoTitle(product.seo_title)\r\n            setSeoDescription(product.seo_description)\r\n            setKeywords(product.seo_keywords)\r\n            setIsPopular(product.isPopular)\r\n            setVisibility(product.visibility)\r\n            let collections = []\r\n            product.collections.map((collection) => collections.push(collection.id))\r\n            setCollection(collections)\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }, [])\r\n\r\n    // function for the  isPopular\r\n    const onPopularChange = (value) => {\r\n        setIsPopular(value)\r\n    }\r\n\r\n\r\n    /**\r\n     * set Visibility\r\n     * @param e\r\n     */\r\n    const onVisibility = (e) => {\r\n        setVisibility(e)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @type {{mode: string, onChange: onChange, maxTagCount: string, options: *[], style: {width: string}, collection: *[], placeholder: string}}\r\n     */\r\n    const selectProps = {\r\n        mode: 'multiple',\r\n        style: {\r\n            width: '100%',\r\n        },\r\n        collection,\r\n        options: collectionOptions,\r\n        onChange: (newValue) => {\r\n            setCollection(newValue);\r\n        },\r\n        placeholder: 'Select Collection...',\r\n        maxTagCount: 'responsive',\r\n    };\r\n    /**\r\n     *\r\n     * @type {{onChange: onChange, maxTagCount: string, options: *[], style: {width: string}, placeholder: string, brand: unknown}}\r\n     */\r\n    const selectBrandProps = {\r\n        style: {\r\n            width: '100%',\r\n        },\r\n        brand,\r\n        options: brandOptions,\r\n\r\n        onChange: (newValue) => {\r\n            setBrand(newValue);\r\n        },\r\n        placeholder: 'Select Brand...',\r\n        maxTagCount: 'responsive',\r\n    };\r\n\r\n    const postProductHandler = async () => {\r\n        const validate = await form.validateFields()\r\n\r\n        let product = new FormData();\r\n        console.log(name)\r\n        product.append(\"name\", name)\r\n        product.append('slug',slug)\r\n        product.append('collections', collection)\r\n        product.append('brand', brand)\r\n        product.append('description', description)\r\n        product.append('visibility', visibility)\r\n        product.append('seoTitle', seoTitle)\r\n        product.append('seoDescription', seoDescription)\r\n        product.append('keywords', keywords)\r\n        product.append('isPopular', isPopular)\r\n            setLoading(true)\r\n        console.log(product)\r\n        axios.put('products/'+id, product, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(response => {\r\n            console.log(response)\r\n            // const result ={\r\n            //     key: response.data.id, // I added this line\r\n            //     name: response.data.name,\r\n            //     createdAt: <ReactTimeAgo date={new Date(response.data.createdAt)} locale=\"en-US\"/>,\r\n            //     image: response.data.image\r\n            // }\r\n            // this.props.dispatch(actionCreators.saveBrand(result))\r\n            // this.setState({\r\n            //     loading:false\r\n            // })\r\n            // message.success('Brand added successfully.');\r\n            // this.props.cancel()\r\n            message.success('Product updated successfully.');\r\n            setLoading(false)\r\n            history.push(\"/products\")\r\n        }).catch(error => {\r\n            setLoading(false)\r\n            console.log(error)\r\n            // let errors=error.response.data;\r\n            // if(errors.errors[0].param=='name'){\r\n            //     message.error(errors.errors[0].msg);\r\n            //\r\n            // }\r\n\r\n\r\n        })\r\n\r\n    }\r\n    return (\r\n        <Form\r\n            layout={formLayout}\r\n            form={form}\r\n            initialValues={{\r\n                layout: formLayout,\r\n            }}\r\n        >\r\n            <div className=\"site-card-wrapper\">\r\n                <Row gutter={12} className=\"row\">\r\n                    <Col xs={10} md={8} span={8}>\r\n                        <Link to={'/products'}>\r\n                            <Button type=\"danger\" size=\"large\" className=\"button\">\r\n                                <span className=\"span\">Cancel</span>\r\n                            </Button>\r\n                        </Link>\r\n                        <Button type=\"submit\" size=\"large\" className=\"button\" loading={loading} onClick={postProductHandler}><span\r\n                            className=\"span\">Save</span></Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={12} className=\"row\">\r\n                    <Col xs={24} md={16} span={16}>\r\n                        <Card title=\"General Description\" className=\"cardHeight\" bordered={false}>\r\n                            <>\r\n                                <Form.Item name=\"name\"\r\n                                           label=\"Product Name\"\r\n                                           rules={[{required: true, message: 'Please enter product name'}]}>\r\n                                    <Input placeholder=\"Product name\" onChange={(e) => {\r\n                                        setName(e.target.value)\r\n                                    }}/>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name=\"slug\"\r\n                                           label=\"Product Slug\">\r\n                                    <Input placeholder=\"Product slug\"\r\n                                           onChange={(e) => {setSlug(e.target.value)}}\r\n                                    />\r\n                                </Form.Item>\r\n                                <ReactQuill value={description}  placeholder=\"Product description\" onChange={(value) => {\r\n                                    setDescription(value)\r\n                                }}>\r\n                                </ReactQuill>\r\n                            </>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xs={24} md={8} span={8}>\r\n                        <Card title=\"Add product to collection\" className=\"cardHeight\" bordered={false}>\r\n                            <>\r\n                                <Form.Item label=\"Collections\">\r\n                                    <Space\r\n                                        direction=\"vertical\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                    >\r\n                                        <Select value={collection} filterOption={(input, option) =>\r\n                                            option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                        }{...selectProps}/>\r\n                                    </Space>\r\n                                </Form.Item>\r\n\r\n\r\n                            </>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row gutter={12} className=\"row\">\r\n                    <Col xs={24} md={6} span={6}>\r\n                        <Card title=\"Visibility\" className=\"cardHeight\" bordered={false}>\r\n                            <>\r\n                                <Card type=\"inner\" title=\"Visibility\">\r\n                                    <Switch\r\n                                        checked={visibility} checkedChildren=\"Published\" unCheckedChildren=\"Hidden\"\r\n                                            onChange={(e) => onVisibility(e)}/>\r\n                                </Card>\r\n                                <Card style={{marginTop: 16}} type=\"inner\" title=\"Popularity\">\r\n                                    <Switch checked={isPopular} checkedChildren={<CheckOutlined/>} unCheckedChildren={<CloseOutlined/>}\r\n                                            onChange={(a) => onPopularChange(a)}/>\r\n                                </Card>\r\n                            </>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xs={24} md={10} span={10}>\r\n                        <Card title=\"Search engine listing\" className=\"cardHeight\" bordered={false}>\r\n                            <>\r\n                                <Form.Item name=\"seo_title\"\r\n                                           label=\"Title\"\r\n                                           rules={[{required: true, message: 'Please enter product price'}]}>\r\n                                    <Input placeholder=\"input placeholder\" onChange={(e) => {\r\n                                        setSeoTitle(e.target.value)\r\n                                    }}/>\r\n                                </Form.Item>\r\n                                <Form.Item name=\"seo_description\"\r\n                                           label=\"Description\"\r\n                                           rules={[{required: true, message: 'Please enter product barcode'}]}>\r\n                                    <TextArea placeholder=\"input placeholder\" onChange={(e) => {\r\n                                        setSeoDescription(e.target.value)\r\n                                    }}/>\r\n                                </Form.Item>\r\n                                <Form.Item name=\"seo_keywords\"\r\n                                           label=\"Keywords\"\r\n                                           rules={[{required: true, message: 'Please enter product sku'}]}>\r\n                                    <Input placeholder=\"input placeholder\" onChange={(e) => {\r\n                                        setKeywords(e.target.value)\r\n                                    }}/>\r\n                                </Form.Item>\r\n\r\n                            </>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col xs={24} span={8} md={8}>\r\n                        <Card title=\"Product Brand\" className=\"cardHeight\" bordered={false}>\r\n                            <>\r\n\r\n                                <Form.Item label=\"Brands\">\r\n                                    <Space\r\n                                        direction=\"vertical\"\r\n                                        style={{\r\n                                            width: '100%',\r\n                                        }}\r\n                                    >\r\n                                        <Select value={brand}\r\n                                                showSearch\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                                {...selectBrandProps} />\r\n                                    </Space>\r\n                                </Form.Item>\r\n                            </>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </Form>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        collections: state.collections.collections,\r\n        brands: state.brands.brands,\r\n        attributes: state.attributes.attributes,\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps)(CreateProduct);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Auth\\Login\\index.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Order\\Orders\\Orders.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\User\\NewUser\\NewUser.js",["613","614","615","616","617","618","619","620"],"import React, {useEffect, useState} from 'react';\r\nimport {Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete, notification, Space} from 'antd';\r\nimport axios from \"axios\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport * as actionCreators from \"../../../store/actions/userActions\"\r\nimport Uploader from \"../../../components/ImageUploader/Uploader\";\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 8,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 6,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\nconst NewUsers = (props) => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [file, setFile] = useState(\"\")\r\n    const [roleId , setRoleId] = useState(\"\")\r\n    const [allRoles,setAllRoles]=useState([])\r\n\r\n    const roleHandler=(event)=>{\r\n        setRoleId(event)\r\n        console.log(event)\r\n    }\r\n    useEffect(()=>{\r\n        axios.get(\"roles/\").then(response=>{\r\n            console.log(response)\r\n            const results = response.data.map((row)=>({\r\n                value:row.id,\r\n                label:row.name\r\n            }))\r\n            setAllRoles(results)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    },[])\r\n    const history=useHistory()\r\n    const onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n        let user = new FormData();\r\n            user.append(\"firstName\",values.firstName)\r\n            user.append(\"lastName\",values.lastName)\r\n            user.append(\"email\",values.email)\r\n            user.append(\"roleId\",roleId)\r\n            // user.append(\"image\",file)\r\n            user.append(\"password\",values.password)\r\n            user.append(\"confirmPassword\",values.confirmPassword)\r\n        setLoading(true)\r\n        axios.post(\"users\",user).then(success=>{\r\n            console.log(success)\r\n            setLoading(false)\r\n            notification['success']({\r\n                message: 'Success',\r\n                description:\"User created successfully.\",\r\n            });\r\n            history.push('/users');\r\n        }).catch(error=>{\r\n            console.log(error)\r\n            setLoading(false)\r\n            notification['error']({\r\n                message: 'Error',\r\n                description:error.response.data.message,\r\n            });\r\n        })\r\n\r\n    };\r\n    const saveImage =(image)=>{\r\n        console.log(image)\r\n        setFile(image)\r\n        console.log(file)\r\n    }\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    return (\r\n        <Form\r\n            {...formItemLayout}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            scrollToFirstError\r\n        >\r\n            <Form.Item\r\n                name=\"firstName\"\r\n                label=\"First Name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your First Name!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input placeholder=\"First Name\"/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"lastName\"\r\n                label=\"Last Name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Last  Name!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input placeholder=\"Last Name\"/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"email\"\r\n                label=\"E-mail\"\r\n                rules={[\r\n                    {\r\n                        type: 'email',\r\n                        message: 'The input is not valid E-mail!',\r\n                    },\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your E-mail!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input placeholder=\"enter Email\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"password\"\r\n                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n                label=\"Password\"\r\n                tooltip=\"password must be of 8 letters at least\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password placeholder=\"password must be of 8 letters at least\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                tooltip=\"password must be of 8 letters at least\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                    },\r\n                    ({getFieldValue}) => ({\r\n                        validator(_, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n\r\n                            return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password placeholder=\"password must be of 8 letters at least\"/>\r\n            </Form.Item>\r\n            <Form.Item label=\"Roles\"\r\n            >\r\n                <Space\r\n                    direction=\"vertical\"\r\n                    style={{\r\n                        width: '50%',\r\n                    }}\r\n                >\r\n                    <Select\r\n                        showSearch\r\n                        value={roleId}\r\n                        options={allRoles}\r\n                        onChange={e=>roleHandler(e)}\r\n                        filterOption={(input, option) =>\r\n                            option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                    />\r\n                </Space>\r\n            </Form.Item>\r\n            {/*<Form.Item*/}\r\n            {/*    name=\"file\"*/}\r\n            {/*    label=\"Upload Image\"*/}\r\n            {/*>*/}\r\n            {/*    <Uploader saveImage={saveImage}/>*/}\r\n            {/*</Form.Item>*/}\r\n            <Form.Item {...tailFormItemLayout}>\r\n                <Button type=\"primary\" loading={loading} htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default NewUsers;\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Product\\NewProduct\\NewProduct.js",["621","622","623","624","625","626","627"],"import {React, useEffect, useState} from 'react';\r\nimport {Button, Card, Col, Collapse, Form, Input, message, Radio, Row, Select, Space, Switch, Tabs, Upload} from \"antd\"\r\nimport {connect} from 'react-redux'\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport {\r\n    BoxPlotFilled,\r\n    CalendarFilled,\r\n    CheckCircleFilled,\r\n    CheckOutlined,\r\n    CloseOutlined,\r\n    SettingFilled\r\n} from \"@ant-design/icons\";\r\nimport './NewProduct.css'\r\nimport ImgCrop from 'antd-img-crop';\r\nimport axios from \"axios\";\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {storeBrands} from \"../../../store/actions/brandActions\";\r\nimport {storeCollections} from \"../../../store/actions/collectionActions\";\r\nimport MediaQuery from 'react-responsive'\r\n\r\nconst {TextArea} = Input\r\nconst {TabPane} = Tabs;\r\nconst {Option} = Select;\r\n\r\n\r\nconst CreateProduct = (props) => {\r\n    /**\r\n     * State Variables\r\n     */\r\n    const [name, setName] = useState('');\r\n    const [slug, setSlug] = useState(\"\")\r\n    const [description, setDescription] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [regularPrice, setRegularPrice] = useState('');\r\n    const [sku, setSku] = useState('');\r\n    const [collection, setCollection] = useState([]);\r\n    const [brand, setBrand] = useState('');\r\n    const [seoTitle, setSeoTitle] = useState('');\r\n    const [seoDescription, setSeoDescription] = useState('');\r\n    const [keywords, setKeywords] = useState('');\r\n    const [collectionOptions, setCollectionOptions] = useState([]);\r\n    const [brandOptions, setBrandOptions] = useState([]);\r\n    const [stock, setStock] = useState(\"in_stock\");\r\n    const [visibility, setVisibility] = useState(1);\r\n    const [isPopular, setIsPopular] = useState(false);\r\n    const [loading, setLoading] = useState(false)\r\n    const collectionsArray = []\r\n    const brandsArray = []\r\n    const [form] = Form.useForm();\r\n    const formLayout = 'vertical';\r\n    const [productType, setProductType] = useState(true);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        for (let i = 0; i < props.collections.length; i++) {\r\n            let value = props.collections[i].key\r\n            collectionsArray.push({\r\n                label: props.collections[i].name,\r\n                value,\r\n            });\r\n            setCollectionOptions(collectionOptions => [...collectionsArray]);\r\n        }\r\n    }, [props.collections]);\r\n    useEffect(() => {\r\n        props.dispatch(storeBrands())\r\n    }, [])\r\n    useEffect(() => {\r\n        props.dispatch(storeCollections())\r\n    }, [])\r\n    useEffect(() => {\r\n        for (let i = 0; i < props.brands.length; i++) {\r\n            let value = props.brands[i].key\r\n            brandsArray.push({\r\n                label: props.brands[i].name,\r\n                value,\r\n            });\r\n            setBrandOptions(options => [...brandsArray]);\r\n        }\r\n    }, [props.brands]);\r\n\r\n    // function for the  isPopular\r\n    const toggleChange = (value) => {\r\n        setIsPopular(value)\r\n    }\r\n    /**\r\n     * Image on Change Function\r\n     * @param newFileList\r\n     */\r\n    let onChange = ({fileList: newFileList}) => {\r\n        setFileList(newFileList);\r\n    };\r\n    /**\r\n     * set Stock Value\r\n     * @param e\r\n     */\r\n\r\n    const onStock = (e) => {\r\n        setStock(e.target.value)\r\n    }\r\n\r\n\r\n    function onProductChange(value) {\r\n        if (value == 1) {\r\n            setProductType(true);\r\n\r\n        } else {\r\n            setProductType(false);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set Visibility\r\n     * @param e\r\n     */\r\n    const onVisibility = (value) => {\r\n        setVisibility(value)\r\n    }\r\n    /**\r\n     * Image Preview Function\r\n     * @param file\r\n     * @returns {Promise<void>}\r\n     */\r\n    const onPreview = async file => {\r\n        let src = file.url;\r\n        if (!src) {\r\n            src = await new Promise(resolve => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file.originFileObj);\r\n                reader.onload = () => resolve(reader.result);\r\n            });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n    };\r\n    /**\r\n     * Dummy request for uploading image\r\n     * @param file\r\n     * @param onSuccess\r\n     */\r\n    const dummyRequest = ({file, onSuccess}) => {\r\n        setTimeout(() => {\r\n            onSuccess(\"ok\");\r\n        }, 0);\r\n    };\r\n    /**\r\n     *\r\n     * @type {{mode: string, onChange: onChange, maxTagCount: string, options: *[], style: {width: string}, collection: *[], placeholder: string}}\r\n     */\r\n    const selectProps = {\r\n        mode: 'multiple',\r\n        style: {\r\n            width: '100%',\r\n        },\r\n        collection,\r\n        options: collectionOptions,\r\n        onChange: (newValue) => {\r\n            setCollection(newValue);\r\n        },\r\n        placeholder: 'Select Collection...',\r\n        maxTagCount: 'responsive',\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @type {{onChange: onChange, maxTagCount: string, options: *[], style: {width: string}, placeholder: string, brand: unknown}}\r\n     */\r\n    const selectBrandProps = {\r\n        style: {\r\n            width: '100%',\r\n        },\r\n        brand,\r\n        options: brandOptions,\r\n\r\n        onChange: (newValue) => {\r\n            setBrand(newValue);\r\n        },\r\n        placeholder: 'Select Brand...',\r\n        maxTagCount: 'responsive',\r\n    };\r\n\r\n    const postProductHandler = async () => {\r\n        const validate = await form.validateFields()\r\n        if (sku === \"\") {\r\n            return message.error('Cannot create product without SKU')\r\n        }else if(quantity === \"\"){\r\n            return message.error('Cannot create product without quantity')\r\n        }else if(stock === \"\"){\r\n            return message.error('Cannot create product without stock')\r\n        }\r\n        let product = new FormData();\r\n        product.append('name', name)\r\n        product.append(\"slug\", slug)\r\n        fileList.forEach(file => {\r\n            product.append('files', file.originFileObj);\r\n        });\r\n        product.append('collections', collection)\r\n        product.append('brand', brand)\r\n        product.append('description', description)\r\n        product.append('quantity', quantity)\r\n        product.append('sku', sku)\r\n        product.append('price', price)\r\n        product.append('stockStatus', stock)\r\n        product.append('visibility', visibility)\r\n        product.append('regularPrice', regularPrice)\r\n        product.append('seoTitle', seoTitle)\r\n        product.append('seoDescription', seoDescription)\r\n        product.append('keywords', keywords)\r\n        // product.append('isPopular',this.state.isPopular)\r\n        product.append('isPopular', isPopular)\r\n        setLoading(true)\r\n\r\n        axios.post('products', product, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(response => {\r\n            console.log(response)\r\n            message.success('Product added successfully.');\r\n            setLoading(false)\r\n            history.push(\"/products\")\r\n\r\n        }).catch(error => {\r\n            setLoading(false)\r\n            let errors = error.response.data;\r\n            console.log(errors)\r\n            // if (errors.errors[0].param == 'name') {\r\n            //     message.error(errors.errors[0].msg);\r\n            // }\r\n            // errors.error?message.error(\"Add Collection or Brand\"):message.error(errors.errors[0].message,3)\r\n            // console.log(errors)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            layout={formLayout}\r\n            form={form}\r\n            initialValues={{\r\n                layout: formLayout,\r\n            }}\r\n        >\r\n            <div className=\"site-card-wrapper\">\r\n\r\n                {/* For Big Screen */}\r\n\r\n                <MediaQuery minWidth={1224}>\r\n                    <Row className=\"row\">\r\n                        <Col span={8} offset={16}><Link to='/products'>\r\n                            <Button type=\"danger\" size=\"large\" className=\"button\"><span\r\n                                className=\"span\">Cancel</span></Button></Link>\r\n                            <Button type=\"submit\" size=\"large\" className=\"button\" loading={loading}\r\n                                    onClick={postProductHandler}><span\r\n                                className=\"span\">Save</span></Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={8}>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={12} className=\"row\">\r\n                        <Col span={16}>\r\n                            <Card title=\"General Description\" className=\"cardHeight\" bordered={false}>\r\n                                <>\r\n                                    <Form.Item name=\"name\"\r\n                                               label=\"Product Name\"\r\n                                               rules={[{required: true, message: 'Please enter product name'}]}>\r\n                                        <Input placeholder=\"Product name\" onChange={(e) => {\r\n                                            setName(e.target.value)\r\n                                        }}/>\r\n                                    </Form.Item>\r\n                                    <Form.Item name=\"slug\"\r\n                                               label=\"Product Slug\">\r\n                                        <Input placeholder=\"Product Slug\" onChange={(e) => {\r\n                                            setSlug(e.target.value)\r\n                                        }}/>\r\n                                    </Form.Item>\r\n\r\n                                    <ReactQuill placeholder=\"Product description\"\r\n                                                onChange={(value, delta, source, editor) => {\r\n                                                    setDescription(editor.getHTML)\r\n                                                }}/>\r\n                                </>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col span={8}>\r\n                            <Card title=\"Add product to collection\" className=\"cardHeight\" bordered={false}>\r\n                                <>\r\n                                    <Form.Item label=\"Collections\">\r\n                                        <Space\r\n                                            direction=\"vertical\"\r\n                                            style={{\r\n                                                width: '100%',\r\n                                            }}\r\n                                        >\r\n                                            <Select filterOption={(input, option) =>\r\n                                                option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                            }{...selectProps} />\r\n                                        </Space>\r\n                                    </Form.Item>\r\n                                </>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row gutter={12} className=\"row\">\r\n                        <Col span={16}>\r\n                            <Card title=\"Product data -\" className=\"cardHeight\" bordered={false} extra={<Select\r\n                                style={{width: 200}}\r\n                                placeholder=\"Select a person\"\r\n                                optionFilterProp=\"children\"\r\n                                onChange={onProductChange}\r\n                                defaultValue=\"1\"\r\n                                filterOption={(input, option) =>\r\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                <Option value=\"1\">Simple Product</Option>\r\n                            </Select>}>\r\n                                <>\r\n                                    <Tabs tabPosition=\"left\" defaultActiveKey=\"1\">\r\n                                        {\r\n                                            productType &&\r\n                                            <TabPane\r\n                                                tab={\r\n                                                    <span>\r\n                                                <SettingFilled/>\r\n                                                            General\r\n                                                        </span>\r\n                                                }\r\n                                                key=\"1\"\r\n                                            >\r\n                                                <Form.Item name=\"price\"\r\n                                                           label=\"Price\"\r\n                                                           rules={[{\r\n                                                               required: true,\r\n                                                               message: 'Please enter product price'\r\n                                                           }]}>\r\n                                                    <Input placeholder=\"Price\" onChange={(e) => {\r\n                                                        setPrice(e.target.value)\r\n                                                    }}/>\r\n                                                </Form.Item>\r\n                                                <Form.Item name=\"regular_price\"\r\n                                                           label=\"Regular Price\"\r\n                                                           rules={[{\r\n                                                               required: true,\r\n                                                               message: 'Please enter product regular price'\r\n                                                           }]}>\r\n                                                    <Input placeholder=\"Regular price\" onChange={(e) => {\r\n                                                        setRegularPrice(e.target.value)\r\n                                                    }}/>\r\n                                                </Form.Item>\r\n                                                <ImgCrop rotate>\r\n                                                    <Upload\r\n                                                        name=\"images\"\r\n                                                        listType=\"picture-card\"\r\n                                                        fileList={fileList}\r\n                                                        customRequest={dummyRequest}\r\n                                                        onChange={onChange}\r\n                                                        onPreview={onPreview}\r\n                                                    >\r\n                                                        {fileList.length < 5 && '+ Upload'}\r\n                                                    </Upload>\r\n                                                </ImgCrop>\r\n                                            </TabPane>\r\n                                        }\r\n                                        {productType &&\r\n                                        <TabPane\r\n                                            tab={\r\n                                                <span>\r\n                                                <CheckCircleFilled/>\r\n                                                            Inventory\r\n                                                        </span>\r\n                                            }\r\n                                            key=\"2\"\r\n                                        >\r\n                                            <Form.Item name=\"sku\"\r\n                                                       defaultValue={\"in_stock\"}\r\n                                                       label=\"SKU\"\r\n                                                       rules={[{required: true, message: 'Please enter product sku'}]}>\r\n                                                <Input placeholder=\"Sku\" onChange={(e) => {\r\n                                                    setSku(e.target.value)\r\n                                                }}/>\r\n                                            </Form.Item>\r\n                                            <Form.Item name=\"quantity\"\r\n                                                       label=\"Quantity\"\r\n                                                       rules={[{\r\n                                                           required: true,\r\n                                                           message: 'Please enter product quantity'\r\n                                                       }]}>\r\n                                                <Input placeholder=\"Quantity\" onChange={(e) => {\r\n                                                    setQuantity(e.target.value)\r\n                                                }}/>\r\n                                            </Form.Item>\r\n                                            <Form.Item name=\"stock\"\r\n                                                       label=\"Stock status\"\r\n                                            >\r\n                                                <Radio.Group onChange={onStock} value={stock}\r\n                                                             defaultValue={stock}>\r\n                                                    <Radio value=\"in_stock\">In Stock</Radio>\r\n                                                    <Radio value=\"out_of_stock\">Out Of Stock</Radio>\r\n                                                    <Radio value=\"stock_back\">Stock Back</Radio>\r\n\r\n                                                </Radio.Group>\r\n                                            </Form.Item>\r\n                                        </TabPane>\r\n                                        }\r\n                                    </Tabs>\r\n                                </>\r\n                                {/*{!productType && <VariationAttribute/> }*/}\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Card title=\"Visibility\" className=\"cardHeight\" bordered={false}>\r\n                                <>\r\n                                    <Card type=\"inner\" title=\"Visibility\">\r\n                                        <Switch checkedChildren=\"Published\" unCheckedChildren=\"Hidden\"\r\n                                                onChange={(e) => onVisibility(e)}/>\r\n                                    </Card>\r\n                                    <Card style={{marginTop: 16}} type=\"inner\" title=\"Popularity\">\r\n                                        <Switch checkedChildren={<CheckOutlined/>} unCheckedChildren={<CloseOutlined/>}\r\n                                                onChange={(a) => toggleChange(a)}/>\r\n                                    </Card>\r\n                                </>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={12} className=\"row\">\r\n                        <Col span={16}>\r\n                            <Card title=\"Search engine listing\" className=\"cardHeight\" bordered={false}>\r\n                                <>\r\n                                    <Form.Item name=\"seo_title\"\r\n                                               label=\"Title\"\r\n                                               rules={[{required: true, message: 'Please enter product price'}]}>\r\n                                        <Input placeholder=\"input placeholder\" onChange={(e) => {\r\n                                            setSeoTitle(e.target.value)\r\n                                        }}/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item name=\"seo_description\"\r\n                                               label=\"Description\"\r\n                                               rules={[{required: true, message: 'Please enter product barcode'}]}>\r\n                                        <TextArea placeholder=\"input placeholder\" onChange={(e) => {\r\n                                            setSeoDescription(e.target.value)\r\n                                        }}/>\r\n                                    </Form.Item>\r\n                                    <Form.Item name=\"keywords\"\r\n                                               label=\"Keywords\"\r\n                                               rules={[{required: true, message: 'Please enter product sku'}]}>\r\n                                        <Input placeholder=\"input placeholder\" onChange={(e) => {\r\n                                            setKeywords(e.target.value)\r\n                                        }}/>\r\n                                    </Form.Item>\r\n\r\n                                </>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Card title=\"Product Brand\" className=\"cardHeight\" bordered={false}>\r\n                                <>\r\n                                    <Form.Item label=\"Brands\"\r\n                                               rules={[{required: true, message: 'Please enter product Brand'}]}>\r\n                                        <Space\r\n                                            direction=\"vertical\"\r\n                                            style={{\r\n                                                width: '100%',\r\n                                            }}\r\n                                        >\r\n                                            <Select\r\n                                                showSearch\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                }{...selectBrandProps} />\r\n                                        </Space>\r\n                                    </Form.Item>\r\n                                </>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </MediaQuery>\r\n\r\n\r\n                {/* For Small Screen */}\r\n\r\n                <MediaQuery maxWidth={1224}>\r\n                    <Row className=\"row\">\r\n                        <Col span={24} offset={0}><Link to='/products'>\r\n                            <Button type=\"danger\" size=\"large\" className=\"button\"><span\r\n                                className=\"span\">Cancel</span></Button></Link>\r\n                            <Button type=\"submit\" size=\"large\" className=\"button\" loading={loading}\r\n                                    onClick={postProductHandler}><span\r\n                                className=\"span\">Save</span></Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={12} className=\"row\">\r\n                        <Col span={24}>\r\n                            <Card title=\"General Description\" className=\"cardHeight\" bordered={false}>\r\n                                <>\r\n                                    <Form.Item name=\"name\"\r\n                                               label=\"Product Name\"\r\n                                               rules={[{required: true, message: 'Please enter product name'}]}>\r\n                                        <Input placeholder=\"Product name\" onChange={(e) => {\r\n                                            setName(e.target.value)\r\n                                        }}/>\r\n                                    </Form.Item>\r\n                                    <Form.Item name=\"slug\"\r\n                                               label=\"Product Slug\">\r\n                                        <Input placeholder=\"Product Slug\" onChange={(e) => {\r\n                                            setSlug(e.target.value)\r\n                                        }}/>\r\n                                    </Form.Item>\r\n\r\n                                    <ReactQuill placeholder=\"Product description\"\r\n                                                onChange={(value, delta, source, editor) => {\r\n                                                    setDescription(editor.getHTML)\r\n                                                }}/>\r\n\r\n\r\n                                </>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col span={24}>\r\n                            <Card title=\"Add product to collection\" className=\"cardHeight\" bordered={false}>\r\n                                <>\r\n                                    <Form.Item label=\"Collections\">\r\n                                        <Space\r\n                                            direction=\"vertical\"\r\n                                            style={{\r\n                                                width: '100%',\r\n                                            }}\r\n                                        >\r\n                                            <Select filterOption={(input, option) =>\r\n                                                option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                            }{...selectProps} />\r\n                                        </Space>\r\n                                    </Form.Item>\r\n\r\n\r\n                                </>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row gutter={12} className=\"row\">\r\n                        <Col span={24}>\r\n                            <Card title=\"Product data -\" className=\"cardHeight\" bordered={false} extra={<Select\r\n                                style={{width: 200}}\r\n                                placeholder=\"Select a person\"\r\n                                optionFilterProp=\"children\"\r\n                                onChange={onProductChange}\r\n                                defaultValue=\"1\"\r\n                                filterOption={(input, option) =>\r\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                <Option value=\"1\">Simple Product</Option>\r\n                                <Option value=\"2\">Variable Product</Option>\r\n\r\n                            </Select>}>\r\n\r\n                                <>\r\n                                    <Tabs tabPosition=\"left\" defaultActiveKey=\"1\">\r\n                                        {\r\n                                            productType &&\r\n                                            <TabPane\r\n                                                tab={\r\n                                                    <span>\r\n                                                <SettingFilled/>\r\n                                                            General\r\n                                                        </span>\r\n                                                }\r\n                                                key=\"1\"\r\n                                            >\r\n                                                <Form.Item name=\"price\"\r\n                                                           label=\"Price\"\r\n                                                           rules={[{\r\n                                                               required: true,\r\n                                                               message: 'Please enter product price'\r\n                                                           }]}>\r\n                                                    <Input placeholder=\"Price\" onChange={(e) => {\r\n                                                        setPrice(e.target.value)\r\n                                                    }}/>\r\n                                                </Form.Item>\r\n                                                <Form.Item name=\"regular_price\"\r\n                                                           label=\"Regular Price\"\r\n                                                           rules={[{\r\n                                                               required: true,\r\n                                                               message: 'Please enter product regular price'\r\n                                                           }]}>\r\n                                                    <Input placeholder=\"Regular price\" onChange={(e) => {\r\n                                                        setRegularPrice(e.target.value)\r\n                                                    }}/>\r\n                                                </Form.Item>\r\n                                                <ImgCrop rotate>\r\n                                                    <Upload\r\n                                                        name=\"images\"\r\n                                                        listType=\"picture-card\"\r\n                                                        fileList={fileList}\r\n                                                        customRequest={dummyRequest}\r\n                                                        onChange={onChange}\r\n                                                        onPreview={onPreview}\r\n                                                    >\r\n                                                        {fileList.length < 5 && '+ Upload'}\r\n                                                    </Upload>\r\n                                                </ImgCrop>\r\n                                            </TabPane>\r\n                                        }\r\n\r\n                                        {productType &&\r\n                                        <TabPane\r\n                                            tab={\r\n                                                <span>\r\n                                                <CheckCircleFilled/>\r\n                                                            Inventory\r\n                                                        </span>\r\n                                            }\r\n                                            key=\"2\"\r\n                                        >\r\n                                            <Form.Item name=\"sku\"\r\n                                                       label=\"SKU\"\r\n                                                       rules={[{required: true, message: 'Please enter product sku'}]}>\r\n                                                <Input placeholder=\"Sku\" onChange={(e) => {\r\n                                                    setSku(e.target.value)\r\n                                                }}/>\r\n                                            </Form.Item>\r\n                                            <Form.Item name=\"quantity\"\r\n                                                       label=\"Quantity\"\r\n                                                       rules={[{\r\n                                                           required: true,\r\n                                                           message: 'Please enter product quantity'\r\n                                                       }]}>\r\n                                                <Input placeholder=\"Quantity\" onChange={(e) => {\r\n                                                    setQuantity(e.target.value)\r\n                                                }}/>\r\n                                            </Form.Item>\r\n                                            <Form.Item name=\"stock\"\r\n                                                       label=\"Stock status\"\r\n                                                       rules={[{\r\n                                                           required: true,\r\n                                                           message: 'Please select stock status'\r\n                                                       }]}>\r\n                                                <Radio.Group onChange={onStock} value=\"in_stock\"\r\n                                                             defaultValue=\"in_stock\">\r\n                                                    <Radio value=\"in_stock\">In Stock</Radio>\r\n                                                    <Radio value=\"out_of_stock\">Out Of Stock</Radio>\r\n                                                    <Radio value=\"stock_back\">Stock Back</Radio>\r\n\r\n                                                </Radio.Group>\r\n                                            </Form.Item>\r\n                                        </TabPane>\r\n                                        }\r\n                                        {!productType &&\r\n                                        <TabPane\r\n                                            tab={\r\n                                                <span>\r\n                                                <CalendarFilled/>\r\n                                                            Attributes\r\n                                                        </span>\r\n                                            }\r\n                                            key=\"3\"\r\n                                        >\r\n                                        </TabPane>}\r\n                                        {!productType &&\r\n                                        <TabPane\r\n                                            tab={\r\n                                                <span>\r\n                                                <BoxPlotFilled/>\r\n                                                            Variations\r\n                                                        </span>\r\n                                            }\r\n                                            key=\"4\"\r\n                                        >\r\n                                            Variations\r\n                                        </TabPane>}\r\n                                    </Tabs>\r\n                                </>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Card title=\"Visibility\" className=\"cardHeight\" bordered={false}>\r\n                                <>\r\n                                    <Card type=\"inner\" title=\"Visibility\">\r\n                                        <Switch checkedChildren=\"Published\" unCheckedChildren=\"Hidden\"\r\n                                                onChange={(e) => onVisibility(e)}/>\r\n                                    </Card>\r\n                                    <Card style={{marginTop: 16}} type=\"inner\" title=\"Popularity\">\r\n                                        <Switch checkedChildren={<CheckOutlined/>} unCheckedChildren={<CloseOutlined/>}\r\n                                                onChange={(a) => toggleChange(a)}/>\r\n                                    </Card>\r\n                                </>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row gutter={12} className=\"row\">\r\n                        <Col span={24}>\r\n                            <Card title=\"Search engine listing\" className=\"cardHeight\" bordered={false}>\r\n                                <>\r\n                                    <Form.Item name=\"seo_title\"\r\n                                               label=\"Title\"\r\n                                               rules={[{required: true, message: 'Please enter product price'}]}>\r\n                                        <Input placeholder=\"input placeholder\" onChange={(e) => {\r\n                                            setSeoTitle(e.target.value)\r\n                                        }}/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item name=\"seo_description\"\r\n                                               label=\"Description\"\r\n                                               rules={[{required: true, message: 'Please enter product barcode'}]}>\r\n                                        <TextArea placeholder=\"input placeholder\" onChange={(e) => {\r\n                                            setSeoDescription(e.target.value)\r\n                                        }}/>\r\n                                    </Form.Item>\r\n                                    <Form.Item name=\"keywords\"\r\n                                               label=\"Keywords\"\r\n                                               rules={[{required: true, message: 'Please enter product sku'}]}>\r\n                                        <Input placeholder=\"input placeholder\" onChange={(e) => {\r\n                                            setKeywords(e.target.value)\r\n                                        }}/>\r\n                                    </Form.Item>\r\n\r\n                                </>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Card title=\"Product Brand\" className=\"cardHeight\" bordered={false}>\r\n                                <>\r\n\r\n                                    <Form.Item label=\"Brands\">\r\n                                        <Space\r\n                                            direction=\"vertical\"\r\n                                            style={{\r\n                                                width: '100%',\r\n                                            }}\r\n                                        >\r\n                                            <Select\r\n                                                showSearch\r\n                                                filterOption={(input, option) =>\r\n                                                    option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                }{...selectBrandProps} />\r\n                                        </Space>\r\n                                    </Form.Item>\r\n                                </>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </MediaQuery>\r\n\r\n            </div>\r\n        </Form>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        collections: state.collections.collections,\r\n        brands: state.brands.brands,\r\n        attributes: state.attributes.attributes,\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps)(CreateProduct);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Roles\\NewRoles\\NewRoles.js",["628","629"],"import {React, useEffect, useState} from 'react';\r\nimport {Card, Checkbox, Col, Form, Input, Row, Button, notification} from \"antd\"\r\nimport {connect} from 'react-redux'\r\nimport * as actionCreators from \"../../../store/actions/moduleActions\"\r\nimport axios from \"axios\";\r\nimport * as authActions from \"../../../store/actions/AuthActions/auth\";\r\nimport {useHistory} from \"react-router-dom\"\r\nconst NewRole = (props) => {\r\n    const [modules, setModules] = useState([])\r\n    const [loading, setLoading] = useState()\r\n    const history=useHistory()\r\n    useEffect(() => {\r\n        axios.get(\"modules\").then(success => {\r\n            let modules = success.data\r\n            props.dispatch(actionCreators.storeAllModules(modules))\r\n            console.log(modules)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    function onChangeRead(e, id) {\r\n        let index = modules.findIndex(module => module.moduleId === id)\r\n        if (index !== -1) {\r\n            let newArray = [...modules]\r\n            newArray[index] = {\r\n                moduleId: id,\r\n                permissionRead: e.target.checked,\r\n                permissionWrite: newArray[index].permissionWrite\r\n            }\r\n            setModules(newArray)\r\n        } else {\r\n            let moduleObject = {\r\n                moduleId: id,\r\n                permissionRead: e.target.checked,\r\n                permissionWrite: false\r\n\r\n            }\r\n            setModules(modules => [...modules, moduleObject]);\r\n\r\n        }\r\n    }\r\n\r\n    function onChangeWrite(e, id) {\r\n        let index = modules.findIndex(module => module.moduleId === id)\r\n        if (index !== -1) {\r\n            let newArray = [...modules]\r\n            newArray[index] = {\r\n                moduleId: id,\r\n                permissionRead: newArray[index].permissionRead,\r\n                permissionWrite: e.target.checked\r\n            }\r\n            setModules(newArray)\r\n        } else {\r\n            let moduleObject = {\r\n                moduleId: id,\r\n                permissionRead: false,\r\n                permissionWrite: e.target.checked\r\n\r\n            }\r\n            setModules(modules => [...modules, moduleObject]);\r\n\r\n        }\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        if(modules.length ===0)\r\n        {\r\n            notification['error']({\r\n                message: 'Error',\r\n                description:\"Please give permission to atleast one module.\",\r\n            });\r\n            return\r\n        }\r\n        let role = new FormData();\r\n        role.append('name', values.role)\r\n        role.append('modules',JSON.stringify(modules))\r\n        setLoading(true)\r\n        axios.post('roles', role).then(success => {\r\n            setLoading(false)\r\n            notification['success']({\r\n                message: 'Success',\r\n                description:\"Role created successfully.\",\r\n            });\r\n            history.push('/roles');\r\n        }).catch(error => {\r\n            console.log(error)\r\n\r\n            setLoading(false)\r\n            //\r\n            notification['error']({\r\n                message: 'Error',\r\n                description:\r\n                error.response.data.message,\r\n            });\r\n        })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    return (\r\n            <div>\r\n                <Row className=\"row\">\r\n                    <Col offset={4} span={16}>\r\n                        <Card title=\"Create Role \" className=\"cardHeight\" bordered={false}>\r\n                            <>\r\n                                <Form\r\n                                    name=\"basic\"\r\n\r\n                                    onFinish={onFinish}\r\n                                    onFinishFailed={onFinishFailed}\r\n                                >\r\n                                    <Form.Item\r\n                                        label=\"Role Name\"\r\n                                        name=\"role\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Please input role name!',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input/>\r\n                                    </Form.Item>\r\n                                    <Form.Item >\r\n                                        <Button loading={loading} type=\"primary\" htmlType=\"submit\">\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\" row\">\r\n                    <Row>\r\n                        <Col offset={4} span={16}>\r\n                            <Card title=\"Modules\" bordered={false}>\r\n                                <Row>\r\n                                    {props.modules.map(module => (\r\n                                        <>\r\n                                            <Col span={8}>\r\n                                                {module.name}\r\n                                            </Col>\r\n                                            <Col span={8}>\r\n                                                <Checkbox onChange={(e) => onChangeRead(e, module.id)}>Read</Checkbox>\r\n                                            </Col>\r\n                                            <Col span={8}>\r\n                                                <Checkbox onChange={(e) => onChangeWrite(e, module.id)}>Write</Checkbox>\r\n                                            </Col>\r\n                                        </>\r\n                                    ))}\r\n                                </Row>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n\r\n\r\n    );\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        modules: state.modules.modules\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NewRole);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\User\\EditUser\\EditUser.js",["630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645"],"import React, {useEffect, useState} from 'react';\r\nimport {Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete, notification, Space} from 'antd';\r\nimport axios from \"axios\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport * as actionCreators from \"../../../store/actions/userActions\"\r\nimport Uploader from \"../../../components/ImageUploader/Uploader\";\r\nimport {storeUsers} from \"../../../store/actions/userActions\";\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 8,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 6,\r\n        },\r\n        sm: {\r\n            span: 8,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 16,\r\n            offset: 8,\r\n        },\r\n    },\r\n};\r\nconst EditUser = (props) => {\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(false)\r\n    const [file, setFile] = useState(\"\")\r\n    const [roleId , setRoleId] = useState(\"\")\r\n    const [allRoles,setAllRoles]=useState([])\r\n    const [firstName ,setFirstName] =useState(\"\")\r\n    const [lastName ,setLastName] =useState(\"\")\r\n    const [email ,setEmail] =useState(\"\")\r\n    const [password ,setPassword] =useState(\"\")\r\n    const roleHandler=(event)=>{\r\n        setRoleId(event)\r\n        console.log(event)\r\n    }\r\n\r\n    const id = props.match.params.id\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"users/\"+id).then(\r\n            success=>{\r\n                let userData = success.data\r\n                form.setFieldsValue(userData)\r\n                setRoleId(userData.roleId)\r\n            }\r\n        ).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n    useEffect(()=>{\r\n        axios.get(\"roles/\").then(response=>{\r\n            console.log(response)\r\n            const results = response.data.map((row)=>({\r\n                value:row.id,\r\n                label:row.name\r\n            }))\r\n            setAllRoles(results)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    },[])\r\n    const history=useHistory()\r\n    const onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n        let user = new FormData();\r\n        user.append(\"firstName\",values.firstName)\r\n        user.append(\"lastName\",values.lastName)\r\n        user.append(\"email\",values.email)\r\n        user.append(\"roleId\",roleId)\r\n        // user.append(\"image\",file)\r\n        user.append(\"password\",password)\r\n        user.append(\"confirmPassword\",values.confirmPassword)\r\n        setLoading(true)\r\n        axios.put(\"users/\"+id,user).then(success=>{\r\n            console.log(success)\r\n            setLoading(false)\r\n            notification['success']({\r\n                message: 'Success',\r\n                description:\"User created successfully.\",\r\n            });\r\n            history.push('/users');\r\n        }).catch(error=>{\r\n            console.log(error)\r\n            setLoading(false)\r\n            notification['error']({\r\n                message: 'Error',\r\n                description:error.response.data.message,\r\n            });\r\n        })\r\n\r\n    };\r\n    const saveImage =(image)=>{\r\n        console.log(image)\r\n        setFile(image)\r\n        console.log(file)\r\n    }\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    return (\r\n        <Form\r\n            {...formItemLayout}\r\n            name=\"register\"\r\n            onFinish={onFinish}\r\n            form={form}\r\n            onFinishFailed={onFinishFailed}\r\n            scrollToFirstError\r\n        >\r\n            <Form.Item\r\n                name=\"firstName\"\r\n                label=\"First Name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your First Name!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input placeholder=\"First Name\"/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"lastName\"\r\n                label=\"Last Name\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Last  Name!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input placeholder=\"Last Name\"/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"email\"\r\n                label=\"E-mail\"\r\n                rules={[\r\n                    {\r\n                        type: 'email',\r\n                        message: 'The input is not valid E-mail!',\r\n                    },\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your E-mail!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input placeholder=\"enter Email\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n\r\n                pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n                label=\"Password\"\r\n                tooltip=\"password must be of 8 letters at least\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password onChange={(e) => {setPassword(e.target.value)}}\r\n                                placeholder=\"password must be of 8 letters at least\"/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                tooltip=\"password must be of 8 letters at least\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                    },\r\n                    ({getFieldValue}) => ({\r\n                        validator(_, value) {\r\n                            if (!value || password === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n\r\n                            return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password placeholder=\"password must be of 8 letters at least\"/>\r\n            </Form.Item>\r\n            <Form.Item label=\"Roles\"\r\n            >\r\n                <Space\r\n                    direction=\"vertical\"\r\n                    style={{\r\n                        width: '50%',\r\n                    }}\r\n                >\r\n                    <Select\r\n                        showSearch\r\n                        value={roleId}\r\n                        options={allRoles}\r\n                        onChange={e=>roleHandler(e)}\r\n                        filterOption={(input, option) =>\r\n                            option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                        }\r\n                    />\r\n                </Space>\r\n            </Form.Item>\r\n            {/*<Form.Item*/}\r\n            {/*    name=\"file\"*/}\r\n            {/*    label=\"Upload Image\"*/}\r\n            {/*>*/}\r\n            {/*    <Uploader saveImage={saveImage}/>*/}\r\n            {/*</Form.Item>*/}\r\n            <Form.Item {...tailFormItemLayout}>\r\n                <Button type=\"primary\" loading={loading} htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default EditUser;\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Roles\\Roles\\Roles.js",["646","647","648","649","650","651"],"import {Component, React} from 'react';\r\nimport {Button, Card, Col, Layout, message, Row, Space, Table} from \"antd\";\r\nimport {EditOutlined, PlusOutlined} from \"@ant-design/icons\";\r\nimport {Link} from 'react-router-dom'\r\nimport * as actionCreators from \"../../../store/actions/roleActions\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport DeletePop from \"../../../components/PopConfirm/PopConfirm\";\r\n\r\nconst {Content} = Layout;\r\nconst {Column} = Table;\r\n\r\n\r\nclass Roles extends Component {\r\n    state = {\r\n        roles: [],\r\n        auth:[],\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.dispatch(actionCreators.storeRoles())\r\n\r\n    }\r\n\r\n    deleteRoles = (id) => {\r\n        axios.delete('roles/' + id).then(response => {\r\n            this.props.dispatch(actionCreators.deleteRole(id))\r\n            message.success('Role deleted successfully.');\r\n\r\n        }).catch(error => {\r\n            message.error('can not delete the Role')\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const currentModule = this.props.match.url.slice(1,12)\r\n        console.log(currentModule)\r\n        const wholeModule = this.props.auth.user.role.modules.find(module=>module.slug===currentModule)\r\n        const permission = wholeModule.ModuleRole.permission\r\n        console.log(permission)\r\n        return (\r\n            <Content style={{margin: '16px 16px'}}>\r\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n                    {permission===\"read\"?\"\":\r\n                        <Link to=\"role/create\">\r\n                        <Button className='Button' type=\"primary\">\r\n                            <PlusOutlined/> New Role{console.log(this.props.roles)}\r\n                        </Button>\r\n                    </Link>}\r\n                    <Table dataSource={this.props.roles}>\r\n                        <Column title=\"Sr #\" dataIndex=\"key\" key=\"key\"/>\r\n                        <Column title=\"Name\" dataIndex=\"name\" key=\"name\"/>\r\n                    </Table>\r\n                </div>\r\n            </Content>\r\n\r\n        );\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        roles: state.roles.roles,\r\n        auth:state.auth.auth\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(Roles);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\User\\User\\User.js",["652","653","654","655"],"import {Component, React} from 'react';\r\nimport {Button, Layout, message,Input, Space, Switch, Table} from \"antd\";\r\nimport {CheckOutlined,SearchOutlined , CloseOutlined, EditOutlined, PlusOutlined} from \"@ant-design/icons\";\r\nimport {Link} from 'react-router-dom'\r\nimport Highlighter from 'react-highlight-words';\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport DeletePop from \"../../../components/PopConfirm/PopConfirm\";\r\nimport {storeUsers,deleteUser} from \"../../../store/actions/userActions\";\r\nimport MediaQuery from 'react-responsive'\r\nconst {Content} = Layout;\r\nconst {Column} = Table;\r\n\r\nclass Users extends Component {\r\n    state = {\r\n        users: [],\r\n        searchText: '',\r\n        searchedColumn: '',\r\n        data:[],\r\n        auth:[]\r\n    };\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.storeAllUsers()\r\n        this.setState({\r\n            data:this.props.users\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps!==this.props){\r\n            this.setState({\r\n                data:this.props.users\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    deleteUser = (id) => {\r\n        axios.delete('users/' + id).then(response => {\r\n            this.props.deleteOneUser(id)\r\n            message.success('User deleted successfully.');\r\n\r\n        }).catch(error => {\r\n            message.error('can not delete the User')\r\n        })\r\n    }\r\n    render() {\r\n        const currentModule = this.props.match.url.slice(1,12)\r\n        console.log(currentModule)\r\n        const wholeModule = this.props.auth.user.role.modules.find(module=>module.slug===currentModule)\r\n        const permission = wholeModule.ModuleRole.permission\r\n        console.log(permission)\r\n        const columns = [\r\n            {\r\n                title: 'Sr#',\r\n                dataIndex: 'key',\r\n                key: 'key',\r\n                responsive: ['lg'],\r\n                // width: '10%',\r\n            },\r\n            {\r\n                title: 'First Name',\r\n                dataIndex: 'firstName',\r\n                key: 'firstName',\r\n                ...this.getColumnSearchProps('firstName'),\r\n                // width: '20%',\r\n\r\n            },\r\n            {\r\n                title: 'Last Name',\r\n                dataIndex: 'lastName',\r\n                key: 'lastName',\r\n                // width: '20%',\r\n                responsive: ['lg'],\r\n                ...this.getColumnSearchProps('lastName'),\r\n            },\r\n            {\r\n                title: 'Email',\r\n                dataIndex: 'email',\r\n                key: 'email',\r\n                responsive: ['lg'],\r\n                // width: '30%',\r\n                ...this.getColumnSearchProps('email'),\r\n            },\r\n            {\r\n                title: 'Role',\r\n                dataIndex: 'role',\r\n                key: 'role',\r\n                responsive: ['lg'],\r\n                // width: '20%',\r\n                ...this.getColumnSearchProps('role'),\r\n            },\r\n            {\r\n                title: \"Action\",\r\n                dataIndex: \"key\",\r\n                key: \"action\",\r\n                render: (key) => (\r\n                <Space size=\"middle\">\r\n                    <MediaQuery minWidth={1224}>\r\n                        {/*For large screeen*/}\r\n                        <Link to={\"/user/edit/\" + key}>\r\n                            <Button shape=\"round\" icon={<EditOutlined/>}\r\n                                    size=\"small\">\r\n                                Edit\r\n                            </Button>\r\n                        </Link>\r\n\r\n                    </MediaQuery>\r\n                    <MediaQuery maxWidth={1224}>\r\n                        {/*For mobile and tablet*/}\r\n                        <Link to={\"/user/edit/\" + key}>\r\n                            <Button shape=\"round\" icon={<EditOutlined/>}\r\n                                    size=\"small\">\r\n                            </Button>\r\n                        </Link>\r\n\r\n\r\n                    </MediaQuery>\r\n                    <DeletePop name=\"User\" deleteHandler={() => {\r\n                        this.deleteUser(key)\r\n                    }}/>\r\n                </Space>\r\n            )\r\n\r\n\r\n            }\r\n        ];\r\n        const new_column = columns.slice(0,5)\r\n        return <>\r\n            <Content style={{margin: '16px 16px'}}>\r\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n                    {permission===\"read\"?\"\":<Link to=\"user/create\">\r\n                        <Button className='Button' type=\"primary\">\r\n                            <PlusOutlined/> New User\r\n                        </Button>\r\n                    </Link>}\r\n                    <Table columns={permission==='read'?new_column:columns} dataSource={this.state.data}/>\r\n                </div>\r\n            </Content>\r\n        </>;\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users.users,\r\n        auth:state.auth.auth\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return {\r\n        storeAllUsers: () => {\r\n            dispatch(storeUsers())\r\n        },\r\n        deleteOneUser:(id)=>{\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Users);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Menu\\Menus\\Menus.js",["656"],"import React,{ Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Layout, Space, Table, Popconfirm, message} from \"antd\";\r\nimport {Button} from \"antd\";\r\nimport EditOutlined from \"@ant-design/icons/lib/icons/EditOutlined\";\r\nimport DeletePop from \"../../../components/PopConfirm/PopConfirm\"\r\nimport NewMenus from \"../../Menu/NewMenu/NewMenu\"\r\nimport EditMenus from \"../../Menu/EditMenus/EditMenus\"\r\n\r\nimport './Menus.css'\r\nimport PlusOutlined from \"@ant-design/icons/lib/icons/PlusOutlined\";\r\nimport axios from \"axios\";\r\nimport * as actionCreators from \"../../../store/actions/menuActions\";\r\nimport MediaQuery from 'react-responsive'\r\n\r\nconst {Column} = Table;\r\nconst {Content} = Layout;\r\n\r\nclass Menus extends Component {\r\n    state = {\r\n        visible: false,\r\n        editVisible: false,\r\n        menuId: '',\r\n        Menus: [],\r\n        auth:[],\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(actionCreators.storeMenus())\r\n    }\r\n\r\n    showDrawer = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n    editShowDrawer = (id) => {\r\n        this.setState({\r\n            editVisible: true,\r\n            menuId: id\r\n        });\r\n\r\n    };\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    editOnClose = () => {\r\n        this.setState({\r\n            editVisible: false,\r\n        });\r\n    };\r\n    deleteMenu=(id)=>{\r\n        axios.delete('menus/'+id).then(response => {\r\n            this.props.dispatch(actionCreators.deleteMenu(id))\r\n            message.success('Menu deleted successfully.');\r\n\r\n        }).catch(error => {\r\n            let errors=error.response.data;\r\n            message.error(errors.errors[0].msg);\r\n\r\n\r\n        })\r\n    }\r\n    render() {\r\n        const currentModule = this.props.match.url.slice(1,9)\r\n        const wholeModule = this.props.auth.user.role.modules.find(xx=>xx.slug===currentModule)\r\n        const permission = wholeModule.ModuleRole.permission\r\n        return (\r\n            <Content style={{margin: '16px 16px'}}>\r\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n                    {permission===\"read\"?\" \":<Button className='Button' type=\"primary\" onClick={this.showDrawer}>\r\n                        <PlusOutlined/> New Menu\r\n                    </Button>}\r\n                    <Table dataSource={this.props.menus}>\r\n                         \r\n                        <Column className=\"Responsive-1224\" title=\"Sr #\" dataIndex=\"key\" key=\"key\"/>\r\n\r\n                        <Column title=\"Name\" dataIndex=\"name\" key=\"name\"/>\r\n                        <Column className=\"Responsive-1224\" title=\"Menu Collection\" dataIndex=\"menuCollection\" key=\"menuCollection\"/>\r\n                        <Column className=\"Responsive-1224\" title=\"Created At\" dataIndex=\"createdAt\" key=\"createdAt\"/>\r\n                        {permission===\"read\"?\" \":<Column\r\n                            title=\"Action\"\r\n                            dataIndex=\"key\"\r\n                            key=\"action\"\r\n                            render={(key) => (\r\n                                <Space size=\"middle\">\r\n                                    <MediaQuery minWidth={1224}>\r\n                                    <Button shape=\"round\" icon={<EditOutlined/>}\r\n                                            onClick={() => this.editShowDrawer(key)} size=\"medium\">\r\n                                        Edit\r\n                                    </Button>\r\n                                    </MediaQuery>\r\n\r\n                                    <MediaQuery maxWidth={1224}>\r\n                                    <Button shape=\"round\" icon={<EditOutlined/>}\r\n                                            onClick={() => this.editShowDrawer(key)} size=\"medium\">\r\n                                        \r\n                                    </Button>\r\n                                    </MediaQuery>\r\n                                    \r\n                                    <DeletePop name=\"Menus\" deleteHandler={() => {\r\n                                        this.deleteMenu(key)\r\n                                    }}/>\r\n                                </Space>\r\n                            )}\r\n                        />}\r\n                    </Table>\r\n                        <NewMenus visible={this.state.visible} cancel={this.onClose}/>\r\n                    <EditMenus visible={this.state.editVisible} menuId={this.state.menuId} cancel={this.editOnClose}/>\r\n\r\n                </div>\r\n            </Content>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        menus: state.menus.menus,\r\n        auth:state.auth.auth\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps)(Menus);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Variations\\NewVariationis\\Variations.js",["657","658","659","660"],"import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {storeAttributes} from \"../../../store/actions/attributeActions\";\r\nimport VariationsMaterial from \"../../Variations/VariationMaterials/VariationMaterial\";\r\nimport {Button, Card, Col, Row} from \"antd\";\r\nimport EditableTable from \"../../Variations/VariationMaterials/VariationsTable\";\r\nimport axios from \"axios\";\r\n\r\nexport const VariationContext = React.createContext()\r\nexport const productId = React.createContext()\r\nconst Variations = (props) => {\r\n    console.log(props)\r\n    const resId = props.match.params.id\r\n    // all code of variations\r\n    const [totalAttNumber, setTotalAttNumber]= useState(10000)\r\n    const dispatch = useDispatch()\r\n    const {attributes} = useSelector(({attributes}) => attributes);\r\n    useEffect(() => {\r\n        dispatch(storeAttributes())\r\n    }, []);\r\n    const [attributeAndVariationHtml, setAttributeVariationHtml] = useState([])\r\n    const [keyCount, setKeyCount] = useState(0)\r\n    const [callBackAttKey, setCallBackAttKey] = useState(0);\r\n    const [allAtt, setAllAtt] = useState([]);\r\n    useEffect(() => {\r\n        setAllAtt(attributes)\r\n        setTotalAttNumber(attributes.length)\r\n    }, [attributes]);\r\n    const [addAttButton, setAddAttButton] = useState(false)\r\n    useEffect(() => {\r\n        let newValue = allAtt.filter(att => att.key !== callBackAttKey)\r\n        setAllAtt(newValue);\r\n    }, [callBackAttKey]);\r\n\r\n    const [attIdArray, setAttIdArray]=useState([])\r\n    const getAttValFromDaughter = (value) => {\r\n        setCallBackAttKey(value)\r\n        setAttIdArray(oldArray => [...oldArray, value])\r\n        setKeyCount(keyCount + 1)\r\n    }\r\n    const handleClickForAddingAttribute = () => {\r\n        const attributeVariation = (<VariationsMaterial\r\n            key={Math.random(12).toString}\r\n            specialKey={keyCount}\r\n            getAttVal={getAttValFromDaughter}\r\n            attributes={allAtt}/>)\r\n        setAttributeVariationHtml(oldArray => [...oldArray, attributeVariation])\r\n\r\n    }\r\n    useEffect(()=>{\r\n        totalAttNumber === attributeAndVariationHtml.length && setAddAttButton(true);\r\n    },[attributeAndVariationHtml])\r\n    const [arrayForRecursion, setArrayForRecursion] = useState([]);\r\n\r\n    const cartesianProduct = (a) => { // a = array of array\r\n        var i, j, l, m, a1, o = [];\r\n        if (!a || a.length == 0) return a;\r\n\r\n        a1 = a.splice(0, 1)[0]; // the first array of a\r\n        a = cartesianProduct(a);\r\n        for (i = 0, l = a1.length; i < l; i++) {\r\n            if (a && a.length)\r\n                for (j = 0, m = a.length; j < m; j++)\r\n                    o.push([a1[i]].concat(a[j]));\r\n            else\r\n                o.push([a1[i]]);\r\n        }\r\n        return o;\r\n    }\r\n    const [newArray, setNewArray] = useState([]);\r\n    const myFunction = (value) => {\r\n        let tempObject = {};\r\n        let tempArray = [];\r\n        tempObject.attKey = callBackAttKey\r\n        tempObject.attValue = value\r\n        let filteredArray =newArray.map(arr=>arr.filter(arr=> arr.attKey !== callBackAttKey ))\r\n        let improvedArray = filteredArray.filter(arr=> {\r\n            return arr !== []\r\n        })\r\n        setNewArray(improvedArray)\r\n        setArrayForRecursion(oldArray => [...oldArray, value])\r\n        tempArray.push(tempObject)\r\n        setNewArray(old=>[...old, tempArray])\r\n\r\n    }\r\n    console.log(newArray)\r\n\r\n    const [arrayForTable, setArrayForTable] = useState([])\r\n    const saveVariationsDataCreateAttributeProduct = () => {\r\n        setArrayForTable(cartesianProduct(arrayForRecursion))\r\n        createAttributeValues(newArray)\r\n    }\r\n\r\n    const createAttributeValues = (array) => {\r\n        let data = new FormData()\r\n        data.append(\"attributesIdArray\",attIdArray)\r\n        data.append(\"data\", JSON.stringify(array))\r\n        data.append(\"productId\",props.match.params.id)\r\n        let test = JSON.stringify(array, null, 2);\r\n        console.log(test)\r\n        alert(test)\r\n        axios.post('/attributes/values/',data,{\r\n            contentType: 'application/json'\r\n        }).then(res=>console.log(res)).catch(err=>console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row gutter={24} className=\"row\">\r\n                <Col span={24}>\r\n                    <VariationContext.Provider value={myFunction}>\r\n                    <productId.Provider value={resId}>\r\n                        <Card title=\"Variations\" className=\"cardHeight\" bordered={false}>\r\n                            <>\r\n                                <Button disabled={addAttButton}\r\n                                        type=\"primary\"\r\n                                        style={{\r\n                                            marginBottom: 16,\r\n                                            marginTop: 16,\r\n                                        }}\r\n                                        onClick={handleClickForAddingAttribute}>Add Attribute for Variant</Button>\r\n                                {attributeAndVariationHtml}\r\n                                {arrayForRecursion.length !== 0 &&\r\n                                <Button\r\n                                    onClick={()=>saveVariationsDataCreateAttributeProduct()} type=\"primary\"\r\n                                    style={{\r\n                                        marginBottom: 16, marginTop: 16,\r\n                                    }}\r\n                                >\r\n                                    Create Variations\r\n                                </Button>}\r\n                                {arrayForTable.length !== 0 ? <EditableTable children={arrayForTable}/> : ''}\r\n                            </>\r\n                        </Card>\r\n                    </productId.Provider>\r\n                    </VariationContext.Provider>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Variations;","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Variations\\AllProductVariations\\AllProdcutVariations.js",["661","662","663","664"],"import React, {Component} from \"react\";\r\nimport {\r\n    Button,\r\n    Input,\r\n    Layout,\r\n    message,\r\n    Space,\r\n    Switch,\r\n    Table,\r\n} from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nimport {\r\n    EditOutlined,\r\n    PlusOutlined,\r\n    SearchOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {Link} from \"react-router-dom\";\r\nimport * as actionCreators from \"../../../store/actions/variantActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {storeVariantsWithId} from \"../../../store/actions/variantActions\";\r\n\r\n\r\nconst {Content} = Layout;\r\n\r\nclass AllProductVariations extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productId: null,\r\n            isPopular: false,\r\n            searchText: \"\",\r\n            searchedColumn: \"\",\r\n            data: [],\r\n            productVariants: [],\r\n        };\r\n    }\r\n    productId = this.props.match.params.id;\r\n\r\n    getColumnSearchProps = (dataIndex) => ({\r\n        filterDropdown: ({\r\n                             setSelectedKeys,\r\n                             selectedKeys,\r\n                             confirm,\r\n                             clearFilters,\r\n                         }) => (\r\n            <div style={{padding: 8}}>\r\n                <Input\r\n                    ref={(node) => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={(e) =>\r\n                        setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n                    }\r\n                    onPressEnter={() =>\r\n                        this.handleSearch(selectedKeys, confirm, dataIndex)\r\n                    }\r\n                    style={{marginBottom: 8, display: \"block\"}}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined/>}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => this.handleReset(clearFilters)}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({closeDropdown: false});\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: (filtered) => (\r\n            <SearchOutlined style={{color: filtered ? \"#1890ff\" : undefined}}/>\r\n        ),\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex]\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .includes(value.toLowerCase())\r\n                : \"\",\r\n        onFilterDropdownVisibleChange: (visible) => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: (text) =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{backgroundColor: \"#ffc069\", padding: 0}}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = (clearFilters) => {\r\n        clearFilters();\r\n        this.setState({searchText: \"\"});\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(actionCreators.storeVariantsWithId(this.productId));\r\n        this.setState({\r\n            data: this.props.productVariants,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.productVariants !== this.props.productVariants) {\r\n            this.setState({data: this.props.productVariants});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const columns = [\r\n            {\r\n                title: \"Sr#\",\r\n                dataIndex: \"key\",\r\n                key: \"key\",\r\n                width: \"10%\",\r\n                responsive: [\"lg\"],\r\n            },\r\n            {\r\n                title: \"Name\",\r\n                dataIndex: \"name\",\r\n                key: \"name\",\r\n                ...this.getColumnSearchProps(\"name\"),\r\n                width: \"20%\",\r\n            },\r\n            {\r\n                title: \"Created At\",\r\n                dataIndex: \"createdAt\",\r\n                key: \"createdAt\",\r\n                width: \"20%\",\r\n                responsive: [\"lg\", \"md\", \"sm\"],\r\n            },\r\n            {\r\n                title: \"Action\",\r\n                dataIndex: \"key\",\r\n                key: \"action\",\r\n                render: (key) => (\r\n                    <Space size=\"middle\">\r\n                        <Link to={\"/product/editvariation/\" + key}>\r\n                            <Button shape=\"round\" icon={<EditOutlined/>} size=\"small\">\r\n                                Variations\r\n                            </Button>\r\n                        </Link>\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n        // const newProductButton = (\r\n        //     <>\r\n        //         <Link to=\"product/create\">\r\n        //             <Button className=\"Button\" type=\"primary\">\r\n        //                 <PlusOutlined/> New Product\r\n        //             </Button>\r\n        //         </Link>\r\n        //     </>\r\n        // );\r\n        return (\r\n            <Content style={{margin: \"16px 16px\"}}>\r\n                <div\r\n                    className=\"site-layout-background\"\r\n                    style={{padding: 24, minHeight: 360}}\r\n                >\r\n                    {console.log(this.props)}\r\n                    <Table\r\n                        columns={columns}\r\n                        dataSource={this.state.data}\r\n                    />\r\n                </div>\r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        productVariants: state.variants.variants,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AllProductVariations);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Variations\\EditVariations\\EditVariation.js",["665","666","667"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {Button, Card, Col,Radio, Form, Input, message, Row, Upload} from \"antd\"\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport ImgCrop from \"antd-img-crop\";\r\n\r\nconst EditVariation = (props) => {\r\n    const id = props.match.params.id\r\n    const [price, setPrice] = useState('');\r\n    const [sku, setSku] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [stock, setStock] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [loading, setLoading] = useState(false)\r\n    const [form] = Form.useForm();\r\n    const [fileList, setFileList] = useState([]);\r\n    let [removedImages, setRemovedImages] = useState([])\r\nconsole.log(status)\r\n\r\n    let onChange = ({fileList: newFileList}) => {\r\n        setFileList(newFileList);\r\n    };\r\n    const onRemove = file => {\r\n        setRemovedImages(removedImages => [...removedImages, file.uid])\r\n\r\n    };\r\n    const onPreview = async file => {\r\n        let src = file.url;\r\n        if (!src) {\r\n            src = await new Promise(resolve => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file.originFileObj);\r\n                reader.onload = () => resolve(reader.result);\r\n            });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n    };\r\n    const dummyRequest = ({file, onSuccess}) => {\r\n        setTimeout(() => {\r\n            onSuccess(\"ok\");\r\n        }, 0);\r\n    };\r\n    const formLayout = 'vertical';\r\n    useEffect(() => {\r\n        axios.get('variants/findOne/' + id).then((response) => {\r\n            let product = response.data\r\n\r\n            form.setFieldsValue(product)\r\n            setName(product.name)\r\n            setSku(product.sku)\r\n            setPrice(product.price)\r\n            setStock(product.stock)\r\n            setStatus(product.status)\r\n            let images = product.variantImg\r\n            images.map((image) => {\r\n                let path = process.env.REACT_APP_BASE_IMAGE_PATH + image.path\r\n                let img = {\r\n                    uid: image.id,\r\n                    url: path\r\n                }\r\n                setFileList(defaultFileList => [...defaultFileList, img])\r\n\r\n            })\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }, [])\r\n    const history = useHistory()\r\n    const postVariantHandler = async () => {\r\n        const validate = await form.validateFields()\r\n\r\n        let product = new FormData();\r\n        product.append('name', name)\r\n        product.append('stock', stock)\r\n        product.append('sku', sku)\r\n        product.append('removedImages', removedImages)\r\n        product.append('price', price)\r\n        product.append('stockStatus', status)\r\n        fileList.forEach(file => {\r\n            product.append('files', file.originFileObj);\r\n        });\r\n        setLoading(true)\r\n\r\n        axios.put('variants/' + id, product, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(response => {\r\n            console.log(response)\r\n            message.success('variant updated successfully.');\r\n            setLoading(false)\r\n            history.push(\"/products\")\r\n\r\n        }).catch(error => {\r\n            setLoading(false)\r\n            console.log(error)\r\n            message.error(error)\r\n        })\r\n    }\r\n    const onStockStatus = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n    const radio = <Radio.Group onChange={onStockStatus} value={status} defaultValue={status}>\r\n        <Radio value=\"in_stock\">In Stock</Radio>\r\n        <Radio value=\"not_available\">Out Of Stock</Radio>\r\n        <Radio value=\"stock_back\">Stock Back</Radio>\r\n    </Radio.Group>\r\n    return (\r\n        <div className=\"site-card-wrapper\">\r\n            <Row className=\"row\">\r\n                <Col span={8} offset={16}><Link to='/products'>\r\n                    <Button type=\"danger\" size=\"large\" className=\"button\"><span\r\n                        className=\"span\">Cancel</span></Button></Link>\r\n                    <Button type=\"submit\" size=\"large\" className=\"button\" loading={loading}\r\n                            onClick={postVariantHandler}><span\r\n                        className=\"span\">Save</span></Button>\r\n                </Col>\r\n            </Row>\r\n            <Card>\r\n            <Form\r\n                layout={formLayout}\r\n                form={form}\r\n                initialValues={{\r\n                    layout: formLayout,\r\n                }}\r\n            >\r\n                <Row gutter={12} className=\"row\">\r\n                    <Col md={16}>\r\n                        <Form.Item name=\"name\"\r\n                                   label=\"Name\"\r\n                                   rules={[{\r\n                                       required: true,\r\n                                       message: 'Please enter Variant Name'\r\n                                   }]}>\r\n                            <Input placeholder=\"Name\" onChange={(e) => {\r\n                                setName(e.target.value)\r\n                            }}/>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"sku\"\r\n                                   label=\"Sku\"\r\n                                   rules={[{\r\n                                       required: true,\r\n                                       message: 'Please enter variant Sku'\r\n                                   }]}>\r\n                            <Input placeholder=\"Sku\" onChange={(e) => {\r\n                                setSku(e.target.value)\r\n                            }}/>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"price\"\r\n                                   label=\"Price\"\r\n                                   rules={[{\r\n                                       required: true,\r\n                                       message: 'Please enter product price'\r\n                                   }]}>\r\n                            <Input placeholder=\"Price\" onChange={(e) => {\r\n                                setPrice(e.target.value)\r\n                            }}/>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"stock\"\r\n                                   label=\"Stock\"\r\n                                   rules={[{\r\n                                       required: true,\r\n                                       message: 'Please enter variant Stock'\r\n                                   }]}>\r\n                            <Input placeholder=\"Stock\" onChange={(e) => {\r\n                                setStock(e.target.value)\r\n                            }}/>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"stock-status\"\r\n                                   label=\"Stock status\"\r\n                                   defaultValue={status}\r\n                                  >\r\n                            {status !=='' && radio}\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        <Card title=\"Image\">\r\n                        <Form.Item name=\"image\">\r\n                            <ImgCrop rotate>\r\n                                <Upload\r\n                                    name=\"images\"\r\n                                    listType=\"picture-card\"\r\n                                    fileList={fileList}\r\n                                    customRequest={dummyRequest}\r\n                                    onChange={onChange}\r\n                                    onPreview={onPreview}\r\n                                    onRemove={onRemove}\r\n                                >\r\n                                    {fileList.length < 5 && '+ Upload'}\r\n                                </Upload>\r\n                            </ImgCrop>\r\n                        </Form.Item>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default EditVariation;\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Auth\\ForgotPassword\\index.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\attributeActions.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\brandActions.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\moduleActions.js",["668"],"import axios from \"axios\";\r\nimport {React} from \"react\";\r\n\r\nexport const STORE_MODULES = 'STORE_MODULES'\r\nexport const saveAllModules = (res) => {\r\n    return {\r\n        type: 'STORE_MODULES',\r\n        value: res\r\n    }\r\n}\r\n\r\nexport const storeAllModules = () => {\r\n    return dispatch => {\r\n        axios.get('modules')\r\n            .then(response => {\r\n                console.log(response.data)\r\n                const results = response.data\r\n                dispatch(saveAllModules(results))\r\n            })\r\n    }\r\n}\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\productActions.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\userActions.js",["669","670"],"import axios from \"axios\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nimport {React} from \"react\";\r\n\r\nexport const STORE_USERS = 'STORE_USERS'\r\nexport const ADD_USER='ADD_USER'\r\nexport const EDIT_USER='EDIT_USER'\r\nexport const DELETE_USER='DELETE_USER'\r\nexport const saveUsers = (res) => {\r\n    return {\r\n        type: 'STORE_USERS',\r\n        value: res\r\n    }\r\n}\r\nexport const editUser = (res) => {\r\n    return {\r\n        type: 'EDIT_USER',\r\n        value: res\r\n    }\r\n}\r\nexport const deleteUser = (res) => {\r\n    return {\r\n        type: 'DELETE_USER',\r\n        value: res\r\n    }\r\n}\r\nexport const storeUsers = () => {\r\n    return dispatch => {\r\n        axios.get('users')\r\n            .then(response => {\r\n                const results = response.data.map(row => ({\r\n                    key: row.id,\r\n                    lastName:row.lastName,\r\n                    firstName: row.firstName,\r\n                    image: row.image,\r\n                    email: row.email,\r\n                    role:row.role.name\r\n\r\n                }))\r\n                dispatch(saveUsers(results))\r\n\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const saveUser = (res) => {\r\n    return {\r\n        type: 'ADD_USER',\r\n        value: res\r\n    }\r\n}\r\n\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\reviewActions.js",["671","672"],"import axios from \"axios\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nimport {React} from \"react\";\r\n\r\nexport const STORE_REVIEWS = 'STORE_REVIEWS'\r\nexport const ADD_REVIEW='ADD_REVIEW'\r\nexport const EDIT_REVIEW='EDIT_REVIEW'\r\nexport const DELETE_REVIEW='DELETE_REVIEW'\r\nexport const saveReviews = (res) => {\r\n    return {\r\n        type: 'STORE_REVIEWS',\r\n        value: res\r\n    }\r\n}\r\n// export const editReview = (res) => {\r\n//     return {\r\n//         type: 'EDIT_REVIEW',\r\n//         value: res\r\n//     }\r\n// }\r\n// export const deleteReview = (res) => {\r\n//     return {\r\n//         type: 'DELETE_REVIEW',\r\n//         value: res\r\n//     }\r\n// }\r\n\r\nexport const storeReviews = () => {\r\n    return dispatch => {\r\n        alert()\r\n        axios.get('/reviews')\r\n            .then(response => {\r\n                const results = response.data\r\n                dispatch(saveReviews(results))\r\n            }).catch(e=>{\r\n                console.log(e)\r\n        })\r\n    }\r\n\r\n}\r\n\r\n// export const saveBrand = (res) => {\r\n//     return {\r\n//         type: 'ADD_REVIEW',\r\n//         value: res\r\n//     }\r\n// }\r\n\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\customerActions.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\collectionActions.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\variantActions.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\menuActions.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\questionActions.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\roleActions.js",["673"],"import axios from \"axios\";\r\nimport {React} from \"react\";\r\n\r\nexport const STORE_ROLES = 'STORE_ROLES'\r\nexport const ADD_ROLE='ADD_ROLE'\r\nexport const EDIT_ROLE='EDIT_ROLE'\r\nexport const DELETE_ROLE='DELETE_ROLE'\r\nexport const saveRoles = (res) => {\r\n    return {\r\n        type: 'STORE_ROLES',\r\n        value: res\r\n    }\r\n}\r\nexport const editRole = (res) => {\r\n    return {\r\n        type: 'EDIT_ROLE',\r\n        value: res\r\n    }\r\n}\r\nexport const deleteRole = (res) => {\r\n    return {\r\n        type: 'DELETE_ROLE',\r\n        value: res\r\n    }\r\n}\r\nexport const storeRoles = () => {\r\n    return dispatch => {\r\n        axios.get('roles')\r\n            .then(response => {\r\n                const results = response.data.map(row => ({\r\n                    key: row.id,\r\n                    name:row.name,\r\n                    modules:row.modules.map(mode=>({\r\n                        moduleg:mode.name\r\n                        })\r\n                    )\r\n\r\n                }))\r\n                dispatch(saveRoles(results))\r\n\r\n            })\r\n    }\r\n\r\n}\r\nexport const saveRole = (res) => {\r\n    return {\r\n        type: 'ADD_ROLE',\r\n        value: res\r\n    }\r\n}\r\n\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\bannerActions.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\AuthActions\\auth.js",["674"],"\r\nimport {React} from \"react\";\r\n\r\nexport const STORE_AUTH = 'STORE_AUTH'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const saveLoginData = (res) => {\r\n    return {\r\n        type: 'STORE_AUTH',\r\n        value: res\r\n    }\r\n}\r\n\r\nexport const logout=()=>{\r\n    return{\r\n        type:'LOGOUT'\r\n    }\r\n}\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\store\\actions\\OrderActions\\orderActions.js",["675"],"import axios from \"axios\";\r\nimport {React} from \"react\";\r\n\r\n\r\n\r\n//delivered Orders\r\nexport const saveOneDeliveredOrder =  (res)=>{\r\n    return{\r\n        type:STORE_ONE_DELIVERED_ORDER,\r\n        value:res,\r\n    }\r\n}\r\nexport const STORE_ONE_DELIVERED_ORDER = \"STORE_ONE_DELIVERED_ORDER\"\r\nexport const storeOneDeliveredOrder = (res)=> {\r\n    return dispatch=> {\r\n        axios.get('orders/delivered/' + res).then(response=>{\r\n            const order = response.data\r\n            dispatch(saveOneDeliveredOrder(order))\r\n        })\r\n    }\r\n}\r\nexport const STORE_DELIVERED_ORDERS = 'STORE_DELIVERED_ORDERS'\r\n\r\nexport const saveDeliveredOrders = (res) => {\r\n    return {\r\n        type: 'STORE_DELIVERED_ORDERS',\r\n        value: res\r\n    }\r\n}\r\n\r\nexport const storeDeliveredOrders = () => {\r\n    return dispatch => {\r\n        axios.get('orders/delivered')\r\n            .then(response => {\r\n                const answer = response.data.map(row => ({\r\n                    //variable row column Name\r\n                    key:row.id,\r\n                    order_no: row.order_no,\r\n                    customer_name: row.customer.firstName + \" \" + row.customer.lastName,\r\n                    customer_address: row.address,\r\n                    customer_email: row.customer.email,\r\n                    statusId: row.StatusId,\r\n                    isSeen:row.isSeen,\r\n\r\n                }))\r\n                dispatch(saveDeliveredOrders(answer))\r\n\r\n            })\r\n    }\r\n\r\n}\r\n// cancelled Orders\r\nexport const saveOneCancelledOrder =  (res)=>{\r\n    return{\r\n        type:STORE_ONE_CANCELLED_ORDER,\r\n        value:res,\r\n    }\r\n}\r\nexport const STORE_ONE_CANCELLED_ORDER = \"STORE_ONE_CANCELLED_ORDER\"\r\nexport const storeOneCancelledOrder = (res)=> {\r\n    return dispatch=> {\r\n        axios.get('orders/cancelled/' + res).then(response=>{\r\n            const order = response.data\r\n            dispatch(saveOneCancelledOrder(order))\r\n        })\r\n    }\r\n}\r\n\r\nexport const STORE_CANCELLED_ORDERS = 'STORE_CANCELLED_ORDERS'\r\n\r\nexport const saveCancelledOrders = (res) => {\r\n    return {\r\n        type: 'STORE_CANCELLED_ORDERS',\r\n        value: res\r\n    }\r\n}\r\n\r\nexport const storeCancelledOrders = () => {\r\n    return dispatch => {\r\n        axios.get('orders/cancelled')\r\n            .then(response => {\r\n                const answer = response.data.map(row => ({\r\n                    //variable row column Name\r\n                    key:row.id,\r\n                    order_no: row.order_no,\r\n                    customer_name: row.customer.firstName + \" \" + row.customer.lastName,\r\n                    customer_address: row.address,\r\n                    customer_email: row.customer.email,\r\n                    statusId: row.StatusId,\r\n                    isSeen:row.isSeen,\r\n                }))\r\n                dispatch(saveCancelledOrders(answer))\r\n\r\n            })\r\n    }\r\n\r\n}\r\n//In transit Orders\r\nexport const saveOneInTransitOrder =  (res)=>{\r\n    return{\r\n        type:STORE_ONE_IN_TRANSIT_ORDER,\r\n        value:res,\r\n    }\r\n}\r\nexport const STORE_ONE_IN_TRANSIT_ORDER = \"STORE_ONE_IN_TRANSIT_ORDER\"\r\nexport const storeOneInTransitOrder = (res)=> {\r\n    return dispatch=> {\r\n        axios.get('orders/inTransit/' + res).then(response=>{\r\n            const order = response.data\r\n            dispatch(saveOneInTransitOrder(order))\r\n        })\r\n    }\r\n}\r\nexport const STORE_IN_TRANSIT_ORDERS = 'STORE_IN_TRANSIT_ORDERS'\r\n\r\nexport const saveInTransitOrders = (res) => {\r\n    return {\r\n        type: 'STORE_IN_TRANSIT_ORDERS',\r\n        value: res\r\n    }\r\n}\r\n\r\nexport const storeInTransitOrders = () => {\r\n    return dispatch => {\r\n        axios.get('orders/inTransit')\r\n            .then(response => {\r\n                const answer = response.data.map(row => ({\r\n                    //variable row column Name\r\n                    key:row.id,\r\n                    order_no: row.order_no,\r\n                    customer_name: row.customer.firstName + \" \" + row.customer.lastName,\r\n                    customer_address: row.address,\r\n                    customer_email: row.customer.email,\r\n                    statusId: row.StatusId,\r\n                    isSeen:row.isSeen,\r\n                }))\r\n                dispatch(saveInTransitOrders(answer))\r\n\r\n            })\r\n    }\r\n\r\n}\r\n\r\n// Pending Orders\r\nexport const saveOnePendingOrder =  (res)=>{\r\n    return{\r\n        type:STORE_ONE_PENDING_ORDER,\r\n        value:res,\r\n    }\r\n}\r\nexport const STORE_ONE_PENDING_ORDER = \"STORE_ONE_PENDING_ORDER\"\r\nexport const storeOnePendingOrder = (res)=> {\r\n    return dispatch=> {\r\n        axios.get('orders/pending/' + res).then(response=>{\r\n            const order = response.data\r\n            dispatch(saveOnePendingOrder(order))\r\n        })\r\n    }\r\n}\r\n\r\nexport const STORE_PENDING_ORDERS = 'STORE_PENDING_ORDERS'\r\n\r\nexport const savePendingOrders = (res) => {\r\n    return {\r\n        type: 'STORE_PENDING_ORDERS',\r\n        value: res\r\n    }\r\n}\r\nexport const STORE_ALL_UNREAD_ORDERS = \"STORE_ALL_UNREAD_ORDERS\";\r\nexport const STORE_CHANGE_IN_ORDERS = \"STORE_CHANGE_IN_ORDERS\";\r\nexport const changeInOrders=(res)=>{\r\n    return{\r\n        type: STORE_CHANGE_IN_ORDERS,\r\n        value: res\r\n    }\r\n}\r\nexport const saveAllOrders=(res)=>{\r\n    return{\r\n        type: STORE_ALL_UNREAD_ORDERS,\r\n        value: res\r\n    }\r\n}\r\nexport const saveAllUnreadOrders = (res) => {\r\n    return dispatch =>{\r\n        axios.get(\"orders/statusUpdate/allUnread\").then(\r\n            success => {\r\n                dispatch(saveAllOrders(success.data.allUnread))\r\n            }\r\n        ).catch(\r\n            error => console.log(error)\r\n        )\r\n    }\r\n}\r\n\r\nexport const storePendingOrders = () => {\r\n    return dispatch => {\r\n        axios.get('orders/pending')\r\n            .then(response => {\r\n                const answer = response.data.map(row => ({\r\n                    //variable row column Name\r\n                    key:row.id,\r\n                    order_no: row.order_no,\r\n                    customer_name: row.customer.firstName + \" \" + row.customer.lastName,\r\n                    customer_address: row.address,\r\n                    customer_email: row.customer.email,\r\n                    statusId: row.StatusId,\r\n                    isSeen:row.isSeen,\r\n                }))\r\n                dispatch(savePendingOrders(answer))\r\n\r\n            })\r\n    }\r\n\r\n}\r\n\r\n// refund Orders\r\n\r\nexport const saveOneRefundOrder =  (res)=>{\r\n    return{\r\n        type:STORE_ONE_REFUND_ORDER,\r\n        value:res,\r\n    }\r\n}\r\nexport const STORE_ONE_REFUND_ORDER = \"STORE_ONE_REFUND_ORDER\"\r\nexport const storeOneRefundOrder = (res)=> {\r\n    return dispatch=> {\r\n        axios.get('orders/refund/' + res).then(response=>{\r\n            const order = response.data\r\n            dispatch(saveOneRefundOrder(order))\r\n        })\r\n    }\r\n}\r\n\r\nexport const STORE_REFUND_ORDERS = 'STORE_REFUND_ORDERS'\r\n\r\nexport const saveRefundOrders = (res) => {\r\n    return {\r\n        type: 'STORE_REFUND_ORDERS',\r\n        value: res\r\n    }\r\n}\r\nexport const storeRefundOrders = () => {\r\n    return dispatch => {\r\n        axios.get('orders/refund')\r\n            .then(response => {\r\n                const answer = response.data.map(row => ({\r\n                    //variable row column Nam\r\n                    key:row.id,\r\n                    order_no: row.order_no,\r\n                    customer_name: row.customer.firstName + \" \" + row.customer.lastName,\r\n                    customer_address: row.address,\r\n                    customer_email: row.customer.email,\r\n                    statusId: row.StatusId,\r\n                    isSeen:row.isSeen,\r\n                }))\r\n                dispatch(saveRefundOrders(answer))\r\n\r\n            })\r\n    }\r\n\r\n}\r\n\r\n// verified orders\r\n\r\n\r\nexport const saveOneVerifiedOrder =  (res)=>{\r\n    return{\r\n        type:STORE_ONE_VERIFIED_ORDER,\r\n        value:res,\r\n    }\r\n}\r\nexport const STORE_ONE_VERIFIED_ORDER = \"STORE_ONE_VERIFIED_ORDER\"\r\nexport const storeOneVerifiedOrder = (res)=> {\r\n    return dispatch=> {\r\n        axios.get('orders/verified/' + res).then(response=>{\r\n            const order = response.data\r\n            dispatch(saveOneVerifiedOrder(order))\r\n        })\r\n    }\r\n}\r\n\r\nexport const STORE_VERIFIED_ORDERS = 'STORE_VERIFIED_ORDERS'\r\n\r\nexport const saveVerifiedOrders = (res) => {\r\n    return {\r\n        type: 'STORE_VERIFIED_ORDERS',\r\n        value: res\r\n    }\r\n}\r\nexport const storeVerifiedOrders = () => {\r\n    return dispatch => {\r\n        axios.get('orders/verified')\r\n            .then(response => {\r\n                const answer = response.data.map(row => ({\r\n                    //variable row column Name\r\n                    key:row.id,\r\n                    order_no: row.order_no,\r\n                    customer_name: row.customer.firstName + \" \" + row.customer.lastName,\r\n                    customer_address: row.address,\r\n                    customer_email: row.customer.email,\r\n                    statusId: row.StatusId,\r\n                    isSeen:row.isSeen,\r\n                }))\r\n                dispatch(saveVerifiedOrders(answer))\r\n\r\n            })\r\n    }\r\n\r\n}\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Variations\\VariationMaterials\\VariationMaterial.js",["676","677","678","679","680","681"],"import React, {useEffect, useState} from 'react';\r\nimport {storeAttributes} from \"../../../store/actions/attributeActions\";\r\nimport {Card, Form, Select, Space} from \"antd\";\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport VariationSelect from \"./VariationSelect\";\r\n\r\nconst VariationsMaterial = (props) => {\r\n    // const dispatch = useDispatch();\r\n    // const {attributes} = useSelector(({attributes}) => attributes);\r\n    const [attribute, setAttribute] = useState([]);\r\n    const [attributeOptions, setAttributeOptions] = useState([]);\r\n    // const [cardForName, setCardForName] = useState()\r\n    const attributesArray = []\r\n    // useEffect(() => {\r\n    //     dispatch(storeAttributes())\r\n    // }, []);\r\n\r\n    const sendingBackAttValue = (value) => {\r\n        props.getAttVal(value)\r\n    }\r\n    useEffect(() => {\r\n        for (let i = 0; i < props.attributes.length; i++) {\r\n            let value = props.attributes[i].key\r\n            attributesArray.push({\r\n                label: props.attributes[i].name,\r\n                value,\r\n            });\r\n            setAttributeOptions(options => [...attributesArray]);\r\n        }\r\n    }, [props.attributes]);\r\n\r\n    const selectAttributeProps = {\r\n        style: {\r\n            width: '70%',\r\n        },\r\n        attribute,\r\n        options: attributeOptions,\r\n        onChange: (newValue) => {\r\n            // let {name} = props.attributes.find(att=> att.key === newValue);\r\n            // attributeNameForCard(name)\r\n            sendingBackAttValue(newValue)\r\n            setAttribute(oldValue=>[...oldValue, newValue]);\r\n        },\r\n        placeholder: 'Select Attributes...',\r\n        maxTagCount: 'responsive',\r\n    }\r\n    const callBackFunctions=(values)=>{\r\n        console.log(values)\r\n        // props.getSelectedValuesForAttributes()\r\n    }\r\n    // const attributeNameForCard = (value) => {\r\n    //     setCardForName(<Card style={{width: 300}}>\r\n    //         <h4>{value}</h4>\r\n    //     </Card>)\r\n    // }\r\n    // const callBackHandleVariationData=(data)=>{\r\n    //     console.log(data)\r\n    //     alert(data)\r\n    // }\r\n    return (\r\n        <div>\r\n            <Form.Item label=\"Attributes\">\r\n                <Space\r\n                    direction=\"vertical\"\r\n                    style={{\r\n                        width: '100%',\r\n                    }}\r\n                >\r\n                    <Select {...selectAttributeProps} />\r\n\r\n                </Space>\r\n\r\n            </Form.Item>\r\n            <div>\r\n                Select the values for the Variant\r\n                <VariationSelect/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VariationsMaterial;","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Variations\\VariationMaterials\\VariationsTable.js",["682"],"import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\r\nimport axios from \"axios\";\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Form form={form} component={false}>\r\n            <EditableContext.Provider value={form}>\r\n                <tr {...props} />\r\n            </EditableContext.Provider>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst EditableCell = ({\r\n                          title,\r\n                          editable,\r\n                          children,\r\n                          dataIndex,\r\n                          record,\r\n                          handleSave,\r\n                          ...restProps\r\n                      }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const form = useContext(EditableContext);\r\n    useEffect(() => {\r\n        if (editing) {\r\n            inputRef.current.focus();\r\n        }\r\n    }, [editing]);\r\n\r\n    const toggleEdit = () => {\r\n        setEditing(!editing);\r\n        form.setFieldsValue({\r\n            [dataIndex]: record[dataIndex],\r\n        });\r\n    };\r\n\r\n    const save = async () => {\r\n        try {\r\n            const values = await form.validateFields();\r\n            toggleEdit();\r\n            handleSave({ ...record, ...values });\r\n        } catch (errInfo) {\r\n            console.log('Save failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    let childNode = children;\r\n\r\n    if (editable) {\r\n        childNode = editing ? (\r\n            <Form.Item\r\n                style={{\r\n                    margin: 0,\r\n                }}\r\n                name={dataIndex}\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: `${title} is required.`,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n            </Form.Item>\r\n        ) : (\r\n            <div\r\n                className=\"editable-cell-value-wrap\"\r\n                style={{\r\n                    paddingRight: 24,\r\n                }}\r\n                onClick={toggleEdit}\r\n            >\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass EditableTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n            {\r\n                title: 'key',\r\n                dataIndex: 'key',\r\n            },\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                width: '30%',\r\n            },\r\n            {\r\n                title: 'Sku',\r\n                dataIndex: 'sku',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: 'Price',\r\n                dataIndex: 'price',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: 'Status',\r\n                dataIndex: 'status',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: 'Stock',\r\n                dataIndex: 'stock',\r\n                editable: true,\r\n            },\r\n            {\r\n                title: 'operation',\r\n                dataIndex: 'operation',\r\n                render: (_, record) =>\r\n                    this.state.dataSource.length >= 1 ? (\r\n                        <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\r\n                            <a>Delete</a>\r\n                        </Popconfirm>\r\n                    ) : null,\r\n            },\r\n        ];\r\n        this.state = {\r\n            dataSource: this.props.children.map((child,key)=>{\r\n                let newChild = {\r\n                    key: key,\r\n                    name: `${child.toString().replace(\",\", \"/\")}`,\r\n                    price:500,\r\n                    sku:2213312,\r\n                    stock:2,\r\n                    status:'in_stock',\r\n                }\r\n                return newChild;\r\n            }),\r\n            // [\r\n            //     {\r\n            //         key: '0',\r\n            //         name: 'Edward King 0',\r\n            //         sku: '32',\r\n            //         price: 'London, Park Lane no. 0',\r\n            //     },\r\n            //     {\r\n            //         key: '1',\r\n            //         name: 'Edward King 1',\r\n            //         sku: '32',\r\n            //         price: 'London, Park Lane no. 1',\r\n            //     },\r\n            // ],\r\n            count: 2,\r\n        };\r\n    }\r\n\r\n    handleDelete = (key) => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({\r\n            dataSource: dataSource.filter((item) => item.key !== key),\r\n        });\r\n    };\r\n    // handleAdd = () => {\r\n    //     const { count, dataSource } = this.state;\r\n    //     const newData = {\r\n    //         key: count,\r\n    //         name: `Edward King ${count}`,\r\n    //         age: '32',\r\n    //         address: `London, Park Lane no. ${count}`,\r\n    //     };\r\n    //     this.setState({\r\n    //         dataSource: [...dataSource, newData],\r\n    //         count: count + 1,\r\n    //     });\r\n    // };\r\n    handleSave = (row) => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex((item) => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        this.setState({\r\n            dataSource: newData,\r\n        });\r\n        console.log(newData);\r\n    };\r\n    savaVariations=()=>{\r\n        console.log(this.state.dataSource)\r\n        let variants =this.state.dataSource\r\n        axios.post('/variants/'+6,{variants}).then(response=>{\r\n            console.log(response)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n            body: {\r\n                row: EditableRow,\r\n                cell: EditableCell,\r\n            },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n                return col;\r\n            }\r\n\r\n            return {\r\n                ...col,\r\n                onCell: (record) => ({\r\n                    record,\r\n                    editable: col.editable,\r\n                    dataIndex: col.dataIndex,\r\n                    title: col.title,\r\n                    handleSave: this.handleSave,\r\n                }),\r\n            };\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <Button\r\n                    onClick={this.savaVariations}\r\n                    type=\"primary\"\r\n                    style={{\r\n                        marginBottom: 16,\r\n                        marginTop: 16,\r\n                    }}\r\n                >\r\n                    Save Variations\r\n                </Button>\r\n                <Table\r\n                    components={components}\r\n                    rowClassName={() => 'editable-row'}\r\n                    bordered\r\n                    dataSource={dataSource}\r\n                    columns={columns}\r\n                />\r\n                <p>{console.log(this.props)}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditableTable;","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Menu\\EditMenus\\EditMenus.js",["683","684","685","686","687"],"import {React, Component} from 'react'\r\nimport {Drawer, Button, Spin, Col, Row, Input, message} from 'antd';\r\nimport axios from \"axios\";\r\nimport {connect} from 'react-redux'\r\nimport * as actionCreators from \"../../../store/actions/menuActions\";\r\nimport Form from './Form'\r\nimport MediaQuery from 'react-responsive';\r\n\r\nclass EditMenus extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: this.props.visible,\r\n            name: '',\r\n            logo: '',\r\n            loading: false,\r\n            description: '',\r\n            newId:this.props.menuId\r\n        };\r\n    }\r\n\r\n    triggerChildAlert(){\r\n        this.refs.child.showAlert();\r\n    }\r\n    getMenus(){\r\n        this.props.dispatch(actionCreators.storeMenus())\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.visible !== this.props.visible) {\r\n            this.setState({visible: this.props.visible});\r\n            if (this.props.menuId) {\r\n                    axios.get('menus/' + this.props.menuId)\r\n                        .then(response => {\r\n                            this.setState({\r\n                                name: response.data.name,\r\n\r\n                            })\r\n                            this.props.dispatch(actionCreators.editMenu(response.data))\r\n\r\n                        })\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n    setLoaderState(){\r\n        this.setState(\r\n            {loading:!this.state.loading})\r\n    }\r\n\r\n    render() {\r\n        let menu = \"\"\r\n        // let collectionMenuId = this.props.menu !== null ? this.props.menu.Collection.id :[0]\r\n        if (this.props.menu) {\r\n            menu = (<>\r\n\r\n            {/* For Big Screen  */}\r\n\r\n            <MediaQuery minWidth={1224}>\r\n                <Drawer\r\n                    title=\"Edit Menu\"\r\n                    width={720}\r\n                    onClose={this.props.cancel}\r\n                    visible={this.state.visible}\r\n                    bodyStyle={{paddingBottom: 80}}\r\n                    footer={\r\n                        <div\r\n                            style={{\r\n                                textAlign: 'right',\r\n                            }}\r\n                        >\r\n                            <Button onClick={this.props.cancel} style={{marginRight: 8}}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"primary\" loading={this.state.loading} onClick={this.triggerChildAlert.bind(this)}>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <Form ref=\"child\"\r\n                          getMenus={this.getMenus.bind(this)}\r\n                          cancelDrawer={this.props.cancel}\r\n                          setloader={this.setLoaderState.bind(this)}\r\n                          menuId={this.props.menu.id}\r\n                          menu={this.props.menu}\r\n                          collections={this.props.collections}\r\n                          menuCollections={this.props.menuCollections}\r\n                          // menuCollection={[collectionMenuId]}\r\n                    />\r\n\r\n                </Drawer>\r\n            </MediaQuery>\r\n\r\n            <MediaQuery maxWidth={1224}>\r\n                <Drawer\r\n                    title=\"Edit Menu\"\r\n                    width={350}\r\n                    onClose={this.props.cancel}\r\n                    visible={this.state.visible}\r\n                    bodyStyle={{paddingBottom: 80}}\r\n                    footer={\r\n                        <div\r\n                            style={{\r\n                                textAlign: 'right',\r\n                            }}\r\n                        >\r\n                            <Button onClick={this.props.cancel} style={{marginRight: 8}}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"primary\" loading={this.state.loading} onClick={this.triggerChildAlert.bind(this)}>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <Form ref=\"child\"\r\n                          getMenus={this.getMenus.bind(this)}\r\n                          cancelDrawer={this.props.cancel}\r\n                          setloader={this.setLoaderState.bind(this)}\r\n                          menuId={this.props.menu.id}\r\n                          menu={this.props.menu}\r\n                          collections={this.props.collections}\r\n                          menuCollections={this.props.menuCollections}\r\n                          // menuCollection={[collectionMenuId]}\r\n                    />\r\n\r\n                </Drawer>\r\n            </MediaQuery>\r\n            </>)\r\n        }\r\n        return menu\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        menu: state.menus.menu,\r\n        menuCollections:state.menus.menuCollections,\r\n        collections:state.collections.collections\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps)(EditMenus)\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Menu\\NewMenu\\NewMenu.js",["688","689","690","691","692"],"import {React, Component, useEffect, useState} from 'react'\r\nimport {Drawer, Form, Button, Col, Row, Input, message, Space, Select} from 'antd';\r\nimport Uploader from \"../../../components/ImageUploader/Uploader\";\r\nimport {connect} from 'react-redux'\r\nimport * as actionCreators from \"../../../store/actions/menuActions\";\r\nimport {storeCollections} from \"../../../store/actions/collectionActions\";\r\nimport axios from \"axios\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nimport MediaQuery from 'react-responsive'\r\n\r\n\r\n\r\n\r\nconst NewMenu = (props) => {\r\n    const [visible, setVisible] = useState(props.visible);\r\n    const [loading, setloading] = useState(false);\r\n    const [disabled, setDisabled] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const [collection, setCollection] = useState([]);\r\n    const [menuCollection, setMenuCollection] = useState([]);\r\n    const [collectionOptions, setCollectionOptions] = useState([]);\r\n    const collectionsArray = []\r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < props.collections.length; i++) {\r\n            let value = props.collections[i].key\r\n            collectionsArray.push({\r\n                label: props.collections[i].name,\r\n                value,\r\n            });\r\n            setCollectionOptions(collectionOptions => [...collectionsArray]);\r\n        }\r\n    }, [props.collections]);\r\n\r\n    useEffect(() => {\r\n        setVisible(true)\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        props.dispatch(storeCollections())\r\n    },[])\r\n    const selectProps = {\r\n        mode: 'multiple',\r\n        style: {\r\n            width: '100%',\r\n        },\r\n        collection,\r\n        options: collectionOptions,\r\n        onChange: (newValue) => {\r\n            setCollection(newValue);\r\n        },\r\n        placeholder: 'Select Collection...',\r\n        maxTagCount: 'responsive',\r\n    };\r\n    const selectPropsForMenuCollection = {\r\n        style: {\r\n            width: '100%',\r\n        },\r\n        menuCollection,\r\n        options: collectionOptions,\r\n        onChange: (newValue) => {\r\n            setMenuCollection(newValue);\r\n        },\r\n        placeholder: 'Select Menu Collection...',\r\n        maxTagCount: 'responsive',\r\n    };\r\n    const postMenuHandler = () => {\r\n        let menu = new FormData();\r\n        menu.append('name', name)\r\n        menu.append('collections',collection)\r\n        menu.append('menuCollection',menuCollection)\r\n        setloading(true)\r\n        setDisabled(true)\r\n        axios.post('menus', menu).then(response => {\r\n            const result = {\r\n                key: response.data.id, // I added this line\r\n                name: response.data.name,\r\n                createdAt: <ReactTimeAgo date={new Date(response.data.createdAt)} locale=\"en-US\"/>,\r\n            }\r\n            props.dispatch(actionCreators.saveMenu(result))\r\n            setloading(false)\r\n            setDisabled(false)\r\n            message.success('Menu added successfully.');\r\n            props.cancel()\r\n\r\n        }).catch(error => {\r\n            message.error(\"Unable to Process the Request!\")\r\n            setloading(false)\r\n            setDisabled(false)\r\n            // console.log(error)\r\n            // let errors=error.response.data;\r\n            // if(errors.errors[0].param=='name'){\r\n            //     // message.error(errors.errors[0].msg);\r\n            //\r\n            // }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <MediaQuery minWidth={750}>\r\n                <Drawer\r\n                    title=\"Create a new Menu\"\r\n                    width={720}\r\n                    onClose={props.cancel}\r\n                    visible={props.visible}\r\n                    bodyStyle={{paddingBottom: 80}}\r\n                    footer={\r\n                        <div\r\n                            style={{\r\n                                textAlign: 'right',\r\n                            }}\r\n                        >\r\n                            <Button onClick={props.cancel} style={{marginRight: 8}}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={postMenuHandler} disabled={disabled} loading={loading} type=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span={24}>\r\n                            <Form.Item\r\n                                name=\"name\"\r\n                                label=\"Name\"\r\n                                rules={[{required: true, message: 'Please enter Menu name'}]}\r\n                            >\r\n                                <Input value={props.name}\r\n                                       name=\"name\"\r\n                                       onChange={(e) => setName(e.target.value)}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Collections\">\r\n                                <Space\r\n                                    direction=\"vertical\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                    }}\r\n                                >\r\n                                    <Select\r\n                                        filterOption={(input, option) =>\r\n                                            option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                        }\r\n                                        {...selectProps}\r\n                                    />\r\n                                </Space>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Menu Collection\">\r\n                                <Space\r\n                                    direction=\"vertical\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                    }}\r\n                                >\r\n                                    <Select\r\n                                        filterOption={(input, option) =>\r\n                                            option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                        }\r\n                                        {...selectPropsForMenuCollection}\r\n                                    />\r\n                                </Space>\r\n                            </Form.Item>\r\n\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Drawer>\r\n                </MediaQuery>\r\n\r\n                <MediaQuery maxWidth={750}>\r\n                <Drawer\r\n                    title=\"Create a new Menu\"\r\n                    width={350}\r\n                    onClose={props.cancel}\r\n                    visible={props.visible}\r\n                    bodyStyle={{paddingBottom: 80}}\r\n                    footer={\r\n                        <div\r\n                            style={{\r\n                                textAlign: 'right',\r\n                            }}\r\n                        >\r\n                            <Button onClick={props.cancel} style={{marginRight: 8}}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={postMenuHandler} disabled={disabled} loading={loading} type=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span={24}>\r\n                            <Form.Item\r\n                                name=\"name\"\r\n                                label=\"Name\"\r\n                                rules={[{required: true, message: 'Please enter Menu name'}]}\r\n                            >\r\n                                <Input value={props.name}\r\n                                       name=\"name\"\r\n                                       onChange={(e) => setName(e.target.value)}/>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Collections\">\r\n                                <Space\r\n                                    direction=\"vertical\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                    }}\r\n                                >\r\n                                    <Select\r\n                                        filterOption={(input, option) =>\r\n                                            option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                        }\r\n                                        {...selectProps}\r\n                                    />\r\n                                </Space>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Menu Collection\">\r\n                                <Space\r\n                                    direction=\"vertical\"\r\n                                    style={{\r\n                                        width: '100%',\r\n                                    }}\r\n                                >\r\n                                    <Select\r\n                                        filterOption={(input, option) =>\r\n                                            option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                        }\r\n                                        {...selectPropsForMenuCollection}\r\n                                    />\r\n                                </Space>\r\n                            </Form.Item>\r\n\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Drawer>\r\n                </MediaQuery>\r\n            </Form>\r\n\r\n        </>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        collections: state.collections.collections,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(NewMenu)\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\components\\PopConfirm\\PopConfirm.js",["693","694","695"],"import { Popconfirm, Button, Space } from \"antd\";\r\nimport React from \"react\";\r\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport MediaQuery from \"react-responsive\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst App = (props) => {\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n\r\n  const showPopconfirm = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true);\r\n    props.deleteHandler();\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Popconfirm\r\n        title=\"Are you sure\"\r\n        visible={visible}\r\n        onConfirm={handleOk}\r\n        okButtonProps={{ loading: confirmLoading }}\r\n        onCancel={handleCancel}\r\n      >\r\n        <MediaQuery minWidth={1224}>\r\n          <Button shape=\"round\" onClick={showPopconfirm} size=\"small\" danger>\r\n            <DeleteOutlined /> Delete\r\n          </Button>\r\n        </MediaQuery>\r\n        <MediaQuery maxWidth={1224}>\r\n          <Button shape=\"round\" onClick={showPopconfirm} size=\"small\" danger>\r\n            <DeleteOutlined />\r\n          </Button>\r\n        </MediaQuery>\r\n      </Popconfirm>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\components\\ImageUploader\\Uploader.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Auth\\Login\\Login.js",["696","697","698"],"import {Form, Input, Button, Checkbox} from 'antd';\r\nimport {React,useEffect,useState} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {notification, Space} from 'antd';\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport './Login.css'\r\nimport axios from \"axios\";\r\nimport * as authActions from '../../../store/actions/AuthActions/auth'\r\n\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst Login = (props) => {\r\n    const history = useHistory()\r\n    const {isAuthenticated} = useSelector(({auth}) => auth);\r\n    const dispatch = useDispatch()\r\n    const [loading,setLoading]=useState()\r\n    useEffect(()=>{\r\n        isAuthenticated && history.push('/dashboard')\r\n    })\r\n    const onFinish = (values) => {\r\n        setLoading(true)\r\n        axios.post('auth/signin', values).then(success => {\r\n            setLoading(false)\r\n            dispatch(authActions.saveLoginData(success.data))\r\n            history.push('/dashboard');\r\n        }).catch(error => {\r\n            setLoading(false)\r\n\r\n            notification['error']({\r\n                message: 'Login Failed',\r\n                description:\r\n                error.response.data.message,\r\n            });\r\n        })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        type: \"email\",\r\n                        message: 'Please input your email!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password/>\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout}>\r\n                <Button loading={loading} type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Order\\VerifiedOrder\\VerifiedOrders.js",["699"],"import {React, Component} from 'react'\r\nimport {Button, Input, Layout, message, Select, Space, Table} from \"antd\";\r\nimport {connect} from \"react-redux\";\r\nimport * as actionCreators from \"../../../store/actions/OrderActions/orderActions\"\r\nimport {CheckOutlined, CloseOutlined, SearchOutlined} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport * as helpers from \"../../../Utils/helpers\";\r\nimport OrderModal from \"../../../components/OrderModal/OrderModal\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\n\r\nconst {Column} = Table;\r\nconst {Content} = Layout;\r\nconst {Option} = Select;\r\n\r\nclass VerifiedOrders extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isVisible:false,\r\n            orderId:null,\r\n        }\r\n    }\r\n    handleChange=(value)=> {\r\n        console.log(value.key);\r\n        this.setState({\r\n            statusId:value.key\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.storeVerifiedOrders()\r\n    }\r\n    clickHandler=(id,obj)=>{\r\n        let prevStatusId = obj.statusId\r\n        this.props.orderStatusUpdate(id,this.state.statusId,prevStatusId)\r\n    }\r\n\r\n    isModalVisible=(id,data)=>{\r\n        if(!data.isSeen){\r\n            axios.put('orders/statusUpdate/isSeen/' + id).then(async(success) => {\r\n                await this.props.storeVerifiedOrders()\r\n                await this.props.storeUnreadOrders(\"res\")\r\n                message.success(success.data.message);\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        this.props.storeOneVerifiedOrder(id)\r\n        this.setState({\r\n            isVisible:true,\r\n            orderId:id,\r\n        });\r\n    }\r\n\r\n\r\n    handleCancel=()=>{\r\n        this.setState({\r\n            isVisible:false\r\n        })\r\n    }\r\n    getColumnSearchProps = (dataIndex) => ({\r\n        filterDropdown: ({\r\n                             setSelectedKeys,\r\n                             selectedKeys,\r\n                             confirm,\r\n                             clearFilters,\r\n                         }) => (\r\n            <div style={{padding: 8}}>\r\n                <Input\r\n                    ref={(node) => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={(e) =>\r\n                        setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n                    }\r\n                    onPressEnter={() =>\r\n                        this.handleSearch(selectedKeys, confirm, dataIndex)\r\n                    }\r\n                    style={{marginBottom: 8, display: \"block\"}}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined/>}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => this.handleReset(clearFilters)}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({closeDropdown: false});\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: (filtered) => (\r\n            <SearchOutlined style={{color: filtered ? \"#1890ff\" : undefined}}/>\r\n        ),\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex]\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .includes(value.toLowerCase())\r\n                : \"\",\r\n        onFilterDropdownVisibleChange: (visible) => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: (text) =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{backgroundColor: \"#ffc069\", padding: 0}}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = (clearFilters) => {\r\n        clearFilters();\r\n        this.setState({searchText: \"\"});\r\n    };\r\n    render() {\r\n        return (\r\n            <Content style={{margin: '16px 16px'}}>\r\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n                    <Table dataSource={this.props.verifiedOrders}>\r\n                        <Column title=\"Order\" dataIndex=\"key\" key=\"id\"\r\n                                render={(key, data)=>(<Space size=\"middle\">\r\n                                    <Button shape=\"round\" type={`${data.isSeen?'':'primary'}`} onClick={(e)=>this.isModalVisible(key, data)} size=\"medium\">View Order</Button>\r\n                                </Space>)}\r\n                        />\r\n                        <Column title=\"Order No\" dataIndex=\"order_no\" key=\"order_no\"\r\n                                {...this.getColumnSearchProps(\"order_no\")}/>\r\n                        <Column title=\"Customer Name\" dataIndex=\"customer_name\" key=\"customer_name\"\r\n                                {...this.getColumnSearchProps(\"customer_name\")}/>\r\n                        <Column title=\"Email\" dataIndex=\"customer_email\" key=\"customer_email\"/>\r\n                        <Column title=\"Actions\" dataIndex=\"key\" key=\"id\"\r\n                                render={(key,obj)=>(\r\n                                    <div>\r\n                                        <Space size=\"middle\">\r\n                                            <Select\r\n                                                labelInValue\r\n                                                defaultValue={{ value: '0' }}\r\n                                                style={{ width: 120 }}\r\n                                                onChange={this.handleChange}\r\n                                            >\r\n                                                <Option value=\"0\">Change Status</Option>\r\n                                                <Option value=\"1\">Mark Pending</Option>\r\n                                                <Option value=\"3\">Mark Cancelled</Option>\r\n                                                <Option value=\"4\">Mark Refund</Option>\r\n                                                <Option value=\"5\">Mark Delivered</Option>\r\n                                                <Option value=\"6\">Mark InTransit</Option>\r\n                                            </Select>\r\n                                            <Button shape=\"round\" icon={<CheckOutlined/>}\r\n                                                    onClick={(e) => this.clickHandler(key,obj)} size=\"small\">\r\n                                                Save\r\n                                            </Button>\r\n                                        </Space>\r\n                                    </div>\r\n\r\n                                )}\r\n                        />\r\n                    </Table>\r\n                    {this.props.verifiedOrder.length !== 0 ?<OrderModal isVisible={this.state.isVisible}\r\n                                 orderId={this.state.orderId}\r\n                                 onCancle={this.handleCancel}\r\n                                 order={this.props.verifiedOrder}\r\n                    />:\"\"}\r\n                </div>\r\n            </Content>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        verifiedOrders: state.orders.verifiedOrders,\r\n        verifiedOrder:state.orders.verifiedOrder\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        storeVerifiedOrders: () => {\r\n            dispatch(actionCreators.storeVerifiedOrders())\r\n        },\r\n        storeUnreadOrders: () => {\r\n            dispatch(actionCreators.changeInOrders())\r\n        },\r\n        storeOneVerifiedOrder:(id)=>{\r\n            dispatch(actionCreators.storeOneVerifiedOrder(id))\r\n        },\r\n        orderStatusUpdate:(id,statusId,prevStatusId)=>{\r\n            dispatch(helpers.orderStatusUpdate(id,statusId,prevStatusId))\r\n        },\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(VerifiedOrders);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Order\\RefundOrder\\RefundOrders.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Order\\DeliveredOrders\\DeliveredOrders.js",["700"],"import {React, Component} from 'react'\r\nimport {Button, Input, Layout, message, Select, Space, Table,} from \"antd\";\r\nimport * as actionCreators from \"../../../store/actions/OrderActions/orderActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {CheckOutlined, CloseOutlined, SearchOutlined} from \"@ant-design/icons\";\r\nimport OrderModal from \"../../../components/OrderModal/OrderModal\";\r\nimport * as helpers from \"../../../Utils/helpers\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst {Column} = Table;\r\nconst {Content} = Layout;\r\nconst {Option} = Select;\r\n\r\nclass DeliveredOrders extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isVisible:false,\r\n            orderId:null,\r\n            statusId:null,\r\n        }\r\n    }\r\n    isModalVisible=(id,data)=>{\r\n        if(!data.isSeen){\r\n            axios.put('orders/statusUpdate/isSeen/' + id).then(async(success) => {\r\n                await this.props.storeDeliveredOrders()\r\n                await this.props.storeUnreadOrders(\"res\")\r\n                message.success(success.data.message);\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        this.props.storeOneDeliveredOrder(id)\r\n        this.setState({\r\n            isVisible:true,\r\n            orderId:id,\r\n        });\r\n    }\r\n\r\n\r\n    handleCancel=()=>{\r\n        this.setState({\r\n            isVisible:false\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.storeDeliveredOrders()\r\n    }\r\n    handleChange=(value)=> {\r\n        console.log(value.key);\r\n        this.setState({\r\n            statusId:value.key\r\n        })\r\n    }\r\n    clickHandler=(id,obj)=>{\r\n        let prevStatusId = obj.statusId\r\n        this.props.orderStatusUpdate(id,this.state.statusId,prevStatusId)\r\n    }\r\n    getColumnSearchProps = (dataIndex) => ({\r\n        filterDropdown: ({\r\n                             setSelectedKeys,\r\n                             selectedKeys,\r\n                             confirm,\r\n                             clearFilters,\r\n                         }) => (\r\n            <div style={{padding: 8}}>\r\n                <Input\r\n                    ref={(node) => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={(e) =>\r\n                        setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n                    }\r\n                    onPressEnter={() =>\r\n                        this.handleSearch(selectedKeys, confirm, dataIndex)\r\n                    }\r\n                    style={{marginBottom: 8, display: \"block\"}}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined/>}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => this.handleReset(clearFilters)}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({closeDropdown: false});\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: (filtered) => (\r\n            <SearchOutlined style={{color: filtered ? \"#1890ff\" : undefined}}/>\r\n        ),\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex]\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .includes(value.toLowerCase())\r\n                : \"\",\r\n        onFilterDropdownVisibleChange: (visible) => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: (text) =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{backgroundColor: \"#ffc069\", padding: 0}}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = (clearFilters) => {\r\n        clearFilters();\r\n        this.setState({searchText: \"\"});\r\n    };\r\n    render() {\r\n        return (\r\n            <Content style={{margin: '16px 16px'}}>\r\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n\r\n                    <Table dataSource={this.props.deliveredOrders}>\r\n                        <Column title=\"Order\" dataIndex=\"key\" key=\"id\"\r\n                                render={(key, data)=>(<Space size=\"middle\">\r\n                                    <Button shape=\"round\" type={`${data.isSeen?'':'primary'}`} onClick={(e)=>this.isModalVisible(key, data)} size=\"medium\">View Order</Button>\r\n                                </Space>)}\r\n                        />\r\n                        <Column title=\"Order No\" dataIndex=\"order_no\" key=\"order_no\"\r\n                                {...this.getColumnSearchProps(\"order_no\")}/>\r\n                        <Column title=\"Customer Name\" dataIndex=\"customer_name\" key=\"customer_name\"\r\n                                {...this.getColumnSearchProps(\"customer_name\")}/>\r\n                        <Column title=\"Email\" dataIndex=\"customer_email\" key=\"customer_email\"/>\r\n                        <Column title=\"Actions\" dataIndex=\"key\" key=\"id\"\r\n                                render={(key,obj)=>(\r\n                                    <div>\r\n                                        <Space size=\"middle\">\r\n                                            <Select\r\n                                                labelInValue\r\n                                                defaultValue={{ value: '0' }}\r\n                                                style={{ width: 120 }}\r\n                                                onChange={this.handleChange}\r\n                                            >\r\n                                                <Option value=\"0\">Change Status</Option>\r\n                                                <Option value=\"1\">Mark Pending</Option>\r\n                                                <Option value=\"2\">Mark Verified</Option>\r\n                                                <Option value=\"3\">Mark Cancelled</Option>\r\n                                                <Option value=\"4\">Mark Refund</Option>\r\n                                                <Option value=\"6\">Mark InTransit</Option>\r\n                                            </Select>\r\n                                            <Button shape=\"round\" icon={<CheckOutlined/>}\r\n                                                    onClick={(e) => this.clickHandler(key,obj)} size=\"small\">\r\n                                                Save\r\n                                            </Button>\r\n                                        </Space>\r\n                                    </div>\r\n\r\n                                )}\r\n                        />\r\n                    </Table>\r\n                    {this.props.deliveredOrder.length !== 0 ?<OrderModal isVisible={this.state.isVisible}\r\n                                 orderId={this.state.orderId}\r\n                                 onCancle={this.handleCancel}\r\n                                 order={this.props.deliveredOrder}\r\n                    />:\"\"}\r\n                </div>\r\n            </Content>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        deliveredOrders: state.orders.deliveredOrders,\r\n        deliveredOrder:state.orders.deliveredOrder\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        storeDeliveredOrders: () => {\r\n            dispatch(actionCreators.storeDeliveredOrders())\r\n        },\r\n        storeUnreadOrders: () => {\r\n            dispatch(actionCreators.changeInOrders())\r\n        },\r\n        storeOneDeliveredOrder:(id)=>{\r\n            dispatch(actionCreators.storeOneDeliveredOrder(id))\r\n        },\r\n        orderStatusUpdate:(id,statusId,prevStatusId)=>{\r\n            dispatch(helpers.orderStatusUpdate(id,statusId,prevStatusId))\r\n        },\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeliveredOrders);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Order\\CancelledOrders\\CancelledOrders.js",["701"],"import React, {Component} from 'react';\r\nimport {Button, Input, Layout, message, Select, Space, Table} from \"antd\";\r\nimport {storeCancelledOrders} from \"../../../store/actions/OrderActions/orderActions\"\r\nimport {connect} from \"react-redux\";\r\nimport {CheckOutlined, CloseOutlined, SearchOutlined} from \"@ant-design/icons\";\r\nimport * as actionCreators from \"../../../store/actions/OrderActions/orderActions\";\r\nimport OrderModal from \"../../../components/OrderModal/OrderModal\";\r\nimport * as helpers from \"../../../Utils/helpers\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst {Column} = Table;\r\nconst {Content} = Layout;\r\nconst {Option} = Select;\r\n\r\nclass CancelledOrders extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isVisible: false,\r\n            orderId: null,\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.storeCancelledOrders()\r\n    }\r\n\r\n    isModalVisible = (id, data) => {\r\n        if(!data.isSeen){\r\n            axios.put('orders/statusUpdate/isSeen/' + id).then(async(success) => {\r\n                await this.props.storeCancelledOrders()\r\n                await this.props.storeUnreadOrders(\"res\")\r\n                message.success(success.data.message);\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        this.props.storeOneCancelledOrder(id)\r\n        this.setState({\r\n            isVisible: true,\r\n            orderId: id,\r\n        });\r\n    }\r\n\r\n    handleChange = (value) => {\r\n        this.setState({\r\n            statusId: value.key\r\n        })\r\n    }\r\n    clickHandler = (id, obj) => {\r\n        let prevStatusId = obj.statusId\r\n        this.props.orderStatusUpdate(id, this.state.statusId, prevStatusId)\r\n    }\r\n    handleCancel = () => {\r\n        this.setState({\r\n            isVisible: false\r\n        })\r\n    }\r\n    getColumnSearchProps = (dataIndex) => ({\r\n        filterDropdown: ({\r\n                             setSelectedKeys,\r\n                             selectedKeys,\r\n                             confirm,\r\n                             clearFilters,\r\n                         }) => (\r\n            <div style={{padding: 8}}>\r\n                <Input\r\n                    ref={(node) => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={(e) =>\r\n                        setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n                    }\r\n                    onPressEnter={() =>\r\n                        this.handleSearch(selectedKeys, confirm, dataIndex)\r\n                    }\r\n                    style={{marginBottom: 8, display: \"block\"}}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined/>}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => this.handleReset(clearFilters)}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({closeDropdown: false});\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: (filtered) => (\r\n            <SearchOutlined style={{color: filtered ? \"#1890ff\" : undefined}}/>\r\n        ),\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex]\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .includes(value.toLowerCase())\r\n                : \"\",\r\n        onFilterDropdownVisibleChange: (visible) => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: (text) =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{backgroundColor: \"#ffc069\", padding: 0}}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = (clearFilters) => {\r\n        clearFilters();\r\n        this.setState({searchText: \"\"});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Content style={{margin: '16px 16px'}}>\r\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n                    <Table dataSource={this.props.cancelledOrders}>\r\n                        <Column title=\"Order\" dataIndex=\"key\" key=\"id\"\r\n                                render={(key, data)=>(<Space size=\"middle\">\r\n                                    <Button shape=\"round\" type={`${data.isSeen?'':'primary'}`} onClick={(e)=>this.isModalVisible(key, data)} size=\"medium\">View Order</Button>\r\n                                </Space>)}\r\n                        />\r\n                        <Column title=\"Order No\" dataIndex=\"order_no\" key=\"order_no\"\r\n                                {...this.getColumnSearchProps(\"order_no\")}/>\r\n                        <Column title=\"Customer Name\" dataIndex=\"customer_name\" key=\"customer_name\"\r\n                                {...this.getColumnSearchProps(\"customer_name\")}/>\r\n                        <Column title=\"Email\" dataIndex=\"customer_email\" key=\"customer_email\"/>\r\n                        <Column title=\"Actions\" dataIndex=\"key\" key=\"id\"\r\n                                render={(key, obj) => (\r\n                                    <div>\r\n                                        <Space size=\"middle\">\r\n                                            <Select\r\n                                                labelInValue\r\n                                                defaultValue={{value: '0'}}\r\n                                                style={{width: 120}}\r\n                                                onChange={this.handleChange}\r\n                                            >\r\n                                                <Option value=\"0\">Change Status</Option>\r\n                                                <Option value=\"1\">Mark Pending</Option>\r\n                                                <Option value=\"2\">Mark Verified</Option>\r\n                                                <Option value=\"4\">Mark Refund</Option>\r\n                                                <Option value=\"5\">Mark Delivered</Option>\r\n                                                <Option value=\"6\">Mark InTransit</Option>\r\n                                            </Select>\r\n                                            <Button shape=\"round\" icon={<CheckOutlined/>}\r\n                                                    onClick={(e) => this.clickHandler(key, obj)} size=\"small\">\r\n                                                Save\r\n                                            </Button>\r\n                                        </Space>\r\n                                    </div>\r\n\r\n                                )}\r\n                        />\r\n                    </Table>\r\n                    {this.props.cancelledOrder.length !== 0 ? <OrderModal isVisible={this.state.isVisible}\r\n                                 orderId={this.state.orderId}\r\n                                 onCancle={this.handleCancel}\r\n                                 order={this.props.cancelledOrder}\r\n                    />: \"\"}\r\n                </div>\r\n            </Content>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cancelledOrders: state.orders.cancelledOrders,\r\n        cancelledOrder: state.orders.cancelledOrder\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        storeCancelledOrders: () => {\r\n            dispatch(storeCancelledOrders())\r\n        },\r\n        storeUnreadOrders: () => {\r\n            dispatch(actionCreators.changeInOrders())\r\n        },\r\n        storeOneCancelledOrder: (id) => {\r\n            dispatch(actionCreators.storeOneCancelledOrder(id))\r\n        },\r\n        orderStatusUpdate: (id, statusId, prevStatusId) => {\r\n            dispatch(helpers.orderStatusUpdate(id, statusId, prevStatusId))\r\n        },\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CancelledOrders);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Order\\InTransit Orders\\InTransitOrders.js",["702"],"import React , {Component} from 'react';\r\nimport {Button, Input, Layout, message, Select, Space, Table} from \"antd\";\r\nimport * as actionCreaters from \"../../../store/actions/OrderActions/orderActions\"\r\nimport {connect} from \"react-redux\";\r\nimport {CheckOutlined, CloseOutlined, SearchOutlined} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport * as actionCreators from \"../../../store/actions/OrderActions/orderActions\";\r\nimport * as helpers from \"../../../Utils/helpers\";\r\nimport OrderModal from \"../../../components/OrderModal/OrderModal\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\n\r\nconst {Column} = Table;\r\nconst {Content} = Layout;\r\nconst {Option} = Select;\r\n\r\nclass InTransitOrders extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isVisible:false,\r\n            orderId:null,\r\n            statusId:null,\r\n        }\r\n    }\r\n    isModalVisible=(id,data)=>{\r\n        if(!data.isSeen){\r\n            axios.put('orders/statusUpdate/isSeen/' + id).then(async(success) => {\r\n                await this.props.storeInTransitOrders()\r\n                await this.props.storeUnreadOrders(\"res\")\r\n                message.success(success.data.message);\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        this.props.storeOneInTransitOrder(id)\r\n        this.setState({\r\n            isVisible:true,\r\n            orderId:id,\r\n        });\r\n    }\r\n\r\n\r\n    handleCancel=()=>{\r\n        this.setState({\r\n            isVisible:false\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.storeInTransitOrders()\r\n    }\r\n    handleChange=(value)=> {\r\n        console.log(value.key);\r\n        this.setState({\r\n            statusId:value.key\r\n        })\r\n    }\r\n    clickHandler=(id,obj)=>{\r\n        let prevStatusId = obj.statusId\r\n        this.props.orderStatusUpdate(id,this.state.statusId,prevStatusId)\r\n    }\r\n    getColumnSearchProps = (dataIndex) => ({\r\n        filterDropdown: ({\r\n                             setSelectedKeys,\r\n                             selectedKeys,\r\n                             confirm,\r\n                             clearFilters,\r\n                         }) => (\r\n            <div style={{padding: 8}}>\r\n                <Input\r\n                    ref={(node) => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={(e) =>\r\n                        setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n                    }\r\n                    onPressEnter={() =>\r\n                        this.handleSearch(selectedKeys, confirm, dataIndex)\r\n                    }\r\n                    style={{marginBottom: 8, display: \"block\"}}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined/>}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => this.handleReset(clearFilters)}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({closeDropdown: false});\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: (filtered) => (\r\n            <SearchOutlined style={{color: filtered ? \"#1890ff\" : undefined}}/>\r\n        ),\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex]\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .includes(value.toLowerCase())\r\n                : \"\",\r\n        onFilterDropdownVisibleChange: (visible) => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: (text) =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{backgroundColor: \"#ffc069\", padding: 0}}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = (clearFilters) => {\r\n        clearFilters();\r\n        this.setState({searchText: \"\"});\r\n    };\r\n    render() {\r\n        return (\r\n            <Content style={{margin: '16px 16px'}}>\r\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n                    <Table dataSource={this.props.inTransitOrders}>\r\n                        <Column title=\"Order\" dataIndex=\"key\" key=\"id\"\r\n                                render={(key, data)=>(<Space size=\"middle\">\r\n                                    <Button shape=\"round\" type={`${data.isSeen?'':'primary'}`} onClick={(e)=>this.isModalVisible(key, data)} size=\"medium\">View Order</Button>\r\n                                </Space>)}\r\n                        />\r\n                        <Column title=\"Order No\" dataIndex=\"order_no\" key=\"order_no\"\r\n                                {...this.getColumnSearchProps(\"order_no\")}/>\r\n                        <Column title=\"Customer Name\" dataIndex=\"customer_name\" key=\"customer_name\"\r\n                                {...this.getColumnSearchProps(\"customer_name\")}/>\r\n                        <Column title=\"Email\" dataIndex=\"customer_email\" key=\"customer_email\"/>\r\n                        <Column title=\"Actions\" dataIndex=\"key\" key=\"id\"\r\n                                render={(key,obj)=>(\r\n                                    <div>\r\n                                        <Space size=\"middle\">\r\n                                            <Select\r\n                                                labelInValue\r\n                                                defaultValue={{ value: '0' }}\r\n                                                style={{ width: 120 }}\r\n                                                onChange={this.handleChange}\r\n                                            >\r\n                                                <Option value=\"0\">Change Status</Option>\r\n                                                <Option value=\"1\">Mark Pending</Option>\r\n                                                <Option value=\"2\">Mark Verified</Option>\r\n                                                <Option value=\"3\">Mark Cancelled</Option>\r\n                                                <Option value=\"4\">Mark Refund</Option>\r\n                                                <Option value=\"5\">Mark Delivered</Option>\r\n\r\n                                            </Select>\r\n                                            <Button shape=\"round\" icon={<CheckOutlined/>}\r\n                                                    onClick={(e) => this.clickHandler(key,obj)} size=\"small\">\r\n                                                Save\r\n                                            </Button>\r\n                                        </Space>\r\n                                    </div>\r\n\r\n                                )}\r\n                        />\r\n                    </Table>\r\n                    {this.props.inTransitOrder.length !== 0 ?<OrderModal isVisible={this.state.isVisible}\r\n                                 orderId={this.state.orderId}\r\n                                 onCancle={this.handleCancel}\r\n                                 order={this.props.inTransitOrder}\r\n                    />:\"\"}\r\n                </div>\r\n            </Content>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        inTransitOrders: state.orders.inTransitOrders,\r\n        inTransitOrder:state.orders.inTransitOrder\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        storeInTransitOrders: () => {\r\n            dispatch(actionCreaters.storeInTransitOrders())\r\n        },\r\n        storeUnreadOrders: () => {\r\n            dispatch(actionCreators.changeInOrders())\r\n        },\r\n        storeOneInTransitOrder:(id)=>{\r\n            dispatch(actionCreators.storeOneInTransitOrder(id))\r\n        },\r\n        orderStatusUpdate:(id,statusId,prevStatusId)=>{\r\n            dispatch(helpers.orderStatusUpdate(id,statusId,prevStatusId))\r\n        },\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InTransitOrders);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Order\\PendingOrders\\PendingOrder.js",["703","704","705"],"import {React, Component} from 'react'\r\nimport {Layout, Table, Button, Space, Select, message, Dropdown, Menu, Input} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {CheckOutlined, CloseOutlined, SearchOutlined} from \"@ant-design/icons\";\r\nimport * as actionCreators from \"../../../store/actions/OrderActions/orderActions\"\r\nimport * as helpers from \"../../../Utils/helpers\"\r\nimport OrderModal from \"../../../components/OrderModal/OrderModal\";\r\nimport Highlighter from \"react-highlight-words\";\r\nconst {Column} = Table;\r\nconst {Content} = Layout;\r\nconst {Option} = Select;\r\n\r\nclass PendingOrders extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isVisible:false,\r\n            orderId:null,\r\n            statusId:\" \",\r\n        }\r\n\r\n    }\r\n     handleChange=(value)=> {\r\n        this.setState({\r\n            statusId:value.key\r\n        })\r\n    }\r\n    clickHandler=(id,obj)=>{\r\n        let prevStatusId = obj.statusId\r\n        this.props.orderStatusUpdate(id,this.state.statusId,prevStatusId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.storePendingOrders()\r\n    }\r\n\r\n    isModalVisible=(id, data)=>{\r\n        if(!data.isSeen){\r\n            axios.put('orders/statusUpdate/isSeen/' + id).then(async(success) => {\r\n                await this.props.storePendingOrders()\r\n                await this.props.storeUnreadOrders(\"res\")\r\n                message.success(success.data.message);\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        this.props.storeOnePendingOrder(id)\r\n        this.setState({\r\n            isVisible:true,\r\n            orderId:id,\r\n        });\r\n    }\r\n    handleCancel=()=>{\r\n        this.setState({\r\n            isVisible:false\r\n        })\r\n    }\r\n    getColumnSearchProps = (dataIndex) => ({\r\n        filterDropdown: ({\r\n                             setSelectedKeys,\r\n                             selectedKeys,\r\n                             confirm,\r\n                             clearFilters,\r\n                         }) => (\r\n            <div style={{padding: 8}}>\r\n                <Input\r\n                    ref={(node) => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={(e) =>\r\n                        setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n                    }\r\n                    onPressEnter={() =>\r\n                        this.handleSearch(selectedKeys, confirm, dataIndex)\r\n                    }\r\n                    style={{marginBottom: 8, display: \"block\"}}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined/>}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => this.handleReset(clearFilters)}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({closeDropdown: false});\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: (filtered) => (\r\n            <SearchOutlined style={{color: filtered ? \"#1890ff\" : undefined}}/>\r\n        ),\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex]\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .includes(value.toLowerCase())\r\n                : \"\",\r\n        onFilterDropdownVisibleChange: (visible) => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: (text) =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{backgroundColor: \"#ffc069\", padding: 0}}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : \"\"}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = (clearFilters) => {\r\n        clearFilters();\r\n        this.setState({searchText: \"\"});\r\n    };\r\n    render() {\r\n        return (\r\n            <Content style={{margin: '16px 16px'}}>\r\n                <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n                     <Table dataSource={this.props.pendingOrders}>\r\n                         <Column title=\"Order\" dataIndex=\"key\" key=\"id\"\r\n                                 render={(key, data)=>(<Space size=\"middle\">\r\n                                     <Button shape=\"round\" type={`${data.isSeen?'':'primary'}`} onClick={(e)=>this.isModalVisible(key, data)} size=\"medium\">View Order</Button>\r\n                                 </Space>)}\r\n                         />\r\n                        <Column title=\"Order No\" dataIndex=\"order_no\" key=\"order_no\"\r\n                                {...this.getColumnSearchProps(\"order_no\")}/>\r\n                        <Column title=\"Customer Name\" dataIndex=\"customer_name\" key=\"customer_name\"\r\n                                {...this.getColumnSearchProps(\"customer_name\")}/>\r\n                        <Column title=\"Email\" dataIndex=\"customer_email\" key=\"customer_email\"/>\r\n                        <Column title=\"Actions\" dataIndex=\"key\" key=\"id\"\r\n                                 render={(key,obj)=>(\r\n                                     <div>\r\n                                         <Space size=\"middle\">\r\n                                     <Select\r\n                                         labelInValue\r\n                                         defaultValue={{ value: '0' }}\r\n                                         style={{ width: 120 }}\r\n                                         onChange={this.handleChange}\r\n                                     >\r\n                                         <Option value=\"0\">Change Status</Option>\r\n                                         <Option value=\"2\">Mark Verified</Option>\r\n                                         <Option value=\"3\">Mark Cancelled</Option>\r\n                                         <Option value=\"4\">Mark Refund</Option>\r\n                                         <Option value=\"5\">Mark Delivered</Option>\r\n                                         <Option value=\"6\">Mark InTransit</Option>\r\n                                     </Select>\r\n                                             <Button shape=\"round\" icon={<CheckOutlined/>}\r\n                                                     onClick={(e) => this.clickHandler(key,obj)} size=\"small\">\r\n                                                 Save\r\n                                             </Button>\r\n                                         </Space>\r\n                                     </div>\r\n\r\n                                 )}\r\n                         />\r\n                    </Table>\r\n                    {this.props.pendingOrder.length !== 0 ? <OrderModal isVisible={this.state.isVisible}\r\n                                 orderId={this.state.orderId}\r\n                                 onCancle={this.handleCancel}\r\n                                 order={this.props.pendingOrder}\r\n                    /> :\" \"}\r\n                </div>\r\n            </Content>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        pendingOrders: state.orders.pendingOrders,\r\n        pendingOrder: state.orders.pendingOrder,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        storePendingOrders: () => {\r\n            dispatch(actionCreators.storePendingOrders())\r\n        },\r\n        storeUnreadOrders: () => {\r\n            dispatch(actionCreators.changeInOrders())\r\n        },\r\n        storeOnePendingOrder:(id)=>{\r\n            dispatch(actionCreators.storeOnePendingOrder(id))\r\n        },\r\n        orderStatusUpdate:(id,statusId,prevStatusId)=>{\r\n            dispatch(helpers.orderStatusUpdate(id,statusId,prevStatusId))\r\n        },\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PendingOrders);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\components\\Card\\Card.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Auth\\ForgotPassword\\ForgotPassword.js",["706"],"import {Button, Checkbox, Form, Input} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nconst layout = {\r\n    labelCol: {\r\n        span: 8,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n};\r\nconst forgotPassword=()=>{\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    return(\r\n        <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n        >\r\n            <Form.Item\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item {...tailLayout}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                <Link to=\"/login\">\r\n                    Back to login?\r\n                </Link>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n}\r\nexport default forgotPassword\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Variations\\VariationMaterials\\VariationSelect.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Menu\\EditMenus\\Form.js",["707","708","709","710","711","712"],"import React, {useState, useEffect, forwardRef, useImperativeHandle} from 'react';\r\nimport {Form, Input, Row, Col, message,Select,Space} from 'antd';\r\nimport axios from \"axios\";\r\nimport {useSelector} from \"react-redux\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst DynamicRule = forwardRef((props, ref) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const [name, setName] = useState('');\r\n    const [collection, setCollection] = useState([]);\r\n    const [collectionOptions, setCollectionOptions] = useState([]);\r\n    const [menuCollection, setMenuCollection] = useState([0]);\r\n    const {menu} = useSelector(({menus}) => menus);\r\n    const collectionsArray = []\r\n\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n\r\n            name: props.menu.name,\r\n        })\r\n        setName(props.menu.name)\r\n\r\n    }, [props.menu]);\r\n\r\n    useEffect(() => {\r\n        setCollection(props.menuCollections)\r\n    }, [props.menuCollections]);\r\n\r\n    useEffect(() => {\r\n        menu.Collection !== null && setMenuCollection(menu.Collection.id)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < props.collections.length; i++) {\r\n            let value = props.collections[i].key\r\n            collectionsArray.push({\r\n                label: props.collections[i].name,\r\n                value,\r\n            });\r\n            setCollectionOptions(collectionOptions => [...collectionsArray]);\r\n\r\n\r\n        }\r\n    }, [props.collections])\r\n\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            async showAlert() {\r\n                try {\r\n                    const values = await form.validateFields();\r\n                    let menu = new FormData()\r\n                    let id = props.menu.id\r\n                    menu.append('name', name)\r\n                    menu.append('collections',collection)\r\n                    menu.append('menuCollection',menuCollection)\r\n                    props.setloader()\r\n                    axios.put('menus/' + id, menu, ).then(response => {\r\n                        props.getMenus()\r\n                        props.setloader()\r\n                        props.cancelDrawer()\r\n                        message.success('Menu updated successfully.');\r\n                    }).catch(error => {\r\n                        props.setloader()\r\n                        message.error('Unable to Update the Menu.');\r\n                        let errors = error.response.data;\r\n                        if (errors.errors[0].param == 'name') {\r\n                            message.error(errors.errors[0].msg);\r\n                        }\r\n                    })\r\n\r\n                } catch (errorInfo) {\r\n                    props.setloader()\r\n                    if (errorInfo.errorFields[0]) {\r\n                        message.error('Failed:', errorInfo.errorFields[0].errors[0]);\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n        }),\r\n    )\r\n    const selectPropsForMenuCollection = {\r\n        style: {\r\n            width: '100%',\r\n        },\r\n        menuCollection,\r\n        options: collectionOptions,\r\n        onChange: (newValue) => {\r\n            setMenuCollection(newValue);\r\n        },\r\n        placeholder: 'Select Menu Collection...',\r\n        maxTagCount: 'responsive',\r\n    };\r\n\r\n    const selectProps = {\r\n        mode: 'multiple',\r\n        style: {\r\n            width: '100%',\r\n        },\r\n        collection,\r\n        options: collectionOptions,\r\n        onChange: (newValue) => {\r\n            setCollection(newValue);\r\n        },\r\n        placeholder: 'Select Collection...',\r\n        maxTagCount: 'responsive'\r\n        // defaultValue: selectedCollections\r\n    };\r\n    //\r\n    return (\r\n        <Form form={form} layout=\"vertical\">\r\n            <Row gutter={16}>\r\n                <Col span={24}>\r\n                    <Form.Item\r\n                        name=\"name\"\r\n                        label=\"Name\"\r\n                        rules={[{required: true, message: 'Please enter Menu name'}]}\r\n                    >\r\n                        <Input onChange={e => setName(e.target.value)} value={props.menu.name}\r\n                               placeholder=\"Please enter user name\"/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Collections\" name=\"collections\">\r\n                        <Space\r\n                            direction=\"vertical\"\r\n                            style={{\r\n                                width: '100%',\r\n                            }}\r\n                        >\r\n                            <Select\r\n                                showSearch\r\n                                value={collection}\r\n                                filterOption={(input, option) =>\r\n                                    option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                                {...selectProps}\r\n                                onChange={(value)=>setCollection(value)}\r\n                            />\r\n                        </Space>\r\n                    </Form.Item>\r\n                    {menuCollection === [0 ]? \" \":<Form.Item label=\"Menu Collection\">\r\n                        <Space\r\n                            direction=\"vertical\"\r\n                            style={{\r\n                                width: '100%',\r\n                            }}\r\n                        >\r\n                            <Select\r\n                                showSearch\r\n                                value={menuCollection}\r\n                                filterOption={(input, option) =>\r\n                                    option.props.label.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                                {...selectPropsForMenuCollection}\r\n                            />\r\n                        </Space>\r\n                    </Form.Item>}\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n\r\n});\r\n\r\nexport default DynamicRule\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Collection\\EditCollection\\EditCollection.js",["713","714","715","716","717"],"import {React, Component} from 'react'\r\nimport {Drawer, Button, Spin, Col, Row, Input, message} from 'antd';\r\nimport axios from \"axios\";\r\nimport {connect} from 'react-redux'\r\nimport * as actionCreators from \"../../../store/actions/collectionActions\";\r\nimport Form from './Form'\r\nimport MediaQuery from 'react-responsive';\r\nconst {TextArea} = Input\r\n\r\nclass EditCollection extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: this.props.visible,\r\n            name: '',\r\n            logo: '',\r\n            loading: false,\r\n            description: '',\r\n            collections:\"\"\r\n        };\r\n    }\r\n    triggerChildAlert(){\r\n        this.refs.child.showAlert();\r\n    }\r\n    getCollections(){\r\n        this.props.dispatch(actionCreators.storeCollections())\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.visible !== this.props.visible) {\r\n            this.setState({visible: this.props.visible});\r\n            if (this.props.collectionId) {\r\n                if (!this.props.collection || (this.props.collection && this.props.collectionId !== this.props.collection.id)) {\r\n                    axios.get('collections/' + this.props.collectionId)\r\n                        .then(response => {\r\n                            this.setState({\r\n                                name: response.data.name,\r\n                                description: response.data.description\r\n                            })\r\n                            this.props.dispatch(actionCreators.editCollection(response.data))\r\n                        })\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    setLoaderState(){\r\n        this.setState(\r\n            {loading:!this.state.loading})\r\n    }\r\n\r\n    render() {\r\n        let brand = \"\"\r\n\r\n        if (this.props.collection) {\r\n            brand = (<>\r\n\r\n            <MediaQuery minWidth={1224}>\r\n                <Drawer\r\n                    title=\"Edit Collection\"\r\n                    width={720}\r\n                    onClose={this.props.cancel}\r\n                    visible={this.state.visible}\r\n                    bodyStyle={{paddingBottom: 80}}\r\n                    footer={\r\n                        <div\r\n                            style={{\r\n                                textAlign: 'right',\r\n                            }}\r\n                        >\r\n                            <Button onClick={this.props.cancel} style={{marginRight: 8}}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"primary\" loading={this.state.loading} onClick={this.triggerChildAlert.bind(this)}>\r\n                               Submit\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <Form ref=\"child\"\r\n                          getCollections={this.getCollections.bind(this)}\r\n                          cancelDrawer={this.props.cancel}\r\n                          setloader={this.setLoaderState.bind(this)}\r\n                          collectionId={this.props.collection.id}\r\n                          collection={this.props.collection}\r\n                          collections={this.props.collections}\r\n                          pids={this.props.parentIds}\r\n\r\n                    />\r\n\r\n                </Drawer>\r\n            </MediaQuery>\r\n\r\n\r\n\r\n            <MediaQuery maxWidth={1224}>\r\n                <Drawer\r\n                    title=\"Edit Collection\"\r\n                    width={350}\r\n                    onClose={this.props.cancel}\r\n                    visible={this.state.visible}\r\n                    bodyStyle={{paddingBottom: 80}}\r\n                    footer={\r\n                        <div\r\n                            style={{\r\n                                textAlign: 'right',\r\n                            }}\r\n                        >\r\n                            <Button onClick={this.props.cancel} style={{marginRight: 8}}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"primary\" loading={this.state.loading} onClick={this.triggerChildAlert.bind(this)}>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <Form ref=\"child\"\r\n                          getCollections={this.getCollections.bind(this)}\r\n                          cancelDrawer={this.props.cancel}\r\n                          setloader={this.setLoaderState.bind(this)}\r\n                          collectionId={this.props.collection.id}\r\n                          collection={this.props.collection}\r\n                          collections={this.props.collections}\r\n                    />\r\n\r\n                </Drawer>\r\n            </MediaQuery>\r\n            </>)\r\n        }\r\n        return brand\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        collection: state.collections.collection,\r\n        collections:state.collections.collections,\r\n        parentIds:state.collections.parentIds,\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps)(EditCollection)\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Collection\\NewCollection\\NewCollection.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\components\\ProductModal\\ProductModal.js",["718","719","720"],"import React,{useState} from 'react'\r\nimport {Modal, message, Col, Row, Form,Input,Button, Badge} from \"antd\";\r\n\r\nimport {\r\n    LockOutlined\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nfunction ProductModal(props) {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const {form} = Form.useForm()\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        setLoading(true)\r\n        axios.post(`/products/update/stock/${props.properties.key}`,values).then(success=>{\r\n            console.log(success)\r\n            message.success(success.data.message)\r\n            setLoading(false)\r\n            props.onOk()\r\n        }).catch(err=>{\r\n            console.log(err)\r\n            message.error(\"Error!\")\r\n            setLoading(false)\r\n        })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    // const onReset = () => {\r\n    //     form.resetFields();\r\n    // };\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={`Add Stock of ${props.properties.name}`}\r\n                visible={props.visible}\r\n                onCancel={props.cancel}\r\n                onOk={props.onOk}\r\n                properties={props.properties}\r\n                footer=\"\"\r\n            >\r\n                <Form\r\n                    form={form}\r\n                    name=\"control-hooks\"\r\n                    autoComplete=\"off\"\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n\r\n                >\r\n                    <Form.Item\r\n                        label=\"Stock Amount\"\r\n                        name=\"stock\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your Stock Amount!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input type=\"number\"/>\r\n                    </Form.Item>\r\n                    <Form.Item className=\"pb-3 pt-3\" style={{textAlign:\"right\"}}>\r\n                        <Button  htmlType=\"submit\" loading={loading} type=\"primary\"><LockOutlined/>Add Stock</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default ProductModal;\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\thankYou.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\invoiceItemTables.js",["721","722"],"import React from 'react';\r\nimport {View, StyleSheet } from '@react-pdf/renderer';\r\nimport InvoiceTableHeader from './tableHeaders'\r\nimport InvoiceTableRow from './tableRows'\r\nimport InvoiceTableBlankSpace from './space'\r\nimport InvoiceTableFooter from './footer'\r\n\r\nconst tableRowsCount = 11;\r\n\r\nconst styles = StyleSheet.create({\r\n    tableContainer: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginTop: 24,\r\n        borderWidth: 1,\r\n        borderColor: '#bff0fd',\r\n    },\r\n});\r\n\r\nconst InvoiceItemsTable = ({invoice}) => (\r\n    <>\r\n     \r\n    <View style={styles.tableContainer}>\r\n        <InvoiceTableHeader />\r\n        <InvoiceTableRow items={invoice} />\r\n        {/* <InvoiceTableBlankSpace rowsCount={ tableRowsCount - invoice} /> */}\r\n        <InvoiceTableFooter items={invoice} />\r\n    </View>\r\n    </>\r\n   \r\n);\r\n\r\nexport default InvoiceItemsTable","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\invoiceNo.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\billTo.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\invoiceHeading.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Product\\Import\\Import.js",["723"],"import {React, Component} from 'react'\r\nimport {Drawer, Form, Button, message, Upload} from 'antd';\r\nimport {connect} from 'react-redux'\r\nimport * as actionCreators from \"../../../store/actions/productActions\";\r\n\r\nimport axios from \"axios\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nimport {UploadOutlined} from \"@ant-design/icons\";\r\n\r\nclass Import extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: this.props.visible,\r\n            fileList: '',\r\n            uploading: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.visible !== this.props.visible) {\r\n            this.setState({visible: this.props.visible});\r\n        }\r\n    }\r\n\r\n    handleUpload = () => {\r\n        const {fileList} = this.state;\r\n        const formData = new FormData();\r\n\r\n            formData.append('file', fileList[0]);\r\n\r\n        this.setState({\r\n            uploading: true,\r\n        });\r\n        axios.post(\r\n            'products/import',\r\n            formData\r\n        ).then(response => {\r\n            this.props.dispatch(actionCreators.storeProducts())\r\n            message.success(response.message)\r\n            this.setState({\r\n                uploading: false,\r\n            });\r\n            this.props.cancel()\r\n        }).catch(error => {\r\n            message.error(error.message)\r\n            this.setState({\r\n                uploading: false,\r\n            });\r\n\r\n        })\r\n        // You can use any AJAX library you like\r\n    };\r\n\r\n    render() {\r\n        const {uploading, fileList} = this.state;\r\n        const props = {\r\n            maxCount:1,\r\n            onRemove: file => {\r\n                this.setState(state => {\r\n                    const index = state.fileList.indexOf(file);\r\n                    const newFileList = state.fileList.slice();\r\n                    newFileList.splice(index, 1);\r\n                    return {\r\n                        fileList: newFileList,\r\n                    };\r\n                });\r\n            },\r\n            beforeUpload: file => {\r\n                this.setState(state => ({\r\n                    fileList: [...state.fileList, file],\r\n                }));\r\n                return false;\r\n            },\r\n            fileList,\r\n        };\r\n        return (\r\n            <>\r\n                <Form layout=\"vertical\">\r\n                    <Drawer\r\n                        title=\"Import\"\r\n                        width={720}\r\n                        onClose={this.props.cancel}\r\n                        visible={this.state.visible}\r\n                        bodyStyle={{paddingBottom: 80}}\r\n\r\n                    >\r\n                        <Upload {...props}>\r\n                            <Button icon={<UploadOutlined/>}>Select File</Button>\r\n                        </Upload>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.handleUpload}\r\n                            disabled={fileList.length === 0}\r\n                            loading={uploading}\r\n                            style={{marginTop: 16}}\r\n                        >\r\n                            {uploading ? 'Uploading' : 'Start Upload'}\r\n                        </Button>\r\n                    </Drawer>\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(Import)\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Attribute\\EditAttribute\\EditAttribute.js",["724"],"import React, {Component} from 'react'\r\nimport {Drawer, Form, Button, Col, Row, Input, message} from 'antd';\r\nimport {connect} from 'react-redux'\r\nimport * as actionCreators from \"../../../store/actions/attributeActions\";\r\nimport axios from \"axios\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\nimport {Tag, Tooltip} from 'antd';\r\nimport {PlusOutlined} from '@ant-design/icons';\r\n\r\nclass EditAttribute extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: 'Empty is',\r\n            description: '',\r\n            logo: '',\r\n            loading: false,\r\n            tags: [],\r\n            inputVisible: false,\r\n            inputValue: '',\r\n            editInputIndex: -1,\r\n            editInputValue: '',\r\n        };\r\n\r\n        this.handleInputsChange = this.handleInputsChange.bind(this);\r\n        this.newName  = this.newName.bind(this)\r\n    }\r\n\r\n    handleInputsChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleClose = removedTag => {\r\n        const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n        this.setState({tags});\r\n    };\r\n\r\n    showInput = () => {\r\n        this.setState({inputVisible: true}, () => this.input.focus());\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        this.setState({inputValue: e.target.value});\r\n    };\r\n\r\n    handleInputConfirm = () => {\r\n        const {inputValue} = this.state;\r\n        let {tags} = this.state;\r\n        if (inputValue && tags.indexOf(inputValue) === -1) {\r\n            tags = [...tags, inputValue];\r\n        }\r\n        this.setState({\r\n            tags,\r\n            inputVisible: false,\r\n            inputValue: '',\r\n        });\r\n    };\r\n\r\n    handleEditInputChange = e => {\r\n        this.setState({editInputValue: e.target.value});\r\n    };\r\n\r\n    handleEditInputConfirm = () => {\r\n        this.setState(({tags, editInputIndex, editInputValue}) => {\r\n            const newTags = [...tags];\r\n            newTags[editInputIndex] = editInputValue;\r\n\r\n            return {\r\n                tags: newTags,\r\n                editInputIndex: -1,\r\n                editInputValue: '',\r\n            };\r\n        });\r\n    };\r\n\r\n    saveInputRef = input => {\r\n        this.input = input;\r\n    };\r\n\r\n    saveEditInputRef = input => {\r\n        this.editInput = input;\r\n    };\r\n\r\n    newName = (value)=>{\r\n        console.log(value)\r\n        this.setState({name : value})\r\n    }\r\n    ;\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.visible !== this.props.visible) {\r\n            this.setState({visible: this.props.visible});\r\n            if(prevState.name !== this.props.brandId.brand.name ){\r\n                const newName =  this.props.brandId.brand.name;\r\n                this.newName(newName);\r\n                this.setState({name: this.props.brandId.brand.name});\r\n                if(prevState.tags !== this.props.brandId.brand.value  && this.props.visible === true ){\r\n                    let tagsArray=[];\r\n                    this.props.brandId.brand.values.map(value=>{\r\n                        tagsArray.push(value.name)\r\n                    })\r\n                    this.setState({tags: tagsArray})\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        this.setState({name:\"\"})\r\n    }\r\n\r\n    postBrandHandler = () => {\r\n        let attribute = new FormData();\r\n        attribute.append('name', this.state.name)\r\n        attribute.append('values', this.state.tags)\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        axios.post('attributes/update/'+this.props.brandId.id, attribute).then(response => {\r\n            const result = {\r\n                key: response.data.data.updatedAttribute.id, // I added this line\r\n                name: response.data.data.updatedAttribute.name,\r\n                values: response.data.data.updatedAttribute.values,\r\n                createdAt: <ReactTimeAgo date={new Date(response.data.data.updatedAttribute.createdAt)} locale=\"en-US\"/>,\r\n            }\r\n            this.props.dispatch(actionCreators.editAttribute(result))\r\n            this.setState({\r\n                loading: false\r\n            })\r\n            message.success('Attribute Updated successfully.');\r\n            this.props.cancel()\r\n\r\n        }).catch(error => {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n            message.error(error + \"Error Occurred\")\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const {tags, inputVisible, inputValue, editInputIndex, editInputValue} = this.state;\r\n        return (\r\n            <>\r\n                <Form layout=\"vertical\">\r\n                    <Drawer\r\n                        title=\"Edit Attribute\"\r\n                        width={720}\r\n                        onClose={this.props.cancel}\r\n                        visible={this.state.visible}\r\n                        bodyStyle={{paddingBottom: 80}}\r\n                        footer={\r\n                            <div\r\n                                style={{\r\n                                    textAlign: 'right',\r\n                                }}\r\n                            >\r\n                                <Button onClick={this.props.cancel} style={{marginRight: 8}}>\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button onClick={this.postBrandHandler} loading={this.state.loading} type=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </div>\r\n                        }\r\n                    >\r\n                        <Row gutter={16}>\r\n                            <Col span={24}>\r\n                                <Form.Item\r\n                                    name=\"name\"\r\n                                    label=\"Name\"\r\n                                    rules={[{required: true, message: 'Please enter attribute name'}]}\r\n                                >\r\n                                    <Input value={this.props.name === null ? this.state.name :this.props.name}\r\n                                           // defaultValue={this.props.name === null ? this.state.name :this.props.name}\r\n                                           name=\"name\"\r\n                                           onChange={this.handleInputsChange}/>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        {tags.map((tag, index) => {\r\n                            if (editInputIndex === index) {\r\n                                return (\r\n                                    <Input\r\n                                        ref={this.saveEditInputRef}\r\n                                        key={tag}\r\n                                        size=\"default\"\r\n                                        className=\"tag-input\"\r\n                                        value={editInputValue}\r\n                                        onChange={this.handleEditInputChange}\r\n                                        onBlur={this.handleEditInputConfirm}\r\n                                        onPressEnter={this.handleEditInputConfirm}\r\n                                    />\r\n                                );\r\n                            }\r\n\r\n                            const isLongTag = tag.length > 20;\r\n\r\n                            const tagElem = (\r\n                                <Tag\r\n                                    className=\"edit-tag\"\r\n                                    key={tag}\r\n                                    closable\r\n                                    onClose={e => {\r\n                                        e.preventDefault();\r\n                                        this.handleClose(tag)\r\n                                    }}\r\n                                >\r\n              <span\r\n                  onDoubleClick={e => {\r\n                      if (index !== 0) {\r\n                          this.setState({editInputIndex: index, editInputValue: tag}, () => {\r\n                              this.editInput.focus();\r\n                          });\r\n                          e.preventDefault();\r\n                      }\r\n                  }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n                                </Tag>\r\n                            );\r\n                            return isLongTag ? (\r\n                                <Tooltip title={tag} key={tag}>\r\n                                    {tagElem}\r\n                                </Tooltip>\r\n                            ) : (\r\n                                tagElem\r\n                            );\r\n                        })}\r\n                        {inputVisible && (\r\n                            <Input\r\n                                ref={this.saveInputRef}\r\n                                type=\"text\"\r\n                                size=\"default\"\r\n                                className=\"tag-input\"\r\n                                value={inputValue}\r\n                                onChange={this.handleInputChange}\r\n                                onBlur={this.handleInputConfirm}\r\n                                onPressEnter={this.handleInputConfirm}\r\n                            />\r\n                        )}\r\n                        {!inputVisible && (\r\n                            <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n                                <PlusOutlined/> Add Values\r\n                            </Tag>\r\n                        )}\r\n                    </Drawer>\r\n                </Form>\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(EditAttribute)\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Brand\\EditBrand\\EditBrand.js",["725","726","727","728","729"],"import {React, Component} from 'react'\r\nimport {Drawer, Button, Spin, Col, Row, Input, message} from 'antd';\r\nimport axios from \"axios\";\r\nimport {connect} from 'react-redux'\r\nimport * as actionCreators from \"../../../store/actions/brandActions\";\r\nimport Form from './Form'\r\nimport MediaQuery from 'react-responsive'\r\n\r\nconst {TextArea} = Input\r\n\r\nclass EditBrand extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: this.props.visible,\r\n            name: '',\r\n            logo: '',\r\n            loading: false,\r\n            description: '',\r\n        };\r\n    }\r\n    triggerChildAlert(){\r\n        this.refs.child.showAlert();\r\n    }\r\n    getBrands(){\r\n        this.props.dispatch(actionCreators.storeBrands())\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.visible !== this.props.visible) {\r\n            this.setState({visible: this.props.visible});\r\n            if (this.props.brandId) {\r\n                if (!this.props.brand || (this.props.brand && this.props.brandId !== this.props.brand.id)) {\r\n                    axios.get('brands/' + this.props.brandId)\r\n                        .then(response => {\r\n                            this.setState({\r\n                                name: response.data.name,\r\n                                description: response.data.description\r\n                            })\r\n                            this.props.dispatch(actionCreators.editBrand(response.data))\r\n\r\n                        })\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    setLoaderState(){\r\n        this.setState(\r\n            {loading:!this.state.loading})\r\n    }\r\n\r\n    render() {\r\n        let brand = \"\"\r\n\r\n        if (this.props.brand) {\r\n            brand = (<>\r\n\r\n            <MediaQuery minWidth={1224}>\r\n                <Drawer\r\n                    title=\"Edit Brand\"\r\n                    width={720}\r\n                    onClose={this.props.cancel}\r\n                    visible={this.state.visible}\r\n                    bodyStyle={{paddingBottom: 80}}\r\n                    footer={\r\n                        <div\r\n                            style={{\r\n                                textAlign: 'right',\r\n                            }}\r\n                        >\r\n                            <Button onClick={this.props.cancel} style={{marginRight: 8}}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"primary\" loading={this.state.loading} onClick={this.triggerChildAlert.bind(this)}>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <Form ref=\"child\"\r\n                          getBrands={this.getBrands.bind(this)}\r\n                          cancelDrawer={this.props.cancel}\r\n                          setloader={this.setLoaderState.bind(this)}\r\n                          brandId={this.props.brand.id}\r\n                          brand={this.props.brand} />\r\n\r\n                </Drawer>\r\n                </MediaQuery>\r\n\r\n                <MediaQuery maxWidth={1224}>\r\n                <Drawer\r\n                    title=\"Edit Brand\"\r\n                    width={350}\r\n                    onClose={this.props.cancel}\r\n                    visible={this.state.visible}\r\n                    bodyStyle={{paddingBottom: 80}}\r\n                    footer={\r\n                        <div\r\n                            style={{\r\n                                textAlign: 'right',\r\n                            }}\r\n                        >\r\n                            <Button onClick={this.props.cancel} style={{marginRight: 8}}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"primary\" loading={this.state.loading} onClick={this.triggerChildAlert.bind(this)}>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <Form ref=\"child\"\r\n                          getBrands={this.getBrands.bind(this)}\r\n                          cancelDrawer={this.props.cancel}\r\n                          setloader={this.setLoaderState.bind(this)}\r\n                          brandId={this.props.brand.id}\r\n                          brand={this.props.brand} />\r\n\r\n                </Drawer>\r\n                </MediaQuery>\r\n            </>)\r\n        }\r\n        return brand\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        brand: state.brands.brand,\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps)(EditBrand)\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Brand\\NewBrand\\NewBrand.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Customer\\EditCustomer\\EditCustomer.js",["730","731","732","733","734"],"import {React, Component} from 'react'\r\nimport {Drawer, Button, Spin, Col, Row, Input, message} from 'antd';\r\nimport axios from \"axios\";\r\nimport {connect} from 'react-redux'\r\nimport * as actionCreators from \"../../../store/actions/customerActions\"\r\nimport Form from './Form'\r\nimport MediaQuery from 'react-responsive'\r\n\r\nconst {TextArea} = Input\r\n\r\nclass EditCustomer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible:this.props.visible,\r\n            loading:false,\r\n            firstName:'',\r\n            lastName:'',\r\n            email:'',\r\n            phone:'',\r\n        };\r\n    }\r\n    triggerChildAlert(){\r\n        this.refs.child.showAlert();\r\n    }\r\n    getCustomers(){\r\n        this.props.dispatch(actionCreators.storeCustomers())\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.visible !== this.props.visible) {\r\n            this.setState({visible: this.props.visible});\r\n            if (this.props.customerId) {\r\n                if (!this.props.customer || (this.props.customer && this.props.customerId !== this.props.customer.id)) {\r\n                    axios.get('customer/' + this.props.customerId)\r\n                        .then(response => {\r\n                            this.setState({\r\n                                firstName: response.data.firstName,\r\n                                lastName: response.data.lastName,\r\n                                email:response.data.email,\r\n                                phone:response.data.phone\r\n                            })\r\n                            this.props.dispatch(actionCreators.editCustomer(response.data))\r\n\r\n                        })\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    setLoaderState(){\r\n        this.setState(\r\n            {loading:!this.state.loading})\r\n    }\r\n\r\n    render() {\r\n        let customer = \"\"\r\n\r\n        if (this.props.customer) {\r\n            customer = (<>\r\n                <MediaQuery minWidth={1224}>\r\n\r\n                <Drawer\r\n                    title=\"Edit customer\"\r\n                    width={720}\r\n                    onClose={this.props.cancel}\r\n                    visible={this.props.visible}\r\n                    bodyStyle={{paddingBottom: 80}}\r\n                    footer={\r\n                        <div\r\n                            style={{\r\n                                textAlign: 'right',\r\n                            }}\r\n                        >\r\n                            <Button onClick={this.props.cancel} style={{marginRight: 8}}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"primary\" loading={this.state.loading} onClick={this.triggerChildAlert.bind(this)}>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <Form ref=\"child\"\r\n                          getCustomers={this.getCustomers.bind(this)}\r\n                          cancelDrawer={this.props.cancel}\r\n                          setloader={this.setLoaderState.bind(this)}\r\n                          customerId={this.props.customer.id}\r\n                          customer={this.props.customer} />\r\n\r\n                </Drawer>\r\n                </MediaQuery>\r\n\r\n                <MediaQuery maxWidth={1224}>\r\n\r\n                <Drawer\r\n                    title=\"Edit customer\"\r\n                    width={350}\r\n                    onClose={this.props.cancel}\r\n                    visible={this.props.visible}\r\n                    bodyStyle={{paddingBottom: 80}}\r\n                    footer={\r\n                        <div\r\n                            style={{\r\n                                textAlign: 'right',\r\n                            }}\r\n                        >\r\n                            <Button onClick={this.props.cancel} style={{marginRight: 8}}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type=\"primary\" loading={this.state.loading} onClick={this.triggerChildAlert.bind(this)}>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                >\r\n                    <Form ref=\"child\"\r\n                          getCustomers={this.getCustomers.bind(this)}\r\n                          cancelDrawer={this.props.cancel}\r\n                          setloader={this.setLoaderState.bind(this)}\r\n                          customerId={this.props.customer.id}\r\n                          customer={this.props.customer} />\r\n\r\n                </Drawer>\r\n                </MediaQuery>\r\n            </>)\r\n        }\r\n        return customer\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        customer: state.customers.customer,\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps)(EditCustomer)\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Attribute\\NewAttribute\\NewAttribute.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Customer\\NewCustomer\\NewCustomer.js",["735","736"],"\r\nimport React ,{Component} from \"react\"\r\nimport {Drawer, Form, Button, Col, Row, Input, message} from 'antd';\r\nimport * as actionCreators from \"../../../store/actions/customerActions\"\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\nimport MediaQuery from 'react-responsive'\r\n\r\nconst {TextArea} = Input\r\nclass NewCustomer extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            visible:this.props.visible,\r\n            loading:false,\r\n            firstName:'',\r\n            lastName:'',\r\n            email:'',\r\n            phone:'',\r\n        }\r\n        this.handleInputChange= this.handleInputChange.bind(this);\r\n    }\r\n    handleInputChange (event){\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.visible !== this.props.visible) {\r\n            this.setState({visible: this.props.visible});\r\n        }\r\n    }\r\n    postCustomerHandler=()=>{\r\n        let customer = new FormData();\r\n        customer.append('firstName',this.state.firstName)\r\n        customer.append('email',this.state.email)\r\n        customer.append(\"phone\",this.state.phone)\r\n        customer.append(\"lastName\", this.state.lastName)\r\n        this.setState({\r\n            loading:true\r\n        })\r\n        console.log(customer)\r\n        axios.post('customer', customer, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(response=>{\r\n            const result = {\r\n                key:response.data.id,\r\n                firstName:response.data.firstName,\r\n                lastName: response.data.lastName,\r\n                email:response.data.email,\r\n                phone:response.data.phone,\r\n            }\r\n            this.props.dispatch(actionCreators.saveCustomer(result))\r\n            message.success(\"Customer has been created\")\r\n            this.setState({\r\n                loading:false\r\n            })\r\n            this.props.cancel()\r\n        }).catch(error => {\r\n\r\n        })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n            <MediaQuery minWidth={750}>\r\n                <Drawer title=\"Create a new Customer\" width={720}  visible={this.state.visible}\r\n                        bodyStyle={{paddingBottom: 80}}\r\n                    footer={\r\n                        <div style={{textAlign: 'right',}}>\r\n                                <Button onClick={this.props.cancel} style={{marginRight: 8}}>\r\n                                    Cancel\r\n                                </Button>\r\n                            <Button onClick={this.postCustomerHandler}  type=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    }>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={16}>\r\n                            <Col span={24}>\r\n                                <Form.Item name=\"firstName\" label=\"FirstName\"\r\n                                    rules={[{required: true, message: 'Please enter Customers First name'}]}>\r\n                                    <Input value={this.state.firstName}\r\n                                           name=\"firstName\"\r\n                                           onChange={this.handleInputChange}/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item name=\"lastName\" label=\"LastName\"\r\n                                           rules={[{required: true, message: 'Please enter Customers lastName'}]}>\r\n                                    <Input value={this.state.lastName}\r\n                                           name=\"phone\"\r\n                                           onChange={this.handleInputChange}/>\r\n                                </Form.Item>\r\n                                <Form.Item name=\"email\" label=\"Email\"\r\n                                           rules={[{required: true, message: 'Please enter Customers email'}]}>\r\n                                    <Input value={this.state.email}\r\n                                           name=\"email\"\r\n                                           onChange={this.handleInputChange}/>\r\n                                </Form.Item>\r\n                                <Form.Item name=\"phone\" label=\"Phone\"\r\n                                           rules={[{required: true, message: 'Please enter Customers Phone'}]}>\r\n                                    <Input value={this.state.phone}\r\n                                           name=\"phone\"\r\n                                           onChange={this.handleInputChange}/>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Drawer>\r\n                </MediaQuery>\r\n\r\n            <MediaQuery maxWidth={750}>\r\n                <Drawer title=\"Create a new Customer\" width={350}  visible={this.state.visible}\r\n                        bodyStyle={{paddingBottom: 80}}\r\n                    footer={\r\n                        <div style={{textAlign: 'right',}}>\r\n                                <Button onClick={this.props.cancel} style={{marginRight: 8}}>\r\n                                    Cancel\r\n                                </Button>\r\n                            <Button onClick={this.postCustomerHandler}  type=\"primary\">\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n                    }>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={16}>\r\n                            <Col span={24}>\r\n                                <Form.Item name=\"firstName\" label=\"FirstName\"\r\n                                    rules={[{required: true, message: 'Please enter Customers First name'}]}>\r\n                                    <Input value={this.state.firstName}\r\n                                           name=\"firstName\"\r\n                                           onChange={this.handleInputChange}/>\r\n                                </Form.Item>\r\n\r\n                                <Form.Item name=\"lastName\" label=\"LastName\"\r\n                                           rules={[{required: true, message: 'Please enter Customers lastName'}]}>\r\n                                    <Input value={this.state.lastName}\r\n                                           name=\"phone\"\r\n                                           onChange={this.handleInputChange}/>\r\n                                </Form.Item>\r\n                                <Form.Item name=\"email\" label=\"Email\"\r\n                                           rules={[{required: true, message: 'Please enter Customers email'}]}>\r\n                                    <Input value={this.state.email}\r\n                                           name=\"email\"\r\n                                           onChange={this.handleInputChange}/>\r\n                                </Form.Item>\r\n                                <Form.Item name=\"phone\" label=\"Phone\"\r\n                                           rules={[{required: true, message: 'Please enter Customers Phone'}]}>\r\n                                    <Input value={this.state.phone}\r\n                                           name=\"phone\"\r\n                                           onChange={this.handleInputChange}/>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Drawer>\r\n                </MediaQuery>\r\n\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(NewCustomer);","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\data\\invoice_data.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Layout\\Header\\Header.js",["737"],"import React, {Component,useState} from 'react'\r\nimport {Image, Layout, Menu} from \"antd\";\r\nimport {UserOutlined} from '@ant-design/icons';\r\nimport Logo from \"../../../assets/images/logos/abc.png\";\r\nimport './Header.css';\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport { useHistory} from 'react-router-dom'\r\n\r\nimport * as authActions from '../../../store/actions/AuthActions/auth'\r\nconst {Header} = Layout;\r\nconst {SubMenu} = Menu;\r\n\r\nconst Navbar =(props)=> {\r\n    const {auth} = useSelector(({auth}) => auth);\r\n\r\n    const dispatch=useDispatch()\r\n    const history=useHistory()\r\n    const [current,setCurrent]=useState('mail')\r\n    const handleClick = (e) => {\r\n        setCurrent( e.key);\r\n    };\r\n    let userName = (auth.user.firstName+\" \"+auth.user.lastName)\r\n    const logout = (e) => {\r\n        dispatch(authActions.logout())\r\n        history.push('/')\r\n    };\r\n\r\n\r\n        return (\r\n            <Header className=\"site-layout-background\" style={{padding: 0, height:'auto',backgroundColor:'#adadad87'}}>\r\n            <Image\r\n                width={210}\r\n                style={{marginTop:\"-6\"}}\r\n                src={Logo}\r\n            />\r\n            <Menu className='Menu' onClick={handleClick} style={{marginTop:\"40px\",backgroundColor:'#adadad87',border:\"none\"}} selectedKeys={[current]} mode='horizontal'>\r\n\r\n                <SubMenu key=\"SubMenu\" icon={<UserOutlined/>} title={userName}>\r\n                    <Menu.Item key=\"setting:1\">Profile</Menu.Item>\r\n                    <Menu.Item key=\"setting:2\" onClick={logout} >Logout</Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n            </Menu>\r\n        </Header>\r\n        )\r\n\r\n\r\n}\r\n\r\nexport default Navbar\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Layout\\Sider\\index.js",["738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754"],"import { React, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  DesktopOutlined,\r\n  PieChartOutlined,\r\n  DashboardOutlined,\r\n  OrderedListOutlined,\r\n  AmazonOutlined,\r\n  MergeCellsOutlined,\r\n  TagOutlined,\r\n  ShoppingCartOutlined,\r\n  ShopOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport FeatherIcon from \"feather-icons-react\";\r\nimport axios from \"axios\";\r\nimport { saveAllUnreadOrders } from \"../../../store/actions/OrderActions/orderActions\";\r\n\r\nconst { Sider } = Layout;\r\n// const {SubMenu} = Menu;\r\nconst SideBar = (props) => {\r\n\r\n  const [orderCount, setOrderCount] = useState('')\r\n  const { modules } = useSelector(({ auth }) => auth);\r\n  const { allUnread } = useSelector(({ orders }) => orders);\r\n  const [path, setPath] = useState(\"\");\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    let abc = window.location.href;\r\n    let pathname = abc.split(\"/\");\r\n    setPath(pathname[3]);\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(saveAllUnreadOrders())\r\n  }, [allUnread])\r\n\r\n  return (\r\n    path && (\r\n      <Sider\r\n        breakpoint=\"lg\"\r\n        collapsed={props.collapsed}\r\n        onCollapse={props.onCollapse}\r\n      >\r\n        <Menu theme=\"dark\" defaultSelectedKeys={[path]} mode=\"inline\">\r\n          {modules.map((module, key) => (\r\n            <Menu.Item\r\n              key={module.slug}\r\n\r\n              icon={<FeatherIcon icon={module.icon} fill=\"black\" size={17} />}\r\n            >\r\n              <Link to={`/${module.slug}`}>{module.name} </Link>\r\n              {module.slug === \"orders\" ? <span style={{\r\n                background: '#006400',\r\n                padding: '5px 18px 6px 18px',\r\n                fontSize: '16px',\r\n                borderRadius: '25px',\r\n                margin: '0 0px 0 6px'\r\n              }}>\r\n                {allUnread}\r\n              </span> : \"\"}\r\n            </Menu.Item>\r\n          ))}\r\n        </Menu>\r\n      </Sider>\r\n    )\r\n  );\r\n};\r\nexport default SideBar;\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\LatestOrders\\LatestOrders.js",["755"],"import React, {Component, useEffect,useState} from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst LatestOrder=()=> {\r\n    const [leftOrder,setLeftOrder]=useState(\"\");\r\n    useEffect(()=>{\r\n        axios.get(\"orders/pending\")\r\n            .then((response)=>{\r\n                console.log(response);\r\n                setLeftOrder(response.data.map(data=>(\r\n                    <div className=\"review-content\">\r\n                        <table>\r\n                            <tr>\r\n                                <td>{data.Status.id}</td>\r\n                                <td className=\"review-data1\">{data.Status.name}</td>\r\n                                <td>data</td>\r\n                                <td>data</td>\r\n                                {/*<td>{data.OrderProducts.Product.name}</td>*/}\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                )))\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    },[])\r\n        return (\r\n            <div className=\"latestProduct-main review-sec-main\">\r\n                <h2>Orders</h2>\r\n                <div className=\"review-main\">\r\n                    <table>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>STATUS</th>\r\n                            <th>PRODUCT</th>\r\n                            <th>Rating</th>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                {leftOrder}\r\n            </div>\r\n        );\r\n}\r\nexport default LatestOrder;","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\LastestReview\\LatestReview.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\LatestQuestions\\LatestQuestion.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\Utils\\helpers.js",["756","757","758","759","760","761","762","763","764","765","766","767"],"import axios from \"axios\";\r\nimport {message} from \"antd\";\r\nimport {\r\n    storePendingOrders,\r\n    storeVerifiedOrders,\r\n    storeInTransitOrders,\r\n    storeDeliveredOrders,\r\n    storeCancelledOrders, storeRefundOrders\r\n} from \"../store/actions/OrderActions/orderActions\";\r\n// export const cancelOrder = (id) => {\r\n//     return dispatch => {\r\n//         let cancelled = new FormData()\r\n//         cancelled.append('statusId',3)\r\n//         axios.put('orders/statusUpdate/' + id ,cancelled).then(\r\n//             response=>{\r\n//                 dispatch(addCancelledOrder(id))\r\n//                 message.success('Order Is Marked As cancelled')\r\n//             }).catch(error=>{\r\n//             message.error('error')\r\n//         })\r\n//     }\r\n//\r\n// }\r\n\r\nexport const orderStatusUpdate = (id,statusId,prevStatusId)=>{\r\n    return dispatch=>{\r\n        let pOrder = new FormData()\r\n        pOrder.append('statusId',statusId)\r\n        axios.put('orders/statusUpdate/' + id ,pOrder)\r\n            .then(\r\n                response=>{\r\n                    if(statusId==1) {\r\n                        dispatch(storePendingOrders())\r\n                    }else if(statusId==2) {\r\n                        dispatch(storeVerifiedOrders())\r\n                    }else if(statusId==6) {\r\n                        dispatch(storeInTransitOrders())\r\n                    }else if(statusId==5) {\r\n                        dispatch(storeDeliveredOrders())\r\n                    }else if(statusId==3) {\r\n                        dispatch(storeCancelledOrders())\r\n                    }else if(statusId==4) {\r\n                        dispatch(storeRefundOrders())\r\n                    }\r\n                    if(prevStatusId ==1){\r\n                        dispatch(storePendingOrders())\r\n                    }else if(prevStatusId ==2){\r\n                        dispatch(storeVerifiedOrders())\r\n                    }else if(prevStatusId ==6){\r\n                        dispatch(storeInTransitOrders())\r\n                    }else if(prevStatusId==5) {\r\n                        dispatch(storeDeliveredOrders())\r\n                    }else if(prevStatusId==3) {\r\n                        dispatch(storeCancelledOrders())\r\n                    }else if(prevStatusId==4) {\r\n                        dispatch(storeRefundOrders())\r\n                    }\r\n                    message.success(\"Order status is Changed!\")\r\n                })\r\n            .catch(error=>{\r\n                message.error('An Error has Occured!!'+error)\r\n            })\r\n    }\r\n}","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\components\\OrderModal\\OrderModal.js",["768","769"],"import React, { Component } from 'react'\r\nimport { Modal, Card, Col, Row, Descriptions, Badge } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport \"./orderModal.css\";\r\nimport { Link } from 'react-router-dom';\r\nconst { Meta } = Card;\r\n// import invoiceData from '../../data/invoice_data';\r\n\r\nclass OrderModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isVisible: this.props.isVisible,\r\n            orderId: this.props.orderId,\r\n            order: this.props.order,\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        let totalPrice = this.props.order.amount\r\n        let items = this.props.order.OrderVariants\r\n        let order = this.props.order\r\n        let totalQuantity = 0\r\n        this.props.order.OrderVariants.map(price => {\r\n            totalQuantity += price.quantity\r\n        })\r\n        return (\r\n            <>\r\n\r\n                <Modal\r\n                    title=\"Order Detail\"\r\n                    visible={this.props.isVisible}\r\n                    orderID={this.state.orderId}\r\n                    onCancel={this.props.onCancle}\r\n                    style={{ height: '50%', top: '0' }}\r\n                    width={1000}\r\n                    onOk={this.props.onCancle}\r\n                >\r\n                    \r\n                    \r\n\r\n                    <Descriptions title={\"Order No:\" + order.order_no} bordered>\r\n                    \r\n                        <Descriptions.Item span={3} style={{ textAlign: \"center\" }} label={\"Order Placed at\"}>\r\n                            {moment(order.createdAt).format('MMMM Do YYYY, h:mm:ss a')}\r\n                        </Descriptions.Item>\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <Descriptions.Item span={3} label=\"Customer Details\">\r\n                            <Row>\r\n                                <Col md={10}>\r\n                                    <h3>Name:</h3>\r\n                                </Col>\r\n                                <Col md={10}>\r\n                                    {order.customer.firstName + \" \" + order.customer.lastName}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={10}>\r\n                                    <h3>Email:</h3>\r\n                                </Col>\r\n                                <Col md={10}>\r\n                                    {order.customer.email}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={10}>\r\n                                    <h3>Phone:</h3>\r\n                                </Col>\r\n                                <Col md={10}>\r\n                                    {order.customer.phone}\r\n                                </Col>\r\n                            </Row>\r\n                        </Descriptions.Item>\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <Descriptions.Item span={3} label=\"Address Details\">\r\n                            <Row>\r\n                                <Col md={10}>\r\n                                    <h3>Address:</h3>\r\n                                </Col>\r\n                                <Col md={10}>\r\n                                    {order.address}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={10}>\r\n                                    <h3>City:</h3>\r\n                                </Col>\r\n                                <Col md={10}>\r\n                                    {order.city}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={10}>\r\n                                    <h3>State/Province:</h3>\r\n                                </Col>\r\n                                <Col md={10}>\r\n                                    {order.province}\r\n                                </Col>\r\n                            </Row>\r\n                        </Descriptions.Item>\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <Descriptions.Item label=\"Status\">\r\n                            <Badge status=\"processing\" layout=\"vertical\" text={order.Status.name.toUpperCase()} />\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item />\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <Descriptions.Item span={2} />\r\n                        <Descriptions.Item label=\"Total Price\" span={3}>\r\n                            {totalPrice}\r\n                        </Descriptions.Item>\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        <Descriptions.Item label=\"Quantity\" span={3}>\r\n                            {totalQuantity}\r\n                        </Descriptions.Item>\r\n                    </Descriptions>\r\n                    \r\n                    <Card span={3} title=\"Product Description\">\r\n                        <div>\r\n                        <Row gutter={24}>\r\n                                <>\r\n                                    <Col span={24}>\r\n                                        <section>\r\n                                            <div className=\"container\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-12\">\r\n                                                        <div className=\"inventory_content\">\r\n                                                            <div className=\"cart-content table-responsive\">\r\n                                                                <table>\r\n                                                                    <thead>\r\n                                                                        <tr>\r\n                                                                            <th>Product</th>\r\n                                                                            <th>Quantity</th>\r\n                                                                            <th>Unit Price</th>\r\n                                                                            <th>Amount</th>\r\n                                                                        </tr>\r\n                                                                    </thead>\r\n                                                                    <tbody>\r\n                                                                        {\r\n                                                                            items.map((product) =>\r\n                                                                                <React.Fragment key={product.id.toString()}>\r\n                                                                                    <tr>\r\n\r\n                                                                                        <td>\r\n                                                                                            <div\r\n                                                                                                className=\"single_cart_item flex\">\r\n                                                                                                <div\r\n                                                                                                    className=\"cart_item_image\"\r\n                                                                                                    style={{ backgroundImage: `url(${process.env.REACT_APP_BASE_IMAGE_PATH + product.Variant.Product.images[0].path})` }}></div>\r\n                                                                                                <div\r\n                                                                                                    className=\"cart_item_text\">\r\n                                                                                                    <span\r\n                                                                                                        className=\"car-product-name\">{HTMLReactParser(product.Variant.Product.name)}\r\n                                                                                                    </span>\r\n                                                                                                    <div\r\n                                                                                                        className=\"cart_actions\">\r\n\r\n                                                                                                        <h6 className=\"cross\">{product.quantity} x {product.Variant.price}\r\n                                                                                                        </h6>\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                                <br />\r\n\r\n                                                                                            </div>\r\n\r\n                                                                                        </td>\r\n                                                                                        <td>\r\n                                                                                            <div\r\n                                                                                                className=\"quantity-selector cart\">\r\n                                                                                                <input type='text'\r\n                                                                                                    name='quantity'\r\n                                                                                                    value={product.quantity}\r\n                                                                                                    className='qty input-number' />\r\n                                                                                            </div>\r\n                                                                                        </td>\r\n                                                                                        <td>\r\n                                                                                            {product.Variant.price}\r\n                                                                                        </td>\r\n                                                                                        <td>\r\n                                                                                            {product.Variant.price * product.quantity}\r\n                                                                                        </td>\r\n                                                                                    </tr>\r\n                                                                                </React.Fragment>\r\n                                                                            )\r\n                                                                        }\r\n\r\n                                                                    </tbody>\r\n                                                                    <tfoot>\r\n                                                                        <tr>\r\n                                                                            <td colSpan=\"3\">\r\n                                                                                <b style={{ float: \"right\" }}>Total</b></td>\r\n                                                                            <td><b>\r\n                                                                                {totalPrice}\r\n                                                                            </b></td>\r\n                                                                        </tr>\r\n                                                                    </tfoot>\r\n                                                                   \r\n                                                                </table>\r\n                                                                \r\n                                                            </div>\r\n                                                         \r\n                                                        </div>\r\n                                                        \r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                            \r\n                                        </section>\r\n                                        \r\n                                    </Col>\r\n                                    \r\n                                </>\r\n                                \r\n                            </Row>\r\n                            \r\n                        </div>\r\n                     \r\n                    </Card>\r\n                    <div className='Modal-Invoice'>\r\n                         <Link to={\"/product/finalinvoice\"}>\r\n                        <button>Print Invoice</button>\r\n                        </Link>\r\n                    </div>\r\n                    \r\n                </Modal>\r\n               \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(OrderModal);\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Collection\\EditCollection\\Form.js",["770","771","772"],"import React, {useState, useEffect, forwardRef, useImperativeHandle} from 'react';\r\nimport {Form, Input, Row, Col, message, Space, Select} from 'antd';\r\nimport Uploader from \"../../../components/ImageUploader/Uploader\";\r\nimport axios from \"axios\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as actionCreators from \"../../../store/actions/collectionActions\";\r\n\r\nconst {TextArea} = Input\r\nconst DynamicRule = forwardRef((props, ref) => {\r\n    const [form] = Form.useForm();\r\n    const [name, setName] = useState(false);\r\n    const [description, setDescription] = useState('');\r\n    const [image, setImage] = useState(false);\r\n    const [parentCollection, setParentCollection] = useState([])\r\n    const [parentCollectionOptions, setParentCollectionOptions] = useState([]);\r\n    const parentCollectionArray = []\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        for (let i = 0; i < props.collections.length; i++) {\r\n            let value = props.collections[i].key\r\n            parentCollectionArray.push({\r\n                label: props.collections[i].name,\r\n                value,\r\n            });\r\n            setParentCollectionOptions(options => [...parentCollectionArray]);\r\n        }\r\n    }, [props.collections]);\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            name: props.collection.name,\r\n            description: props.collection.description,\r\n            parentCollection: props.collection.collectionId\r\n        })\r\n        setName(props.collection.name)\r\n        setDescription(props.collection.description)\r\n        setParentCollection(props.pids)\r\n    }, [props.collection]);\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            async showAlert() {\r\n                try {\r\n                    const values = await form.validateFields();\r\n                    let collection = new FormData()\r\n                    let id = props.collection.id\r\n                    collection.append('file', image)\r\n                    collection.append('name', name)\r\n                    collection.append('description', description)\r\n                    collection.append('collectionIds', parentCollection)\r\n                    props.setloader()\r\n                    axios.put('collections/' + id, collection, {\r\n                        headers: {\r\n                            'Content-Type': 'multipart/form-data'\r\n                        }\r\n                    }).then(response => {\r\n                        dispatch(actionCreators.editCollection(response.data.latestCollections))\r\n                        props.getCollections()\r\n                        props.setloader()\r\n                        props.cancelDrawer()\r\n                        message.success('Collection updated successfully.');\r\n\r\n                    }).catch(error => {\r\n                        props.setloader()\r\n                        message.error(error)\r\n                    })\r\n\r\n                } catch (errorInfo) {\r\n                    props.setloader()\r\n                    if (errorInfo.errorFields[0]) {\r\n                        message.error('Failed:', errorInfo.errorFields[0].errors[0]);\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n        }),\r\n    )\r\n\r\n    const saveImage = (image) => {\r\n        setImage(image)\r\n    }\r\n\r\n    const selectParentCollectionProps = {\r\n        mode: 'multiple',\r\n        style: {\r\n            width: '100%',\r\n        },\r\n        parentCollection,\r\n        options: parentCollectionOptions,\r\n\r\n        onChange: (newValue) => {\r\n            setParentCollection(newValue);\r\n        },\r\n        placeholder: 'Select ParentCollection...',\r\n        maxTagCount: 'responsive',\r\n    };\r\n    return (\r\n        <Form form={form} layout=\"vertical\">\r\n            <Row gutter={16}>\r\n                <Col span={24}>\r\n                    <Form.Item\r\n                        name=\"name\"\r\n                        label=\"Name\"\r\n                        rules={[{required: true, message: 'Please enter collection name'}]}\r\n                    >\r\n                        <Input onChange={e => setName(e.target.value)} value={props.collection.name}\r\n                               placeholder=\"Please enter user name\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"description\"\r\n                        label=\"Description\"\r\n                        rules={[{message: 'Please enter collection description'}]}\r\n                    >\r\n                        <TextArea onChange={e => setDescription(e.target.value)} value={props.collection.description}\r\n                                  name=\"description\" rows={4}/>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Child Collection\">\r\n                        <Space\r\n                            direction=\"vertical\"\r\n                            style={{\r\n                                width: '100%',\r\n                            }}\r\n                        >\r\n                            <Select\r\n                                showSearch\r\n                                value={parentCollection}\r\n                                filterOption={(input, option) =>\r\n                                    option.props.label[0].toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                                {...selectParentCollectionProps}/>\r\n                        </Space>\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Uploader saveImage={saveImage} image={props.collection.image}/>\r\n        </Form>\r\n    );\r\n});\r\n\r\nexport default DynamicRule\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\footer.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\tableRows.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\space.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Customer\\EditCustomer\\Form.js",["773","774"],"import React, {forwardRef, useEffect, useImperativeHandle, useState} from 'react';\r\nimport {Col, Form, Input, message, Row} from 'antd';\r\nimport axios from \"axios\";\r\n\r\nconst CustomerEditForm = forwardRef((props, ref) => {\r\n    const [form] = Form.useForm();\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\")\r\n    useEffect(() => {\r\n        console.log(props.customer)\r\n        form.setFieldsValue({\r\n            firstName: props.customer.firstName,\r\n            email: props.customer.email,\r\n            phone: props.customer.phone,\r\n            lastName: props.customer.lastName,\r\n        })\r\n        setFirstName(props.customer.firstName)\r\n        setLastName(props.customer.lastName)\r\n        setEmail(props.customer.email)\r\n        setPhone(props.customer.phone)\r\n    }, [props.customer]);\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            async showAlert() {\r\n                try {\r\n                    const values = await form.validateFields();\r\n                    let customer = new FormData()\r\n                    let id = props.customerId\r\n                    customer.append('lastName', lastName)\r\n                    customer.append('firstName', firstName)\r\n                    customer.append('phone', phone)\r\n                    customer.append(\"email\", email)\r\n                    props.setloader()\r\n                    axios.put('customer/' + id, customer, {\r\n                        headers: {\r\n                            'Content-Type': 'multipart/form-data'\r\n                        }\r\n                    }).then(response => {\r\n                        props.getCustomers()\r\n                        props.setloader()\r\n                        props.cancelDrawer()\r\n                        message.success('Customer updated successfully.');\r\n                    }).catch(error => {\r\n                        console.log(error)\r\n                        // let errors = error.response.data;\r\n                        // if (errors.errors[0].param == 'firstName') {\r\n                        //     message.error(errors.errors[0].msg);\r\n                        // }\r\n                    })\r\n\r\n                } catch (errorInfo) {\r\n                    console.log(errorInfo)\r\n                    // if (errorInfo.errorFields[0]) {\r\n                    //     message.error('Failed:', errorInfo.errorFields[0].errors[0]);\r\n                    //\r\n                    // }\r\n                }\r\n\r\n            }\r\n        }),\r\n    )\r\n    return (\r\n        <Form form={form} layout=\"vertical\">\r\n            <Row gutter={16}>\r\n                <Col span={24}>\r\n                    <Form.Item\r\n                        name=\"firstName\"\r\n                        label=\"First Name\"\r\n                        rules={[{required: true, message: 'Please enter Customer First Name'}]}\r\n                    >\r\n                        <Input onChange={e => setFirstName(e.target.value)} value={firstName}\r\n                               placeholder=\"Please enter user first name\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"lastName\"\r\n                        label=\"Last Name\"\r\n                        rules={[{required: true, message: 'Please enter Customer Last Name'}]}\r\n                    >\r\n                        <Input onChange={e => setLastName(e.target.value)} value={firstName}\r\n                               placeholder=\"Please enter user name last name\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        rules={[{required: true, message: 'Please enter Customer Email'}]}\r\n                    >\r\n                        <Input onChange={e => setEmail(e.target.value)} value={firstName}\r\n                               placeholder=\"Please enter user Email\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"phone\"\r\n                        label=\"Customer Phone NO\"\r\n                        rules={[{required: true, message: 'Please enter Customer Last Name'}]}\r\n                    >\r\n                        <Input onChange={e => setPhone(e.target.value)} value={firstName}\r\n                               placeholder=\"Please enter user name last name\"/>\r\n                    </Form.Item>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n\r\n});\r\nexport default CustomerEditForm\r\n",["775","776"],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Brand\\EditBrand\\Form.js",["777","778","779","780"],"import React, {useState, useEffect, forwardRef, useImperativeHandle} from 'react';\r\nimport {Form, Input, Row, Col, message} from 'antd';\r\nimport Uploader from \"../../../components/ImageUploader/Uploader\";\r\nimport axios from \"axios\";\r\nconst {TextArea} = Input\r\nconst DynamicRule = forwardRef((props, ref) => {\r\n    const [form] = Form.useForm();\r\n    const [name, setName] = useState(false);\r\n    const [description, setDescription] = useState('');\r\n    const [image, setImage] = useState(false);\r\n    const [isPopular,setIsPopular]=useState(props.brand.isPopular)\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            name: props.brand.name,\r\n            description: props.brand.description,\r\n        })\r\n        setName(props.brand.name)\r\n        setDescription(props.brand.description)\r\n        setIsPopular(props.brand.isPopular)\r\n    }, [props.brand]);\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            async showAlert() {\r\n                try {\r\n                    const values = await form.validateFields();\r\n                    let brand = new FormData()\r\n                    let id = props.brand.id\r\n                    brand.append('file', image)\r\n                    brand.append('isPopular', isPopular)\r\n                    brand.append('name', name)\r\n                    brand.append('description', description)\r\n                    props.setloader()\r\n                    axios.put('brands/' + id, brand, {\r\n                        headers: {\r\n                            'Content-Type': 'multipart/form-data'\r\n                        }\r\n                    }).then(response => {\r\n                        props.getBrands()\r\n                        props.setloader()\r\n                        props.cancelDrawer()\r\n                        message.success('Brand updated successfully.');\r\n                    }).catch(error => {\r\n                        let errors = error.response.data;\r\n                        if (errors.errors[0].param == 'name') {\r\n                            message.error(errors.errors[0].msg);\r\n                        }\r\n                    })\r\n\r\n                } catch (errorInfo) {\r\n                    if (errorInfo.errorFields[0]) {\r\n                        message.error('Failed:', errorInfo.errorFields[0].errors[0]);\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n        }),\r\n    )\r\n    const saveImage = (image) => {\r\n        setImage(image)\r\n    }\r\n    const onChange =  (value) => {\r\n        setIsPopular(value)\r\n    };\r\n\r\n    return (\r\n        <Form form={form} layout=\"vertical\">\r\n            <Row gutter={16}>\r\n                <Col span={24}>\r\n                    <Form.Item\r\n                        name=\"name\"\r\n                        label=\"Name\"\r\n                        rules={[{required: true, message: 'Please enter brand name'}]}\r\n                    >\r\n                        <Input onChange={e => setName(e.target.value)} value={props.brand.name}\r\n                               placeholder=\"Please enter user name\"/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"description\"\r\n                        label=\"Description\"\r\n                        rules={[{message: 'Please enter brand description'}]}\r\n                    >\r\n                        <TextArea onChange={e => setDescription(e.target.value)} value={props.brand.description}\r\n                                  name=\"description\" rows={4}/>\r\n                    </Form.Item>\r\n                </Col>\r\n            </Row>\r\n            <Uploader saveImage={saveImage} image={props.brand.image}/>\r\n        </Form>\r\n    );\r\n});\r\n\r\nexport default DynamicRule\r\n","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Invoice\\tableHeaders.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\LatestCustomers\\LatestCustomers.js",["781"],"import React, {useEffect, useState} from \"react\";\r\nimport * as url from \"url\";\r\nimport axios from \"axios\";\r\nimport \"../LatestProduct/LatestProduct.css\"\r\nconst LatestCustomer=()=>{\r\n    const [latestCustomers , setLatestCustomers]=useState(\"\")\r\n    useEffect(()=>{\r\n        axios.get(\"totalcontrollers/latestCustomers\")\r\n            .then((response)=>{\r\n                console.log(response)\r\n                setLatestCustomers(response.data.map(data=>(\r\n                    <div className=\"dadada-content customer-content\">\r\n                        <table>\r\n                            <tr>\r\n                                <td>{data.id}</td>\r\n                                <td>{data.firstName}</td>\r\n                                <td>{data.lastName}</td>\r\n                                <td>{data.phone}</td>\r\n                                <td>{data.email}</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                )))\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    },[])\r\n    return(\r\n        <>\r\n            <div className=\"latestProduct-main\">\r\n                <h2>Latest Customers\r\n                </h2>\r\n                <div className=\"dadada\">\r\n                    <table>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>FIRSTNAME</th>\r\n                            <th>LASTNAME</th>\r\n                            <th>PHONE</th>\r\n                            <th>EMAIL</th>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                {latestCustomers}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default LatestCustomer;","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\PendingOrder\\Order-pending.js",["782"],"import React, { useState, useEffect } from 'react';\r\nimport DemoPie from '../PieChart/PieChart'\r\nimport \"../PieChart/PieChart.css\"\r\nimport axios from \"axios\";\r\nimport {Pie} from \"@ant-design/charts\";\r\nconst OrderLeft = (pieTotalOrder,piePendingOrder) => {\r\n    const [allCanclledOrders , setAllCanclledOrder]=useState('');\r\n    const [allDeliveredOrders , setAllDeliveredOrders]=useState('');\r\n    const [allInTransitOrders , setAllInTransitOrders]=useState('');\r\n    const [allPendingOrders , setAllPendingOrders]=useState('');\r\n    const [allRefundOrders , setAllRefundOrders]=useState('');\r\n    const [allVerifiedOrders , setAllVerifiedOrders]=useState('');\r\n    // const [totalCustomers , setTotalCustomers]= useState(\"\")\r\n    // const [totalBrands , setTotalBrands]= useState(\"\")\r\n    // const [totalMenus , setTotalMenus]= useState(\"\")\r\n    // const [totalCollections , setTotalCollections]= useState(\"\")\r\n    // useEffect(()=>{\r\n    //     // axios.get(\"totalcontrollers/allTotal\")\r\n    //     //     .then(response=>{\r\n    //     //         console.log(response)\r\n    //     //         setTotal(response.data)\r\n    //     //        // totalItems=(response.data.allOrders);\r\n    //     //        // totalItems=\"setTotalProducts(response.data.allProducts)\";\r\n    //     //        // totalItems=\"setTotalCustomers(response.data.allCustomers)\";\r\n    //     //        // totalItems=\"setTotalBrands(response.data.allBrands)\";\r\n    //     //        // totalItems=\"setTotalMenus(response.data.allMenus)\";\r\n    //     //        // totalItems=\"setTotalCollections(response.data.allCollections)\";\r\n    //     //     })\r\n    //     //     .catch(err=>{\r\n    //     //         console.log(err)\r\n    //     //     })\r\n    //     axios.get(\"totalcontrollers/pendingOrders\")\r\n    //         .then(response=>{\r\n    //             setPending(response.data);\r\n    //             console.log(response)\r\n    //         })\r\n    //         .catch(err=>{\r\n    //             console.log(err)\r\n    //         })\r\n    // },[])\r\n    useEffect(()=>{\r\n        axios.get(\"totalcontrollers/orderDetails\")\r\n            .then(response=>{\r\n                setAllCanclledOrder(response.data.allCanclledOrders);\r\n                setAllDeliveredOrders(response.data.allDeliveredOrders);\r\n                setAllInTransitOrders(response.data.allInTransitOrders);\r\n                setAllPendingOrders(response.data.allPendingOrders);\r\n                setAllRefundOrders(response.data.allRefundOrders);\r\n                setAllVerifiedOrders(response.data.allVerifiedOrders);\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n    })\r\n    var pieOrder = [\r\n        {\r\n            type: \"Pending\",\r\n            value:allPendingOrders,\r\n        },\r\n        {\r\n            type: 'Delivered',\r\n            value: allDeliveredOrders,\r\n        },\r\n        {\r\n            type: 'InTransit',\r\n            value: allInTransitOrders,\r\n        },\r\n        {\r\n            type: 'Cancelled',\r\n            value: allCanclledOrders,\r\n        },\r\n        {\r\n            type: 'Refund',\r\n            value: allRefundOrders,\r\n        },\r\n        {\r\n            type: \"Verified\",\r\n            value:allVerifiedOrders,\r\n        },\r\n    ];\r\n    var configOrder = {\r\n        appendPadding: 10,\r\n        data: pieOrder,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        radius: 0.9,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-30%',\r\n            content: function content(_ref) {\r\n                var percent = _ref.percent;\r\n                return ''.concat((percent * 100).toFixed(0), '%');\r\n            },\r\n            style: {\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n        interactions: [{ type: 'element-active' }],\r\n    };\r\n    return(\r\n        <div className=\"pieChart-sec\">\r\n            <h2>Orders</h2>\r\n            <Pie {...configOrder} />\r\n        </div>\r\n    )\r\n};\r\nexport default OrderLeft;","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\PieChart\\PieChart.js",[],"C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\LatestProduct\\LatestProduct.js",["783"],"import React, {useEffect, useState} from \"react\";\r\nimport * as url from \"url\";\r\nimport axios from \"axios\";\r\nimport \"./LatestProduct.css\"\r\nconst LatestProduct=()=>{\r\n    const [allProducts , setAllProducts]=useState(\"\")\r\n    useEffect(()=>{\r\n        axios.get(\"totalcontrollers/latestProducts\")\r\n            .then((response)=>{\r\n                console.log(response)\r\n                setAllProducts(response.data.map(data=>(\r\n                    <div className=\"dadada-content\">\r\n                        <table>\r\n                            <tr>\r\n                            <td>{data.id}</td>\r\n                            <td>{data.name}</td>\r\n                            <td>{data.price}</td>\r\n                            <td>{data.quantity}</td>\r\n                            <td>{data.regularPrice}</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                )))\r\n        })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    },[])\r\n    return(\r\n        <>\r\n            <div className=\"latestProduct-main\">\r\n                <h2>Latest Products</h2>\r\n                <div className=\"dadada\">\r\n                    <table>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>PRICE</th>\r\n                            <th>QUANTITY</th>\r\n                            <th>REG.PRICE</th>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                {allProducts}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default LatestProduct;","C:\\React Node\\nutrashop\\nutrashop-admin-react\\src\\containers\\Dashboard\\DashBoard-cards\\DashBoard-card.js",["784"],"import React, {useEffect, useState} from \"react\";\r\nimport \"../DashBoard-cards/DashBoard-card.css\";\r\nimport axios from \"axios\";\r\nimport {Button} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nconst BoardCard=(props)=>{\r\n    const [dasboardProps , setDashboardProps]= useState(0)\r\n    useEffect(()=>{\r\n        axios.get(`/totalControllers/${props.cardcheck}`)\r\n            .then(response=>{\r\n            setDashboardProps(response.data)\r\n        })\r\n            .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    })  \r\n    return(\r\n        <div className=\"board-Card-main\" style={{backgroundColor:props.cardColor}}>\r\n        <Link to={props.checkLink}>\r\n                <div className=\"board-Card-content\">\r\n            <div className=\"board-Card-Label\">\r\n            <p>{props.checkLabel}</p>\r\n            </div>\r\n            <div className=\"board-Card\">\r\n                <p>\r\n                    {dasboardProps}\r\n                </p>\r\n            </div>\r\n                </div>\r\n                <div className=\"board-card-icon\" style={{color:props.checkIconcolor}}>\r\n                    {props.checkIcon}\r\n                </div>\r\n        </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default BoardCard;",{"ruleId":"785","replacedBy":"786"},{"ruleId":"787","replacedBy":"788"},{"ruleId":"789","severity":1,"message":"790","line":3,"column":17,"nodeType":"791","messageId":"792","endLine":3,"endColumn":23},{"ruleId":"789","severity":1,"message":"793","line":7,"column":3,"nodeType":"791","messageId":"792","endLine":7,"endColumn":12},{"ruleId":"794","severity":1,"message":"795","line":84,"column":3,"nodeType":"796","messageId":"797","endLine":120,"endColumn":5},{"ruleId":"798","severity":1,"message":"799","line":10,"column":5,"nodeType":"800","messageId":"801","endLine":41,"endColumn":6},{"ruleId":"798","severity":1,"message":"799","line":8,"column":5,"nodeType":"800","messageId":"801","endLine":33,"endColumn":6},{"ruleId":"798","severity":1,"message":"799","line":8,"column":5,"nodeType":"800","messageId":"801","endLine":30,"endColumn":6},{"ruleId":"798","severity":1,"message":"799","line":8,"column":5,"nodeType":"800","messageId":"801","endLine":34,"endColumn":6},{"ruleId":"798","severity":1,"message":"799","line":7,"column":5,"nodeType":"800","messageId":"801","endLine":13,"endColumn":6},{"ruleId":"798","severity":1,"message":"799","line":8,"column":5,"nodeType":"800","messageId":"801","endLine":30,"endColumn":6},{"ruleId":"798","severity":1,"message":"799","line":9,"column":5,"nodeType":"800","messageId":"801","endLine":31,"endColumn":6},{"ruleId":"798","severity":1,"message":"799","line":8,"column":5,"nodeType":"800","messageId":"801","endLine":30,"endColumn":6},{"ruleId":"798","severity":1,"message":"799","line":7,"column":5,"nodeType":"800","messageId":"801","endLine":13,"endColumn":6},{"ruleId":"798","severity":1,"message":"799","line":8,"column":5,"nodeType":"800","messageId":"801","endLine":19,"endColumn":6},{"ruleId":"798","severity":1,"message":"799","line":10,"column":5,"nodeType":"800","messageId":"801","endLine":48,"endColumn":6},{"ruleId":"798","severity":1,"message":"799","line":8,"column":3,"nodeType":"800","messageId":"801","endLine":36,"endColumn":4},{"ruleId":"789","severity":1,"message":"802","line":2,"column":9,"nodeType":"791","messageId":"792","endLine":2,"endColumn":31},{"ruleId":"798","severity":1,"message":"799","line":8,"column":5,"nodeType":"800","messageId":"801","endLine":25,"endColumn":6},{"ruleId":"798","severity":1,"message":"799","line":11,"column":5,"nodeType":"800","messageId":"801","endLine":26,"endColumn":6},{"ruleId":"789","severity":1,"message":"803","line":10,"column":5,"nodeType":"791","messageId":"792","endLine":10,"endColumn":11},{"ruleId":"789","severity":1,"message":"804","line":14,"column":5,"nodeType":"791","messageId":"792","endLine":14,"endColumn":22},{"ruleId":"789","severity":1,"message":"805","line":15,"column":5,"nodeType":"791","messageId":"792","endLine":15,"endColumn":20},{"ruleId":"789","severity":1,"message":"806","line":19,"column":5,"nodeType":"791","messageId":"792","endLine":19,"endColumn":17},{"ruleId":"789","severity":1,"message":"807","line":20,"column":5,"nodeType":"791","messageId":"792","endLine":20,"endColumn":19},{"ruleId":"789","severity":1,"message":"808","line":21,"column":5,"nodeType":"791","messageId":"792","endLine":21,"endColumn":19},{"ruleId":"789","severity":1,"message":"809","line":25,"column":9,"nodeType":"791","messageId":"792","endLine":25,"endColumn":13},{"ruleId":"789","severity":1,"message":"810","line":26,"column":13,"nodeType":"791","messageId":"792","endLine":26,"endColumn":27},{"ruleId":"789","severity":1,"message":"811","line":28,"column":9,"nodeType":"791","messageId":"792","endLine":28,"endColumn":16},{"ruleId":"789","severity":1,"message":"812","line":30,"column":8,"nodeType":"791","messageId":"792","endLine":30,"endColumn":17},{"ruleId":"789","severity":1,"message":"813","line":32,"column":8,"nodeType":"791","messageId":"792","endLine":32,"endColumn":20},{"ruleId":"789","severity":1,"message":"814","line":33,"column":9,"nodeType":"791","messageId":"792","endLine":33,"endColumn":20},{"ruleId":"789","severity":1,"message":"815","line":34,"column":9,"nodeType":"791","messageId":"792","endLine":34,"endColumn":21},{"ruleId":"789","severity":1,"message":"816","line":43,"column":12,"nodeType":"791","messageId":"792","endLine":43,"endColumn":16},{"ruleId":"789","severity":1,"message":"817","line":43,"column":18,"nodeType":"791","messageId":"792","endLine":43,"endColumn":25},{"ruleId":"818","severity":1,"message":"819","line":82,"column":8,"nodeType":"820","endLine":82,"endColumn":10,"suggestions":"821"},{"ruleId":"789","severity":1,"message":"822","line":4,"column":9,"nodeType":"791","messageId":"792","endLine":4,"endColumn":12},{"ruleId":"789","severity":1,"message":"823","line":4,"column":13,"nodeType":"791","messageId":"792","endLine":4,"endColumn":16},{"ruleId":"789","severity":1,"message":"816","line":13,"column":11,"nodeType":"791","messageId":"792","endLine":13,"endColumn":15},{"ruleId":"789","severity":1,"message":"824","line":20,"column":11,"nodeType":"791","messageId":"792","endLine":20,"endColumn":15},{"ruleId":"789","severity":1,"message":"825","line":10,"column":8,"nodeType":"791","messageId":"792","endLine":10,"endColumn":19},{"ruleId":"789","severity":1,"message":"826","line":11,"column":10,"nodeType":"791","messageId":"792","endLine":11,"endColumn":28},{"ruleId":"789","severity":1,"message":"827","line":3,"column":38,"nodeType":"791","messageId":"792","endLine":3,"endColumn":48},{"ruleId":"789","severity":1,"message":"828","line":1,"column":35,"nodeType":"791","messageId":"792","endLine":1,"endColumn":43},{"ruleId":"789","severity":1,"message":"829","line":2,"column":8,"nodeType":"791","messageId":"792","endLine":2,"endColumn":12},{"ruleId":"789","severity":1,"message":"830","line":18,"column":12,"nodeType":"791","messageId":"792","endLine":18,"endColumn":22},{"ruleId":"789","severity":1,"message":"831","line":18,"column":24,"nodeType":"791","messageId":"792","endLine":18,"endColumn":38},{"ruleId":"818","severity":1,"message":"819","line":29,"column":7,"nodeType":"820","endLine":29,"endColumn":9,"suggestions":"832"},{"ruleId":"789","severity":1,"message":"833","line":3,"column":5,"nodeType":"791","messageId":"792","endLine":3,"endColumn":11},{"ruleId":"789","severity":1,"message":"834","line":4,"column":5,"nodeType":"791","messageId":"792","endLine":4,"endColumn":10},{"ruleId":"789","severity":1,"message":"803","line":10,"column":5,"nodeType":"791","messageId":"792","endLine":10,"endColumn":11},{"ruleId":"789","severity":1,"message":"835","line":12,"column":8,"nodeType":"791","messageId":"792","endLine":12,"endColumn":19},{"ruleId":"789","severity":1,"message":"804","line":15,"column":5,"nodeType":"791","messageId":"792","endLine":15,"endColumn":22},{"ruleId":"789","severity":1,"message":"805","line":16,"column":5,"nodeType":"791","messageId":"792","endLine":16,"endColumn":20},{"ruleId":"789","severity":1,"message":"836","line":19,"column":5,"nodeType":"791","messageId":"792","endLine":19,"endColumn":17},{"ruleId":"789","severity":1,"message":"806","line":20,"column":5,"nodeType":"791","messageId":"792","endLine":20,"endColumn":17},{"ruleId":"789","severity":1,"message":"807","line":21,"column":5,"nodeType":"791","messageId":"792","endLine":21,"endColumn":19},{"ruleId":"789","severity":1,"message":"808","line":22,"column":5,"nodeType":"791","messageId":"792","endLine":22,"endColumn":19},{"ruleId":"789","severity":1,"message":"809","line":26,"column":9,"nodeType":"791","messageId":"792","endLine":26,"endColumn":13},{"ruleId":"789","severity":1,"message":"810","line":27,"column":13,"nodeType":"791","messageId":"792","endLine":27,"endColumn":27},{"ruleId":"789","severity":1,"message":"811","line":29,"column":9,"nodeType":"791","messageId":"792","endLine":29,"endColumn":16},{"ruleId":"789","severity":1,"message":"837","line":30,"column":8,"nodeType":"791","messageId":"792","endLine":30,"endColumn":18},{"ruleId":"789","severity":1,"message":"812","line":31,"column":8,"nodeType":"791","messageId":"792","endLine":31,"endColumn":17},{"ruleId":"789","severity":1,"message":"838","line":33,"column":9,"nodeType":"791","messageId":"792","endLine":33,"endColumn":21},{"ruleId":"789","severity":1,"message":"839","line":41,"column":11,"nodeType":"791","messageId":"792","endLine":41,"endColumn":19},{"ruleId":"789","severity":1,"message":"809","line":10,"column":9,"nodeType":"791","messageId":"792","endLine":10,"endColumn":13},{"ruleId":"840","severity":1,"message":"841","line":57,"column":39,"nodeType":"842","messageId":"843","endLine":57,"endColumn":40},{"ruleId":"818","severity":1,"message":"819","line":24,"column":8,"nodeType":"820","endLine":24,"endColumn":10,"suggestions":"844"},{"ruleId":"818","severity":1,"message":"819","line":27,"column":8,"nodeType":"820","endLine":27,"endColumn":10,"suggestions":"845"},{"ruleId":"818","severity":1,"message":"846","line":37,"column":8,"nodeType":"820","endLine":37,"endColumn":21,"suggestions":"847"},{"ruleId":"818","severity":1,"message":"848","line":48,"column":8,"nodeType":"820","endLine":48,"endColumn":18,"suggestions":"849"},{"ruleId":"789","severity":1,"message":"850","line":70,"column":12,"nodeType":"791","messageId":"792","endLine":70,"endColumn":20},{"ruleId":"789","severity":1,"message":"827","line":3,"column":31,"nodeType":"791","messageId":"792","endLine":3,"endColumn":41},{"ruleId":"789","severity":1,"message":"851","line":3,"column":60,"nodeType":"791","messageId":"792","endLine":3,"endColumn":64},{"ruleId":"789","severity":1,"message":"852","line":8,"column":5,"nodeType":"791","messageId":"792","endLine":8,"endColumn":19},{"ruleId":"789","severity":1,"message":"853","line":16,"column":8,"nodeType":"791","messageId":"792","endLine":16,"endColumn":23},{"ruleId":"818","severity":1,"message":"846","line":54,"column":8,"nodeType":"820","endLine":54,"endColumn":27,"suggestions":"854"},{"ruleId":"818","severity":1,"message":"855","line":65,"column":8,"nodeType":"820","endLine":65,"endColumn":22,"suggestions":"856"},{"ruleId":"818","severity":1,"message":"857","line":69,"column":7,"nodeType":"820","endLine":69,"endColumn":9,"suggestions":"858"},{"ruleId":"818","severity":1,"message":"857","line":72,"column":7,"nodeType":"820","endLine":72,"endColumn":9,"suggestions":"859"},{"ruleId":"818","severity":1,"message":"860","line":99,"column":8,"nodeType":"820","endLine":99,"endColumn":10,"suggestions":"861"},{"ruleId":"789","severity":1,"message":"862","line":151,"column":15,"nodeType":"791","messageId":"792","endLine":151,"endColumn":23},{"ruleId":"789","severity":1,"message":"863","line":2,"column":22,"nodeType":"791","messageId":"792","endLine":2,"endColumn":30},{"ruleId":"789","severity":1,"message":"822","line":2,"column":40,"nodeType":"791","messageId":"792","endLine":2,"endColumn":43},{"ruleId":"789","severity":1,"message":"823","line":2,"column":45,"nodeType":"791","messageId":"792","endLine":2,"endColumn":48},{"ruleId":"789","severity":1,"message":"864","line":2,"column":50,"nodeType":"791","messageId":"792","endLine":2,"endColumn":58},{"ruleId":"789","severity":1,"message":"865","line":2,"column":68,"nodeType":"791","messageId":"792","endLine":2,"endColumn":80},{"ruleId":"789","severity":1,"message":"810","line":5,"column":13,"nodeType":"791","messageId":"792","endLine":5,"endColumn":27},{"ruleId":"789","severity":1,"message":"866","line":6,"column":8,"nodeType":"791","messageId":"792","endLine":6,"endColumn":16},{"ruleId":"789","severity":1,"message":"867","line":90,"column":11,"nodeType":"791","messageId":"792","endLine":90,"endColumn":20},{"ruleId":"789","severity":1,"message":"868","line":2,"column":28,"nodeType":"791","messageId":"792","endLine":2,"endColumn":36},{"ruleId":"818","severity":1,"message":"846","line":66,"column":8,"nodeType":"820","endLine":66,"endColumn":27,"suggestions":"869"},{"ruleId":"818","severity":1,"message":"857","line":69,"column":8,"nodeType":"820","endLine":69,"endColumn":10,"suggestions":"870"},{"ruleId":"818","severity":1,"message":"857","line":72,"column":8,"nodeType":"820","endLine":72,"endColumn":10,"suggestions":"871"},{"ruleId":"818","severity":1,"message":"855","line":82,"column":8,"nodeType":"820","endLine":82,"endColumn":22,"suggestions":"872"},{"ruleId":"873","severity":1,"message":"874","line":106,"column":19,"nodeType":"842","messageId":"875","endLine":106,"endColumn":21},{"ruleId":"789","severity":1,"message":"862","line":188,"column":15,"nodeType":"791","messageId":"792","endLine":188,"endColumn":23},{"ruleId":"789","severity":1,"message":"876","line":6,"column":13,"nodeType":"791","messageId":"792","endLine":6,"endColumn":24},{"ruleId":"818","severity":1,"message":"857","line":20,"column":8,"nodeType":"820","endLine":20,"endColumn":10,"suggestions":"877"},{"ruleId":"789","severity":1,"message":"863","line":2,"column":22,"nodeType":"791","messageId":"792","endLine":2,"endColumn":30},{"ruleId":"789","severity":1,"message":"822","line":2,"column":40,"nodeType":"791","messageId":"792","endLine":2,"endColumn":43},{"ruleId":"789","severity":1,"message":"823","line":2,"column":45,"nodeType":"791","messageId":"792","endLine":2,"endColumn":48},{"ruleId":"789","severity":1,"message":"864","line":2,"column":50,"nodeType":"791","messageId":"792","endLine":2,"endColumn":58},{"ruleId":"789","severity":1,"message":"865","line":2,"column":68,"nodeType":"791","messageId":"792","endLine":2,"endColumn":80},{"ruleId":"789","severity":1,"message":"810","line":5,"column":13,"nodeType":"791","messageId":"792","endLine":5,"endColumn":27},{"ruleId":"789","severity":1,"message":"866","line":6,"column":8,"nodeType":"791","messageId":"792","endLine":6,"endColumn":16},{"ruleId":"789","severity":1,"message":"878","line":7,"column":9,"nodeType":"791","messageId":"792","endLine":7,"endColumn":19},{"ruleId":"789","severity":1,"message":"879","line":45,"column":12,"nodeType":"791","messageId":"792","endLine":45,"endColumn":21},{"ruleId":"789","severity":1,"message":"880","line":45,"column":23,"nodeType":"791","messageId":"792","endLine":45,"endColumn":35},{"ruleId":"789","severity":1,"message":"881","line":46,"column":12,"nodeType":"791","messageId":"792","endLine":46,"endColumn":20},{"ruleId":"789","severity":1,"message":"882","line":46,"column":22,"nodeType":"791","messageId":"792","endLine":46,"endColumn":33},{"ruleId":"789","severity":1,"message":"883","line":47,"column":12,"nodeType":"791","messageId":"792","endLine":47,"endColumn":17},{"ruleId":"789","severity":1,"message":"884","line":47,"column":19,"nodeType":"791","messageId":"792","endLine":47,"endColumn":27},{"ruleId":"818","severity":1,"message":"860","line":66,"column":7,"nodeType":"820","endLine":66,"endColumn":9,"suggestions":"885"},{"ruleId":"789","severity":1,"message":"867","line":109,"column":11,"nodeType":"791","messageId":"792","endLine":109,"endColumn":20},{"ruleId":"789","severity":1,"message":"886","line":2,"column":17,"nodeType":"791","messageId":"792","endLine":2,"endColumn":21},{"ruleId":"789","severity":1,"message":"823","line":2,"column":23,"nodeType":"791","messageId":"792","endLine":2,"endColumn":26},{"ruleId":"789","severity":1,"message":"822","line":2,"column":45,"nodeType":"791","messageId":"792","endLine":2,"endColumn":48},{"ruleId":"789","severity":1,"message":"887","line":2,"column":50,"nodeType":"791","messageId":"792","endLine":2,"endColumn":55},{"ruleId":"789","severity":1,"message":"836","line":3,"column":9,"nodeType":"791","messageId":"792","endLine":3,"endColumn":21},{"ruleId":"789","severity":1,"message":"812","line":8,"column":8,"nodeType":"791","messageId":"792","endLine":8,"endColumn":17},{"ruleId":"789","severity":1,"message":"888","line":2,"column":47,"nodeType":"791","messageId":"792","endLine":2,"endColumn":53},{"ruleId":"789","severity":1,"message":"889","line":3,"column":9,"nodeType":"791","messageId":"792","endLine":3,"endColumn":22},{"ruleId":"789","severity":1,"message":"890","line":3,"column":40,"nodeType":"791","messageId":"792","endLine":3,"endColumn":53},{"ruleId":"789","severity":1,"message":"891","line":12,"column":8,"nodeType":"791","messageId":"792","endLine":12,"endColumn":14},{"ruleId":"789","severity":1,"message":"827","line":3,"column":31,"nodeType":"791","messageId":"792","endLine":3,"endColumn":41},{"ruleId":"818","severity":1,"message":"819","line":20,"column":8,"nodeType":"820","endLine":20,"endColumn":10,"suggestions":"892"},{"ruleId":"818","severity":1,"message":"893","line":33,"column":8,"nodeType":"820","endLine":33,"endColumn":24,"suggestions":"894"},{"ruleId":"818","severity":1,"message":"895","line":52,"column":7,"nodeType":"820","endLine":52,"endColumn":34,"suggestions":"896"},{"ruleId":"873","severity":1,"message":"874","line":57,"column":28,"nodeType":"842","messageId":"875","endLine":57,"endColumn":30},{"ruleId":"789","severity":1,"message":"897","line":6,"column":5,"nodeType":"791","messageId":"792","endLine":6,"endColumn":12},{"ruleId":"789","severity":1,"message":"888","line":8,"column":5,"nodeType":"791","messageId":"792","endLine":8,"endColumn":11},{"ruleId":"789","severity":1,"message":"806","line":15,"column":5,"nodeType":"791","messageId":"792","endLine":15,"endColumn":17},{"ruleId":"789","severity":1,"message":"898","line":21,"column":9,"nodeType":"791","messageId":"792","endLine":21,"endColumn":28},{"ruleId":"899","severity":1,"message":"900","line":58,"column":32,"nodeType":"901","messageId":"902","endLine":58,"endColumn":34},{"ruleId":"818","severity":1,"message":"860","line":70,"column":8,"nodeType":"820","endLine":70,"endColumn":10,"suggestions":"903"},{"ruleId":"789","severity":1,"message":"862","line":73,"column":15,"nodeType":"791","messageId":"792","endLine":73,"endColumn":23},{"ruleId":"789","severity":1,"message":"904","line":2,"column":9,"nodeType":"791","messageId":"792","endLine":2,"endColumn":14},{"ruleId":"789","severity":1,"message":"813","line":2,"column":8,"nodeType":"791","messageId":"792","endLine":2,"endColumn":20},{"ruleId":"789","severity":1,"message":"904","line":3,"column":9,"nodeType":"791","messageId":"792","endLine":3,"endColumn":14},{"ruleId":"789","severity":1,"message":"813","line":2,"column":8,"nodeType":"791","messageId":"792","endLine":2,"endColumn":20},{"ruleId":"789","severity":1,"message":"904","line":3,"column":9,"nodeType":"791","messageId":"792","endLine":3,"endColumn":14},{"ruleId":"789","severity":1,"message":"904","line":2,"column":9,"nodeType":"791","messageId":"792","endLine":2,"endColumn":14},{"ruleId":"789","severity":1,"message":"904","line":2,"column":9,"nodeType":"791","messageId":"792","endLine":2,"endColumn":14},{"ruleId":"789","severity":1,"message":"904","line":2,"column":9,"nodeType":"791","messageId":"792","endLine":2,"endColumn":14},{"ruleId":"789","severity":1,"message":"905","line":2,"column":9,"nodeType":"791","messageId":"792","endLine":2,"endColumn":24},{"ruleId":"789","severity":1,"message":"886","line":3,"column":9,"nodeType":"791","messageId":"792","endLine":3,"endColumn":13},{"ruleId":"789","severity":1,"message":"906","line":4,"column":9,"nodeType":"791","messageId":"792","endLine":4,"endColumn":20},{"ruleId":"789","severity":1,"message":"907","line":4,"column":22,"nodeType":"791","messageId":"792","endLine":4,"endColumn":33},{"ruleId":"818","severity":1,"message":"908","line":30,"column":8,"nodeType":"820","endLine":30,"endColumn":26,"suggestions":"909"},{"ruleId":"789","severity":1,"message":"910","line":47,"column":11,"nodeType":"791","messageId":"792","endLine":47,"endColumn":28},{"ruleId":"911","severity":1,"message":"912","line":125,"column":29,"nodeType":"913","endLine":125,"endColumn":32},{"ruleId":"789","severity":1,"message":"914","line":2,"column":25,"nodeType":"791","messageId":"792","endLine":2,"endColumn":29},{"ruleId":"789","severity":1,"message":"823","line":2,"column":31,"nodeType":"791","messageId":"792","endLine":2,"endColumn":34},{"ruleId":"789","severity":1,"message":"822","line":2,"column":36,"nodeType":"791","messageId":"792","endLine":2,"endColumn":39},{"ruleId":"789","severity":1,"message":"834","line":2,"column":41,"nodeType":"791","messageId":"792","endLine":2,"endColumn":46},{"ruleId":"789","severity":1,"message":"897","line":2,"column":48,"nodeType":"791","messageId":"792","endLine":2,"endColumn":55},{"ruleId":"789","severity":1,"message":"915","line":1,"column":16,"nodeType":"791","messageId":"792","endLine":1,"endColumn":25},{"ruleId":"789","severity":1,"message":"866","line":3,"column":8,"nodeType":"791","messageId":"792","endLine":3,"endColumn":16},{"ruleId":"789","severity":1,"message":"916","line":15,"column":12,"nodeType":"791","messageId":"792","endLine":15,"endColumn":19},{"ruleId":"818","severity":1,"message":"846","line":33,"column":8,"nodeType":"820","endLine":33,"endColumn":27,"suggestions":"917"},{"ruleId":"818","severity":1,"message":"857","line":41,"column":7,"nodeType":"820","endLine":41,"endColumn":9,"suggestions":"918"},{"ruleId":"789","severity":1,"message":"887","line":1,"column":30,"nodeType":"791","messageId":"792","endLine":1,"endColumn":35},{"ruleId":"789","severity":1,"message":"836","line":3,"column":26,"nodeType":"791","messageId":"792","endLine":3,"endColumn":38},{"ruleId":"789","severity":1,"message":"809","line":5,"column":10,"nodeType":"791","messageId":"792","endLine":5,"endColumn":14},{"ruleId":"789","severity":1,"message":"864","line":1,"column":30,"nodeType":"791","messageId":"792","endLine":1,"endColumn":38},{"ruleId":"789","severity":1,"message":"809","line":3,"column":9,"nodeType":"791","messageId":"792","endLine":3,"endColumn":13},{"ruleId":"789","severity":1,"message":"887","line":4,"column":23,"nodeType":"791","messageId":"792","endLine":4,"endColumn":28},{"ruleId":"789","severity":1,"message":"890","line":5,"column":24,"nodeType":"791","messageId":"792","endLine":5,"endColumn":37},{"ruleId":"789","severity":1,"message":"890","line":5,"column":24,"nodeType":"791","messageId":"792","endLine":5,"endColumn":37},{"ruleId":"789","severity":1,"message":"890","line":5,"column":24,"nodeType":"791","messageId":"792","endLine":5,"endColumn":37},{"ruleId":"789","severity":1,"message":"890","line":5,"column":24,"nodeType":"791","messageId":"792","endLine":5,"endColumn":37},{"ruleId":"789","severity":1,"message":"919","line":2,"column":56,"nodeType":"791","messageId":"792","endLine":2,"endColumn":64},{"ruleId":"789","severity":1,"message":"920","line":2,"column":66,"nodeType":"791","messageId":"792","endLine":2,"endColumn":70},{"ruleId":"789","severity":1,"message":"890","line":5,"column":24,"nodeType":"791","messageId":"792","endLine":5,"endColumn":37},{"ruleId":"789","severity":1,"message":"864","line":1,"column":17,"nodeType":"791","messageId":"792","endLine":1,"endColumn":25},{"ruleId":"789","severity":1,"message":"853","line":5,"column":8,"nodeType":"791","messageId":"792","endLine":5,"endColumn":23},{"ruleId":"818","severity":1,"message":"921","line":24,"column":8,"nodeType":"820","endLine":24,"endColumn":20,"suggestions":"922"},{"ruleId":"818","severity":1,"message":"923","line":32,"column":8,"nodeType":"820","endLine":32,"endColumn":10,"suggestions":"924"},{"ruleId":"818","severity":1,"message":"846","line":45,"column":8,"nodeType":"820","endLine":45,"endColumn":27,"suggestions":"925"},{"ruleId":"789","severity":1,"message":"926","line":52,"column":27,"nodeType":"791","messageId":"792","endLine":52,"endColumn":33},{"ruleId":"873","severity":1,"message":"874","line":68,"column":52,"nodeType":"842","messageId":"875","endLine":68,"endColumn":54},{"ruleId":"789","severity":1,"message":"914","line":2,"column":25,"nodeType":"791","messageId":"792","endLine":2,"endColumn":29},{"ruleId":"789","severity":1,"message":"823","line":2,"column":31,"nodeType":"791","messageId":"792","endLine":2,"endColumn":34},{"ruleId":"789","severity":1,"message":"822","line":2,"column":36,"nodeType":"791","messageId":"792","endLine":2,"endColumn":39},{"ruleId":"789","severity":1,"message":"897","line":2,"column":48,"nodeType":"791","messageId":"792","endLine":2,"endColumn":55},{"ruleId":"789","severity":1,"message":"927","line":8,"column":8,"nodeType":"791","messageId":"792","endLine":8,"endColumn":16},{"ruleId":"789","severity":1,"message":"823","line":2,"column":25,"nodeType":"791","messageId":"792","endLine":2,"endColumn":28},{"ruleId":"789","severity":1,"message":"822","line":2,"column":30,"nodeType":"791","messageId":"792","endLine":2,"endColumn":33},{"ruleId":"789","severity":1,"message":"928","line":2,"column":54,"nodeType":"791","messageId":"792","endLine":2,"endColumn":59},{"ruleId":"789","severity":1,"message":"929","line":5,"column":8,"nodeType":"791","messageId":"792","endLine":5,"endColumn":30},{"ruleId":"789","severity":1,"message":"930","line":8,"column":7,"nodeType":"791","messageId":"792","endLine":8,"endColumn":21},{"ruleId":"789","severity":1,"message":"813","line":7,"column":8,"nodeType":"791","messageId":"792","endLine":7,"endColumn":20},{"ruleId":"899","severity":1,"message":"900","line":104,"column":62,"nodeType":"901","messageId":"902","endLine":104,"endColumn":64},{"ruleId":"789","severity":1,"message":"914","line":2,"column":25,"nodeType":"791","messageId":"792","endLine":2,"endColumn":29},{"ruleId":"789","severity":1,"message":"823","line":2,"column":31,"nodeType":"791","messageId":"792","endLine":2,"endColumn":34},{"ruleId":"789","severity":1,"message":"822","line":2,"column":36,"nodeType":"791","messageId":"792","endLine":2,"endColumn":39},{"ruleId":"789","severity":1,"message":"897","line":2,"column":48,"nodeType":"791","messageId":"792","endLine":2,"endColumn":55},{"ruleId":"789","severity":1,"message":"927","line":9,"column":8,"nodeType":"791","messageId":"792","endLine":9,"endColumn":16},{"ruleId":"789","severity":1,"message":"914","line":2,"column":25,"nodeType":"791","messageId":"792","endLine":2,"endColumn":29},{"ruleId":"789","severity":1,"message":"823","line":2,"column":31,"nodeType":"791","messageId":"792","endLine":2,"endColumn":34},{"ruleId":"789","severity":1,"message":"822","line":2,"column":36,"nodeType":"791","messageId":"792","endLine":2,"endColumn":39},{"ruleId":"789","severity":1,"message":"897","line":2,"column":48,"nodeType":"791","messageId":"792","endLine":2,"endColumn":55},{"ruleId":"789","severity":1,"message":"927","line":9,"column":8,"nodeType":"791","messageId":"792","endLine":9,"endColumn":16},{"ruleId":"789","severity":1,"message":"809","line":7,"column":9,"nodeType":"791","messageId":"792","endLine":7,"endColumn":13},{"ruleId":"789","severity":1,"message":"927","line":10,"column":8,"nodeType":"791","messageId":"792","endLine":10,"endColumn":16},{"ruleId":"789","severity":1,"message":"915","line":1,"column":16,"nodeType":"791","messageId":"792","endLine":1,"endColumn":25},{"ruleId":"789","severity":1,"message":"931","line":4,"column":10,"nodeType":"791","messageId":"792","endLine":4,"endColumn":25},{"ruleId":"789","severity":1,"message":"932","line":6,"column":3,"nodeType":"791","messageId":"792","endLine":6,"endColumn":18},{"ruleId":"789","severity":1,"message":"933","line":7,"column":3,"nodeType":"791","messageId":"792","endLine":7,"endColumn":19},{"ruleId":"789","severity":1,"message":"934","line":8,"column":3,"nodeType":"791","messageId":"792","endLine":8,"endColumn":20},{"ruleId":"789","severity":1,"message":"935","line":9,"column":3,"nodeType":"791","messageId":"792","endLine":9,"endColumn":22},{"ruleId":"789","severity":1,"message":"936","line":10,"column":3,"nodeType":"791","messageId":"792","endLine":10,"endColumn":17},{"ruleId":"789","severity":1,"message":"937","line":11,"column":3,"nodeType":"791","messageId":"792","endLine":11,"endColumn":21},{"ruleId":"789","severity":1,"message":"938","line":12,"column":3,"nodeType":"791","messageId":"792","endLine":12,"endColumn":14},{"ruleId":"789","severity":1,"message":"939","line":13,"column":3,"nodeType":"791","messageId":"792","endLine":13,"endColumn":23},{"ruleId":"789","severity":1,"message":"940","line":14,"column":3,"nodeType":"791","messageId":"792","endLine":14,"endColumn":15},{"ruleId":"789","severity":1,"message":"941","line":15,"column":3,"nodeType":"791","messageId":"792","endLine":15,"endColumn":15},{"ruleId":"789","severity":1,"message":"942","line":17,"column":8,"nodeType":"791","messageId":"792","endLine":17,"endColumn":12},{"ruleId":"789","severity":1,"message":"943","line":20,"column":8,"nodeType":"791","messageId":"792","endLine":20,"endColumn":13},{"ruleId":"789","severity":1,"message":"944","line":27,"column":10,"nodeType":"791","messageId":"792","endLine":27,"endColumn":20},{"ruleId":"789","severity":1,"message":"945","line":27,"column":22,"nodeType":"791","messageId":"792","endLine":27,"endColumn":35},{"ruleId":"818","severity":1,"message":"946","line":33,"column":3,"nodeType":"791","endLine":33,"endColumn":12,"suggestions":"947"},{"ruleId":"818","severity":1,"message":"819","line":41,"column":6,"nodeType":"820","endLine":41,"endColumn":17,"suggestions":"948"},{"ruleId":"789","severity":1,"message":"915","line":1,"column":16,"nodeType":"791","messageId":"792","endLine":1,"endColumn":25},{"ruleId":"873","severity":1,"message":"874","line":32,"column":32,"nodeType":"842","messageId":"875","endLine":32,"endColumn":34},{"ruleId":"873","severity":1,"message":"874","line":34,"column":38,"nodeType":"842","messageId":"875","endLine":34,"endColumn":40},{"ruleId":"873","severity":1,"message":"874","line":36,"column":38,"nodeType":"842","messageId":"875","endLine":36,"endColumn":40},{"ruleId":"873","severity":1,"message":"874","line":38,"column":38,"nodeType":"842","messageId":"875","endLine":38,"endColumn":40},{"ruleId":"873","severity":1,"message":"874","line":40,"column":38,"nodeType":"842","messageId":"875","endLine":40,"endColumn":40},{"ruleId":"873","severity":1,"message":"874","line":42,"column":38,"nodeType":"842","messageId":"875","endLine":42,"endColumn":40},{"ruleId":"873","severity":1,"message":"874","line":45,"column":37,"nodeType":"842","messageId":"875","endLine":45,"endColumn":39},{"ruleId":"873","severity":1,"message":"874","line":47,"column":43,"nodeType":"842","messageId":"875","endLine":47,"endColumn":45},{"ruleId":"873","severity":1,"message":"874","line":49,"column":43,"nodeType":"842","messageId":"875","endLine":49,"endColumn":45},{"ruleId":"873","severity":1,"message":"874","line":51,"column":42,"nodeType":"842","messageId":"875","endLine":51,"endColumn":44},{"ruleId":"873","severity":1,"message":"874","line":53,"column":42,"nodeType":"842","messageId":"875","endLine":53,"endColumn":44},{"ruleId":"873","severity":1,"message":"874","line":55,"column":42,"nodeType":"842","messageId":"875","endLine":55,"endColumn":44},{"ruleId":"789","severity":1,"message":"949","line":8,"column":9,"nodeType":"791","messageId":"792","endLine":8,"endColumn":13},{"ruleId":"899","severity":1,"message":"900","line":28,"column":50,"nodeType":"901","messageId":"902","endLine":28,"endColumn":52},{"ruleId":"818","severity":1,"message":"950","line":27,"column":8,"nodeType":"820","endLine":27,"endColumn":27,"suggestions":"951"},{"ruleId":"818","severity":1,"message":"952","line":37,"column":8,"nodeType":"820","endLine":37,"endColumn":26,"suggestions":"953"},{"ruleId":"789","severity":1,"message":"926","line":43,"column":27,"nodeType":"791","messageId":"792","endLine":43,"endColumn":33},{"ruleId":"818","severity":1,"message":"921","line":23,"column":8,"nodeType":"820","endLine":23,"endColumn":24,"suggestions":"954"},{"ruleId":"789","severity":1,"message":"926","line":29,"column":27,"nodeType":"791","messageId":"792","endLine":29,"endColumn":33},{"ruleId":"785","replacedBy":"955"},{"ruleId":"787","replacedBy":"956"},{"ruleId":"818","severity":1,"message":"921","line":20,"column":8,"nodeType":"820","endLine":20,"endColumn":21,"suggestions":"957"},{"ruleId":"789","severity":1,"message":"926","line":26,"column":27,"nodeType":"791","messageId":"792","endLine":26,"endColumn":33},{"ruleId":"873","severity":1,"message":"874","line":45,"column":52,"nodeType":"842","messageId":"875","endLine":45,"endColumn":54},{"ruleId":"789","severity":1,"message":"958","line":63,"column":11,"nodeType":"791","messageId":"792","endLine":63,"endColumn":19},{"ruleId":"789","severity":1,"message":"959","line":2,"column":13,"nodeType":"791","messageId":"792","endLine":2,"endColumn":16},{"ruleId":"789","severity":1,"message":"960","line":2,"column":8,"nodeType":"791","messageId":"792","endLine":2,"endColumn":15},{"ruleId":"789","severity":1,"message":"959","line":2,"column":13,"nodeType":"791","messageId":"792","endLine":2,"endColumn":16},{"ruleId":"789","severity":1,"message":"833","line":4,"column":9,"nodeType":"791","messageId":"792","endLine":4,"endColumn":15},"no-native-reassign",["961"],"no-negated-in-lhs",["962"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'STORE_CHANGE_IN_ORDERS' is defined but never used.","'Upload' is defined but never used.","'ArrowDownOutlined' is defined but never used.","'ArrowUpOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'SearchOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'Link' is defined but never used.","'actionCreators' is defined but never used.","'connect' is defined but never used.","'DeletePop' is defined but never used.","'ReactTimeAgo' is defined but never used.","'dispatchKey' is defined but never used.","'editQuestion' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["963"],"'Row' is defined but never used.","'Col' is defined but never used.","'cols' is assigned a value but never used.","'invoiceData' is defined but never used.","'ConsoleSqlOutlined' is defined but never used.","'Popconfirm' is defined but never used.","'useState' is defined but never used.","'logo' is defined but never used.","'prevBanner' is assigned a value but never used.","'setPrevBanners' is assigned a value but never used.",["964"],"'Button' is defined but never used.","'Input' is defined but never used.","'Highlighter' is defined but never used.","'EditOutlined' is defined but never used.","'MediaQuery' is defined but never used.","'storeReviews' is defined but never used.","'dispatch' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["965"],["966"],"React Hook useEffect has a missing dependency: 'collectionsArray'. Either include it or remove the dependency array.",["967"],"React Hook useEffect has a missing dependency: 'productsArray'. Either include it or remove the dependency array.",["968"],"'mobileId' is assigned a value but never used.","'Form' is defined but never used.","'DeleteOutlined' is defined but never used.","'ReactHtmlParser' is defined but never used.",["969"],"React Hook useEffect has a missing dependency: 'brandsArray'. Either include it or remove the dependency array.",["970"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["971"],["972"],"React Hook useEffect has missing dependencies: 'form' and 'id'. Either include them or remove the dependency array.",["973"],"'validate' is assigned a value but never used.","'Cascader' is defined but never used.","'Checkbox' is defined but never used.","'AutoComplete' is defined but never used.","'Uploader' is defined but never used.","'saveImage' is assigned a value but never used.","'Collapse' is defined but never used.",["974"],["975"],["976"],["977"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","'authActions' is defined but never used.",["978"],"'storeUsers' is defined but never used.","'firstName' is assigned a value but never used.","'setFirstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'setLastName' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.",["979"],"'Card' is defined but never used.","'Space' is defined but never used.","'Switch' is defined but never used.","'CheckOutlined' is defined but never used.","'CloseOutlined' is defined but never used.","'Column' is assigned a value but never used.",["980"],"React Hook useEffect has a missing dependency: 'allAtt'. Either include it or remove the dependency array.",["981"],"React Hook useEffect has a missing dependency: 'totalAttNumber'. Either include it or remove the dependency array.",["982"],"'message' is defined but never used.","'storeVariantsWithId' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["983"],"'React' is defined but never used.","'storeAttributes' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'attributesArray'. Either include it or remove the dependency array.",["984"],"'callBackFunctions' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Spin' is defined but never used.","'Component' is defined but never used.","'visible' is assigned a value but never used.",["985"],["986"],"'Dropdown' is defined but never used.","'Menu' is defined but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["987"],"React Hook useEffect has a missing dependency: 'menu.Collection'. Either include it or remove the dependency array.",["988"],["989"],"'values' is assigned a value but never used.","'TextArea' is assigned a value but never used.","'Badge' is defined but never used.","'InvoiceTableBlankSpace' is defined but never used.","'tableRowsCount' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","'DesktopOutlined' is defined but never used.","'PieChartOutlined' is defined but never used.","'DashboardOutlined' is defined but never used.","'OrderedListOutlined' is defined but never used.","'AmazonOutlined' is defined but never used.","'MergeCellsOutlined' is defined but never used.","'TagOutlined' is defined but never used.","'ShoppingCartOutlined' is defined but never used.","'ShopOutlined' is defined but never used.","'MenuOutlined' is defined but never used.","'Icon' is defined but never used.","'axios' is defined but never used.","'orderCount' is assigned a value but never used.","'setOrderCount' is assigned a value but never used.","React Hook useEffect contains a call to 'setPath'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["990"],["991"],"'Meta' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'parentCollectionArray'. Either include it or remove the dependency array.",["992"],"React Hook useEffect has missing dependencies: 'form' and 'props.pids'. Either include them or remove the dependency array. If 'setParentCollection' needs the current value of 'props.pids', you can also switch to useReducer instead of useState and read 'props.pids' in the reducer.",["993"],["994"],["961"],["962"],["995"],"'onChange' is assigned a value but never used.","'url' is defined but never used.","'DemoPie' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"996","fix":"997"},{"desc":"996","fix":"998"},{"desc":"996","fix":"999"},{"desc":"996","fix":"1000"},{"desc":"1001","fix":"1002"},{"desc":"1003","fix":"1004"},{"desc":"1005","fix":"1006"},{"desc":"1007","fix":"1008"},{"desc":"1009","fix":"1010"},{"desc":"1009","fix":"1011"},{"desc":"1012","fix":"1013"},{"desc":"1005","fix":"1014"},{"desc":"1009","fix":"1015"},{"desc":"1009","fix":"1016"},{"desc":"1007","fix":"1017"},{"desc":"1009","fix":"1018"},{"desc":"1012","fix":"1019"},{"desc":"996","fix":"1020"},{"desc":"1021","fix":"1022"},{"desc":"1023","fix":"1024"},{"desc":"1012","fix":"1025"},{"desc":"1026","fix":"1027"},{"desc":"1005","fix":"1028"},{"desc":"1009","fix":"1029"},{"desc":"1030","fix":"1031"},{"desc":"1032","fix":"1033"},{"desc":"1005","fix":"1034"},{"desc":"1035","fix":"1036"},{"desc":"1037","fix":"1038"},{"desc":"1039","fix":"1040"},{"desc":"1041","fix":"1042"},{"desc":"1043","fix":"1044"},{"desc":"1045","fix":"1046"},"Update the dependencies array to be: [dispatch]",{"range":"1047","text":"1048"},{"range":"1049","text":"1048"},{"range":"1050","text":"1048"},{"range":"1051","text":"1048"},"Update the dependencies array to be: [collections, collectionsArray]",{"range":"1052","text":"1053"},"Update the dependencies array to be: [products, productsArray]",{"range":"1054","text":"1055"},"Update the dependencies array to be: [collectionsArray, props.collections]",{"range":"1056","text":"1057"},"Update the dependencies array to be: [brandsArray, props.brands]",{"range":"1058","text":"1059"},"Update the dependencies array to be: [props]",{"range":"1060","text":"1061"},{"range":"1062","text":"1061"},"Update the dependencies array to be: [form, id]",{"range":"1063","text":"1064"},{"range":"1065","text":"1057"},{"range":"1066","text":"1061"},{"range":"1067","text":"1061"},{"range":"1068","text":"1059"},{"range":"1069","text":"1061"},{"range":"1070","text":"1064"},{"range":"1071","text":"1048"},"Update the dependencies array to be: [allAtt, callBackAttKey]",{"range":"1072","text":"1073"},"Update the dependencies array to be: [attributeAndVariationHtml, totalAttNumber]",{"range":"1074","text":"1075"},{"range":"1076","text":"1064"},"Update the dependencies array to be: [attributesArray, props.attributes]",{"range":"1077","text":"1078"},{"range":"1079","text":"1057"},{"range":"1080","text":"1061"},"Update the dependencies array to be: [form, props.menu]",{"range":"1081","text":"1082"},"Update the dependencies array to be: [menu.Collection]",{"range":"1083","text":"1084"},{"range":"1085","text":"1057"},"Add dependencies array: []",{"range":"1086","text":"1087"},"Update the dependencies array to be: [allUnread, dispatch]",{"range":"1088","text":"1089"},"Update the dependencies array to be: [parentCollectionArray, props.collections]",{"range":"1090","text":"1091"},"Update the dependencies array to be: [form, props.collection, props.pids]",{"range":"1092","text":"1093"},"Update the dependencies array to be: [form, props.customer]",{"range":"1094","text":"1095"},"Update the dependencies array to be: [form, props.brand]",{"range":"1096","text":"1097"},[2448,2450],"[dispatch]",[1047,1049],[1049,1051],[1122,1124],[1470,1483],"[collections, collectionsArray]",[1811,1821],"[products, productsArray]",[2057,2076],"[collectionsArray, props.collections]",[2458,2472],"[brandsArray, props.brands]",[2544,2546],"[props]",[2620,2622],[3643,3645],"[form, id]",[2529,2548],[2621,2623],[2700,2702],[3026,3040],[834,836],[1821,1823],[895,897],[1457,1473],"[allAtt, callBackAttKey]",[2187,2214],"[attributeAndVariationHtml, totalAttNumber]",[2456,2458],[1156,1174],"[attributesArray, props.attributes]",[1343,1362],[1502,1504],[827,839],"[form, props.menu]",[1055,1057],"[menu.Collection]",[1428,1447],[1164,1164],", []",[1233,1244],"[allUnread, dispatch]",[1221,1240],"[parentCollectionArray, props.collections]",[1611,1629],"[form, props.collection, props.pids]",[918,934],"[form, props.customer]",[855,868],"[form, props.brand]"]